webpackJsonp([25],{251:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function l(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),u=function(e,t){return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    padding: 20px;\n    background: orange;\n"],["\n    padding: 20px;\n    background: orange;\n"]),c=n(0),d=a(c),p=(n(33),n(68)),f=a(p),g=function(e){function t(e){r(this,t);var n=i(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));if(console.log("Talkit props",e),n.props.tree){var a=n.extractGameIds(n.props.tree);if(console.log("extracted game info",a),n.onInput=n.onInput.bind(n),n.getVariableValue=n.getVariableValue.bind(n),n.getComparisonValue=n.getComparisonValue.bind(n),a){n.state={ids:a.map,id:a.id,gamePlaying:!0},console.log("indi post has a game",n.state);var o=a.map.get(a.id);n.playNodes(o)}}return n}return l(t,e),s(t,[{key:"getVariableValue",value:function(e,t){var n=e.substr(0,1),a=t,o=this.state[e]?this.state[e]:0;return console.log("getVariableValue variable: "+e+" type "+n+" value: "+t+" current: "+o),"a"==n?a=parseInt(t):"r"==n?(a=parseInt(t))+o:a}},{key:"getComparisonValue",value:function(e,t){var n=e.substr(0,1),a=t;return console.log("getComparisonValue variable "+e+" type "+n+" comparison "+t),"a"==n||"r"==n?a=parseInt(t):a}},{key:"playNodes",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(console.log("playNodes next node",e),"Set"==e.type){var a=this.getVariableValue(e.variable,e.value);n[e.variable]=a;var r=this.state.ids.get(e.next);console.log("Set variable state",n),this.setState(o({},e.variable,a)),this.playNodes(r,n)}else if("Branch"==e.type){var i=e.branches.filter(function(a){if("_default"==a.state)return!1;var o=a.state.substr(0,2),r=e.variable,i=t.getComparisonValue(r,a.state.substr(2)),l=t.state[r]?t.state[r]:n[r];return console.log("branch comparison "+o+"  value "+i+", is "+r+" cVal "+l+" in state?",t.state),"gt"==o&&l?l>i:"lt"==o&&l?l<i:"eq"==o&&l?l==i:void 0});i.length<=0&&(i=e.branches.filter(function(e){return"_default"==e.state}),console.log("branch not chosen, selecting default",i)),console.log("selected branch ",i);var l=this.state.ids.get(i[0].value);this.playNodes(l,n)}else e.next||e.choices?(n.id=e.id,console.log("playNodes updating state",n),this.setState({id:e.id})):this.setState({gamePlaying:!1})}},{key:"extractGameIds",value:function(e){var t=new Map,n=null;return e&&(e.map(function(e,a){0===a&&(n=e.id),t.set(e.id,e)}),console.log("extracted ids",t)),n?{map:t,id:n}:null}},{key:"onInput",value:function(e){var t=this.state.ids.get(e);console.log("onInput "+e+" node ",t),this.playNodes(t)}},{key:"renderGame",value:function(){var e=this,t=this.state.ids.get(this.state.id);console.log("renderGame node",t);var n=[];return this.state.gamePlaying&&t?(t.name&&n.push(d.default.createElement("p",null,t.name)),t.choices&&t.choices.map(function(t){console.log("rendering choice",t),n.push(d.default.createElement("button",{onClick:function(){e.onInput(t.id)}},t.title))}),t.next&&(console.log("rendering next",t.next),n.push(d.default.createElement("button",{onClick:function(){e.onInput(t.next)}},t.name)))):n.push(d.default.createElement("p",null,"game finished")),n}},{key:"render",value:function(){return console.log("Talking game render",this.state),this.state.ids?d.default.createElement(b,null,this.renderGame()):d.default.createElement("p",null,"no ids found")}}]),t}(d.default.Component);t.default=g;var b=f.default.div(u)}});