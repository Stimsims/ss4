webpackJsonp([15],{223:function(e,t,r){(function(e){var r,n,i=function(e){"use strict";function t(e,r,n){var i="hash"===r,a="decimals"===r||"decimal"===r,s=i?void 0:r;if(W(e)){var o="",u="",l="",c=e.group||n,f=e.value;if(!i){var p=a?e.multiplier.valueOf():e.multiplier.toString();"-1"==p&&(l="-",p="1"),"1"!=p&&(o=p);var h=e.power?a?e.power.valueOf():e.power.toString():"";"1"!=h&&(u=W(h)?t(h,s):h)}switch(c){case E:o="",f="-1"==e.multiplier?"1":a?e.valueOf():e.multiplier.toString(),u="";break;case C:case P:f=e.collectSymbols(t,s).join("+").replace(/\+\-/g,"-");break;case R:f=e.collectSymbols(function(e){var r=e.group;return(r===C||r===P)&&e.power.equals(1)&&e.multiplier.equals(1)?ae(t(e,s)):t(e,s)}).join("*");break;case N:var m=e.previousGroup,v=e.power.group;m===C&&(f=e.collectSymbols(t,s).join("+").replace("+-","-")),m===E||m===U||m===A||i||(f=ae(f)),v!==P&&v!==R&&v!==C&&"1"==e.power.multiplier.toString()||!u||(u=ae(u))}if(c===A&&a&&(f=e.fname+ae(e.args.map(function(e){return t(e,s)}).join(","))),c===A&&e.fname in q){var g=t(e.args[0]),d=t(e.args[1]);e.args[0].isComposite()&&(g=ae(g)),e.args[1].isComposite()&&(d=ae(d)),f=g+q[e.fname]+d}!u||ne(u)||c===N||a||(u=ae(u)),((c===P||c===C)&&(o&&"1"!=o||"-"===l)||(c===R||c===P||c===C)&&u&&"1"!=u||!i&&c===x&&-1==f||e.fname===I)&&(f=ae(f));var w=l+o;!o||ne(o)||a||(w=ae(w)),u<0&&(u=ae(u)),o&&(w+="*"),u&&(u=S.POWER_OPERATOR+u),c===N&&"-"===f.charAt(0)&&(f=ae(f));var y=w+f;return e.parens&&(y=ae(y)),y+u}if(K(e)){for(var b=e.elements.length,w=[],M=0;M<b;M++)w.push(e.elements[M].text(r));return"["+w.join(",")+"]"}try{return e.toString()}catch(e){return""}}function r(e){this.symbol=e}function n(e){if(e instanceof n)return e;if(void 0===e)return this;try{if(ne(e))try{this.num=w(e),this.den=w(1)}catch(t){return n.simple(e)}else{var t=qe.convert(e);this.num=new w(t[0]),this.den=new w(t[1])}}catch(t){return n.simple(e)}}function a(e){var t="Infinity"===e;return this instanceof a?(isNaN(e)||t||!isFinite(e)?(this.group=U,X(e),this.value=e,this.multiplier=new n(1),this.imaginary=e===S.IMAGINARY,this.isInfinity=t):(this.group=E,this.value=_,this.multiplier=new n(e)),this.power=new n(1),this):new a(e)}function s(e){if(Q(e))return[e];for(var t=e,r=1,n=[];r<t;){var i=e/r,a=Math.floor(i);i-a<=2.220446049250313e-16&&r>1&&(-1!==b.indexOf(r)&&n.push(r),t=a),r++}return n.sort(function(e,t){return e-t})}function o(e,t,r,n,i,a,s){this.val=e,this.fn=t,this.precedence=r,this.left_assoc=n,this.is_prefix=i,this.is_postfix=a||!1,this.operation=s,this.is_operator=!0}function u(e,t,r,n,i){this.val=e,this.bracket_id=t,this.open=!!r,this.fn=n,this.type=i}function l(e){this.operation=e.operation,this.val=e.val,this.is_prefix_operator=!0}function c(e){this.message=e||""}function f(e){this.message=e||""}function p(e){this.message=e||""}function h(e){this.message=e||""}function m(){function e(e){return S.PARSE2NUMBER?e:Oe.symfunction("parens",[e])}function r(e){if(e.multiplier.lessThan(0)&&e.multiplier.negate(),e.isImaginary()){var t=e.realpart(),r=e.imagpart();if(t.isConstant()&&r.isConstant())return m(Oe.add(Oe.pow(t,new a(2)),Oe.pow(r,new a(2))))}else if(te(e)||he(e.power))return e;if(e.isComposite()){var i=[];e.each(function(e){i.push(e.multiplier)});Se.QGCD.apply(null,i).lessThan(0)&&(e.multiplier=e.multiplier.multiply(new n(-1)),e.distributeMultiplier())}return Oe.symfunction(k,[e])}function i(e){var t;return S.PARSE2NUMBER&&e.isConstant()?(t=ne(e)?Se.bigfactorial(e):Se.gamma(e.multiplier.add(new n(1)).toDecimal()),t=oe(t)):e.equals(.5)?Oe.parse("sqrt(pi)/2"):Oe.symfunction(L,[e])}function f(e,t){if(e.isConstant()&&t.isConstant()){var r=new a(1);return r.multiplier=r.multiplier.multiply(e.multiplier.mod(t.multiplier)),r}var n=Oe.divide(e.clone(),t.clone());return ne(n)?new a(0):Oe.symfunction("mod",[e,t])}function h(e,t,r){return"boolean"!=typeof e&&te(e)&&(e=!!Number(e)),e?t:r}function m(e){if(""===e.fname&&e.power.equals(1)&&(e=e.args[0]),S.PARSE2NUMBER){if(e.isConstant()&&!e.multiplier.lessThan(0))return new a(Math.sqrt(e.multiplier.toDecimal()));if(e.isImaginary())return je.sqrt(e)}var t,r,i=e.isConstant();if(e.group===R&&e.isLinear()){var s=m(a(e.multiplier));for(var o in e.symbols){var u=e.symbols[o];s=Oe.multiply(s,m(u))}r=s}else if(e.fname===T){var o=e.args[0],l=e.multiplier;o.setPower(e.power.multiply(new n(.25))),r=o,l.equals(1)||(r=Oe.multiply(m(Oe.parse(l)),r))}else if(e.power.isInteger()){i&&e.multiplier.lessThan(0)&&(t=a.imaginary(),e.multiplier=e.multiplier.abs());var s,c=e.multiplier.toDecimal(),f=Math.abs(c),p=Math.sqrt(f);if(ne(p))s=new a(p);else if(ne(c)){var h=Se.ifactor(c),v=1;for(var u in h){var g=h[u],d=g-g%2;if(d){var w=Math.pow(u,d);v*=Math.pow(u,d/2),c/=w}}s=Oe.multiply(Oe.symfunction(T,[new a(c)]),new a(v))}else{var g=e.multiplier.num.toString(),y=e.multiplier.den.toString(),b=Math.sqrt(g),M=Math.sqrt(y);s=Oe.multiply("1"===g?new a(1):ne(b)?new a(b):Oe.symfunction(T,[new a(g)]),"1"===y?new a(1):ne(M)?new a(M).invert():Oe.symfunction(T,[new a(y)]).invert())}e=e.toUnitMultiplier(!0),r=e.isOne()?e:he(e.power.toString())?Oe.pow(e.clone(),new a(.5)):Oe.symfunction(T,[e]),s&&(r=Oe.multiply(s,r)),t&&(r=Oe.multiply(t,r))}else e.setPower(e.power.multiply(new n(.5))),r=e;return r}function d(e,t,i,s){if(void 0===s&&(s=!0),i=i||25,W(t)||(t=Oe.parse(t)),ne(e)&&t.isConstant()){var o,u=e.sign();e=r(e);var l=e+"-"+t;if(l in S.CACHE.roots?(o=new w(S.CACHE.roots[l]),he(t)||(o=o.multiply(u))):o=e<0x10000000000000000?n.create(Math.pow(e,1/t)):Se.nthroot(e,t),ne(o)||S.PARSE2NUMBER)return new a(s?o:o.toDecimal(i))}return 2===Number(t)?Oe.sqrt(e):Oe.symfunction("nthroot",arguments)}function y(e){if(e.equals(Math.PI))return new a(Math.PI);if(e=be(e.clone()),e.isConstant()){var t=new a(1),r=e.toString();if(ne(r)){var i=Se.ifactor(r);for(var s in i){var o=i[s];t=Oe.multiply(t,Oe.symfunction("parens",[new a(s).setPower(new n(o))]))}}else{var u=y(new a(e.multiplier.num)),l=y(new a(e.multiplier.den));t=Oe.multiply(Oe.symfunction("parens",[u]),Oe.symfunction("parens",[l]).invert())}}else t=Oe.symfunction("pfactor",arguments);return t}function b(e){return e.realpart()}function q(e){return e.imagpart()}function _(e){var t=e.realpart(),r=e.imagpart();return Oe.add(t,Oe.multiply(r.negate(),a.imaginary()))}function F(e){var t=e.realpart(),r=e.imagpart();return t.isConstant()&&r.isConstant()?new a(Math.atan2(r,t)):Oe.symfunction("atan2",[r,t])}function B(e){var t,r,n,i;return t=a.toPolarFormArray(e),i=t[1],r=t[0],n=Oe.parse(se("e^({0}*({1}))",S.IMAGINARY,i)),Oe.multiply(r,n)}function j(e){var t=e.clone();try{var r,n,i,s,o,u;return r=ce(e,"e",!0),n=Oe.divide(r.x.power,a.imaginary()),i=be(Ve.tan(n)),Oe.pow(r.a,new a(2)),o=i.getDenom(!0),u=i.getNum(),s=a.hyp(u,o),s.equals(r.a)?Oe.add(o,Oe.multiply(a.imaginary(),u)):t}catch(e){return t}}function V(e,t){t.map(function(e){e.numVal=be(e).multiplier});for(var r,n,i;;){if((r=t.length)<2)return t[0];n=t.pop(),i=t[r-2],("min"===e?n.numVal<i.numVal:n.numVal>i.numVal)&&(t.pop(),t.push(n))}}function z(){var e=[].slice.call(arguments);return H(e)?e[0]:Qe(e)?new a(Math.max.apply(null,e)):S.SYMBOLIC_MIN_MAX&&Ye(e)?V("max",e):Oe.symfunction("max",e)}function Q(){var e=[].slice.call(arguments);return H(e)?e[0]:Qe(e)?new a(Math.min.apply(null,e)):S.SYMBOLIC_MIN_MAX&&Ye(e)?V("min",e):Oe.symfunction("min",e)}function Y(e){return e.isConstant(!0)?new a(Math.sign(be(e))):Oe.symfunction("sign",arguments)}function $(e,t){t=t?t.toString():"asc";var r=function(e){return e.group===E?e.multiplier:e.group===A?""===e.fname?r(e.args[0]):e.fname:e.group===U?e.power:e.value};return new v((K(e)?e.elements:e.collectSymbols()).sort(function(e,n){var i=r(e),a=r(n);return"desc"===t?a-i:i-a}))}function J(e,t){var r;if(e.fname===T&&e.multiplier.equals(1))return Oe.divide(J(e.args[0]),new a(2));if(e.equals(0))throw new p("log(0) is undefined!");if(e.isImaginary())return je.evaluate(e,"log");if(e.isConstant()&&void 0!==t&&t.isConstant()){r=new a(Math.log(e)/Math.log(t))}else if(e.group===N&&e.power.multiplier.lessThan(0)||"-1"===e.power.toString())e.power.negate(),r=J(e).negate();else if("e"===e.value&&e.multiplier.equals(1)){var n=e.power;r=W(n)?n:new a(n)}else if(e.group===A&&"exp"===e.fname){var i=e.args[0];r=e.multiplier.equals(1)?Oe.multiply(i,new a(e.power)):Oe.symfunction("log",[e])}else if(S.PARSE2NUMBER&&te(e)){var s;e.multiplier.lessThan(0)&&(e.negate(),s=Oe.multiply(new a(Math.PI),new a("i"))),r=new a(Math.log(e.multiplier.toDecimal())),s&&(r=Oe.add(r,s))}else{var i;e.power.equals(1)||(i=e.group===N?e.power:new a(e.power),e.toLinear()),r=arguments.length>1&&H(arguments)?new a(1):Oe.symfunction("log",arguments),i&&(r=Oe.multiply(i,r))}return r}function ie(e,t){var n=t&&t.isConstant()||void 0===t;if(e.isConstant()&&n){var i,s,o,u;return i=e,t&&t.lessThan(0)&&(t=r(t),s=Number(e).toExponential().toString().split("e"),i=s[0],o=s[1]),u=new a(M.round(i,Number(t||0))),Oe.multiply(u,Oe.pow(new a(10),new a(o||0)))}return Oe.symfunction("round",arguments)}function ae(e){var t=e%2;return t<0&&(t=2+t),t>=0&&t<=.5?1:t>.5&&t<=1?2:t>1&&t<=1.5?3:4}function oe(e){if(!isFinite(e)){var t=Math.sign(e),r=new a(String(Math.abs(e)));return r.multiplier=r.multiplier.multiply(new n(t)),r}if(W(e))return e;if("number"==typeof e)try{e=n.simple(e)}catch(t){e=new n(e)}var i=new a(0);return i.multiplier=e,i}function le(e){var t,r=e.group;if(r===P){var n=e.getNum(),i=e.getDenom()||new a(1),s=Number(e.power),o=new a(1);if(1===Math.abs(s)){i.each(function(e){e.group===R?o=Oe.multiply(o,le(e.getDenom())):e.power.lessThan(0)&&(o=Oe.multiply(o,le(e.clone().toUnitMultiplier())))});var u=new a(0);i.each(function(e){u=Oe.add(Oe.divide(e,o.clone()),u)}),o.invert();var l;n.isComposite()?(l=new a(0),n.each(function(e){l=Oe.add(Oe.multiply(le(e),o.clone()),l)})):l=Oe.multiply(o,n),t=Oe.divide(l,u)}}else r===R?(t=new a(1),e.each(function(e){t=Oe.multiply(t,Oe.clean(e))})):r===A&&1===e.args.length&&e.args[0].isConstant()&&(t=we("PARSE2NUMBER",function(){return Oe.parse(e)},!0));return t||(t=e),t}function fe(e){if(e.group===A&&""===e.fname)return Oe.expand(e.args[0]);if(!e.symbols)return e;var t=e.clone();try{var r=e.power,n=e.multiplier,i=Number(r);if(!e.symbols)return e;for(var s in e.symbols){var o=e.symbols[s];e.symbols[s]=fe(o)}if(e=Oe.parse(e),ne(i)&&i>0&&e.isComposite()){var u=new a(0);for(var o in e.symbols){var l=e.symbols[o];l.power.greaterThan(1)&&(l=Oe.expand(l)),u=Oe.add(u,l)}for(var c=i-1,f=u.clone(),p=0;p<c;p++){var h=new a(0);for(var o in u.symbols){var m=u.symbols[o];for(var v in f.symbols){var g=Oe.multiply(m.clone(),f.symbols[v]);g.group===R&&(g=Oe.expand(g)),h=Oe.add(h,g)}}f=h}if(!n.equals(1))for(var s in f.symbols){var o=f.symbols[s];o.multiplier=o.multiplier.multiply(n),o.isComposite()&&o.distributeMultiplier(),e.symbols[s]=o}return f}if(e.group===R){var d=!1,w=e.power.clone(),y=e.power.sign();for(var o in e.symbols){var b=e.symbols[o];if(b.isComposite()){d=!0;break}W(b.power)||W(w)?(b.power=Oe.multiply(b.power,a(w)),b.group=N):b.power=b.power.multiply(w)}if(e.toLinear(),e=Oe.parse(e.text()),!d)return e;var f=new a(0),M=[],S=new a(e.multiplier);for(var s in e.symbols){var o=e.symbols[s];if(o.group!==N)if(o.isComposite()){var r=o.power,q=!1;ne(r)&&r<0&&(o.power.negate(),q=!0),q?(o.power.negate(),S=Oe.multiply(S,o)):M.push(o)}else S=Oe.multiply(S,o)}var E=M.length;f=M[0];for(var p=1;p<E;p++){var h=new a(0),s=M[p];for(var x in f.symbols){var o=f.symbols[x];for(var U in s.symbols){var v=s.symbols[U],C=Oe.multiply(o.clone(),v.clone());h=Oe.add(h,C)}}f=h}var P=new a(0);for(var s in f.symbols){var o=f.symbols[s];P=Oe.add(P,fe(Oe.multiply(S,o)))}P.power=P.power.multiply(w.abs()),e=Oe.expand(P),y<0&&e.invert()}}catch(e){return t}return e}function pe(e){return g.identity(e)}function ve(e,t){return e.elements[t]}function ge(e,t,r){return e.elements[t]=r,e}function de(e,t,r){return e.elements[t][r]}function ye(e,t){return new g(e.elements[t])}function Me(e,t,r){if(e.elements[t].length!==r.elements.length)throw new Error("Matrix row must match row dimensions!");var n=e.clone();return n.elements[t]=r.clone().elements,n}function qe(e,t){t=Number(t);var r=g.fromArray([]);return e.each(function(e,n,i){i===t&&r.elements.push([e.clone()])}),r}function xe(e,t,r){if(t=Number(t),e.rows()!==r.elements.length)throw new Error("Matrix columns must match number of columns!");return r.each(function(r,n){e.set(n-1,t,r.elements[0].clone())}),e}function Ue(e,t,r,n){return e.elements[t][r]=n,e}function Ne(){return new v([].slice.call(arguments))}function Ae(){return g.fromArray(arguments)}function Ce(e){return ee(e)?e.determinant():e}function Re(e){if(ee(e))return[new a(e.cols()),new a(e.rows())];G("size expects a matrix or a vector")}function Pe(e,t){if(K(e)&&K(t))return e.dot(t);G("function dot expects 2 vectors")}function _e(e,t){if(K(e)&&K(t))return e.cross(t);G("function cross expects 2 vectors")}function Ie(e){if(ee(e))return e.transpose();G("function transpose expects a matrix")}function Te(e){if(ee(e))return e.invert();G("invert expects a matrix")}function ke(e){if(!W(e.power)&&e.power.absEquals(.5)){var t=e.power.sign();return m(e.group===x?new a(e.value):e.toLinear()).setPower(new n(t))}return e}function Le(e){if(e.group===x){var t=e.group===E?e.multiplier.toDecimal():e.value,r=s(t)[0],i=new n(Math.log(t)/Math.log(r)),o=i.multiply(e.power);if(o.den>e.power.den)return e;e=ne(o)?a(Math.pow(r,o)):new a(r).setPower(o)}return e}var Oe=this,Fe={},De=this.constants={PI:Math.PI,E:Math.E},Be={e:Math.E,pi:Math.PI},je={prec:void 0,cos:function(e,t){var r,n;return r=Oe.parse(Math.cos(e)*Math.cosh(t)),n=Oe.parse(Math.sin(e)*Math.sinh(t)),Oe.subtract(r,Oe.multiply(n,a.imaginary()))},sin:function(e,t){var r,n;return r=Oe.parse(Math.sin(e)*Math.cosh(t)),n=Oe.parse(Math.cos(e)*Math.sinh(t)),Oe.subtract(r,Oe.multiply(n,a.imaginary()))},tan:function(e,t){var r,n;return r=Oe.parse(Math.sin(2*e)/(Math.cos(2*e)+Math.cosh(2*t))),n=Oe.parse(Math.sinh(2*t)/(Math.cos(2*e)+Math.cosh(2*t))),Oe.add(r,Oe.multiply(n,a.imaginary()))},sec:function(e,t){var r=this.removeDen(this.cos(e,t));return Oe.subtract(r[0],Oe.multiply(r[1],a.imaginary()))},csc:function(e,t){var r=this.removeDen(this.sin(e,t));return Oe.add(r[0],Oe.multiply(r[1],a.imaginary()))},cot:function(e,t){var r=this.removeDen(this.tan(e,t));return Oe.subtract(r[0],Oe.multiply(r[1],a.imaginary()))},acos:function(e,t){var r,n,i,s,o;return r=this.fromArray([e,t]),n=Oe.expand(Oe.pow(r.clone(),new a(2))),i=Oe.multiply(m(Oe.subtract(new a(1),n)),a.imaginary()),s=Oe.expand(Oe.add(r.clone(),i)),o=J(s),Oe.expand(Oe.multiply(a.imaginary().negate(),o))},asin:function(e,t){return Oe.subtract(Oe.parse("pi/2"),this.acos(e,t))},atan:function(e,t){var r,n,i,s;return s=je.fromArray([e,t]),r=Oe.expand(Oe.multiply(a.imaginary(),s.clone())),n=J(Oe.expand(Oe.subtract(new a(1),r.clone()))),i=J(Oe.expand(Oe.add(new a(1),r.clone()))),Oe.expand(Oe.multiply(Oe.divide(a.imaginary(),new a(2)),Oe.subtract(n,i)))},asec:function(e,t){var r=this.removeDen([e,t]);return r[1].negate(),this.acos.apply(this,r)},acsc:function(e,t){var r=this.removeDen([e,t]);return r[1].negate(),this.asin.apply(this,r)},acot:function(e,t){var r=this.removeDen([e,t]);return r[1].negate(),this.atan.apply(this,r)},cosh:function(e,t){var r,n;return r=Oe.parse(Math.cosh(e)*Math.cos(t)),n=Oe.parse(Math.sinh(e)*Math.sin(t)),Oe.add(r,Oe.multiply(n,a.imaginary()))},sinh:function(e,t){var r,n;return r=Oe.parse(Math.sinh(e)*Math.cos(t)),n=Oe.parse(Math.cosh(e)*Math.sin(t)),Oe.add(r,Oe.multiply(n,a.imaginary()))},tanh:function(e,t){var r,n;return r=Oe.parse(Math.sinh(2*e)/(Math.cos(2*t)+Math.cosh(2*e))),n=Oe.parse(Math.sin(2*t)/(Math.cos(2*t)+Math.cosh(2*e))),Oe.subtract(r,Oe.multiply(n,a.imaginary()))},sech:function(e,t){var r=this.removeDen(this.cosh(e,t));return Oe.subtract(r[0],Oe.multiply(r[1],a.imaginary()))},csch:function(e,t){var r=this.removeDen(this.sinh(e,t));return Oe.subtract(r[0],Oe.multiply(r[1],a.imaginary()))},coth:function(e,t){var r=this.removeDen(this.tanh(e,t));return Oe.add(r[0],Oe.multiply(r[1],a.imaginary()))},acosh:function(e,t){var r,n,i;return i=this.fromArray([e,t]),r=m(Oe.add(i.clone(),new a(1))),n=m(Oe.subtract(i.clone(),new a(1))),Oe.expand(J(Oe.add(i,Oe.expand(Oe.multiply(r,n)))))},asinh:function(e,t){var r,n;return n=this.fromArray([e,t]),r=m(Oe.add(new a(1),Oe.expand(Oe.pow(n.clone(),new a(2))))),Oe.expand(J(Oe.add(n,r)))},atanh:function(e,t){var r,n,i;return i=this.fromArray([e,t]),r=J(Oe.add(i.clone(),new a(1))),n=J(Oe.subtract(new a(1),i)),Oe.expand(Oe.divide(Oe.subtract(r,n),new a(2)))},asech:function(e,t){var r=this.removeDen([e,t]);return r[1].negate(),this.acosh.apply(this,r)},acsch:function(e,t){var r=this.removeDen([e,t]);return r[1].negate(),this.asinh.apply(this,r)},acoth:function(e,t){var r=this.removeDen([e,t]);return r[1].negate(),this.atanh.apply(this,r)},sqrt:function(e){var t,r,n,i,s;return t=e.realpart(),r=e.imagpart(),n=a.hyp(t,r),i=Oe.add(t.clone(),n),s=m(Oe.multiply(new a(2),i.clone())),Oe.add(Oe.divide(i.clone(),s.clone()),Oe.multiply(Oe.divide(r,s),a.imaginary()))},log:function(e,t){var r,n;return r=J(a.hyp(e,t)),n=Oe.parse(Math.atan2(t,e)),Oe.add(r,Oe.multiply(a.imaginary(),n))},removeDen:function(e){var t,r,n,i,a;return re(e)?(r=e[0],n=e[1]):(r=e.realpart(),n=e.imagpart()),t=Math.pow(r,2)+Math.pow(n,2),i=Oe.parse(r/t),a=Oe.parse(n/t),[i,a]},fromArray:function(e){return Oe.add(e[0],Oe.multiply(a.imaginary(),e[1]))},evaluate:function(e,t){var r,n,i;if(i=e.power.sign(),e.power=e.power.abs(),e.power.greaterThan(1)&&(e=Oe.expand(e)),i<0){var a=this.removeDen(e);r=a[0],n=a[1]}else r=e.realpart(),n=e.imagpart();return r.isConstant("all")&&n.isConstant("all")?this[t].call(this,r,n):Oe.symfunction(t,[e])}},Ve=this.Trig={cos:function(e){if(e.equals("pi")&&e.multiplier.den.equals(2))return new a(0);if(S.PARSE2NUMBER){if(e.equals(new a(Math.PI/2)))return new a(0);if(e.isConstant())return new a(Math.cos(e.valueOf()));if(e.isImaginary())return je.evaluate(e,"cos")}if(e.equals(0))return new a(1);var t,r=!1,n=ae(e.multiplier.toDecimal()),i=e.multiplier.abs();if(e.multiplier=i,e.isPi()&&e.isLinear())if(ne(i))t=new a(he(i)?1:-1);else{var s=(Number(i.num),Number(i.den));2===s?t=new a(0):3===s?(t=Oe.parse("1/2"),r=!0):4===s?(t=Oe.parse("1/sqrt(2)"),r=!0):6===s?(t=Oe.parse("sqrt(3)/2"),r=!0):t=Oe.symfunction("cos",[e])}return!r||2!==n&&3!==n||t.negate(),t||(t=Oe.symfunction("cos",[e])),t},sin:function(e){if(S.PARSE2NUMBER){if(e.isConstant())return new a(Math.sin(e.valueOf()));if(e.isImaginary())return je.evaluate(e,"sin")}if(e.equals(0))return new a(0);var t,r=!1,n=ae(e.multiplier.toDecimal()),i=e.multiplier.sign(),s=e.multiplier.abs();if(e.multiplier=s,e.equals("pi"))t=new a(0);else if(e.isPi()&&e.isLinear())if(ne(s))t=new a(0);else{var o=(s.num,s.den);2==o?(t=new a(1),r=!0):3==o?(t=Oe.parse("sqrt(3)/2"),r=!0):4==o?(t=Oe.parse("1/sqrt(2)"),r=!0):6==o?(t=Oe.parse("1/2"),r=!0):t=Oe.symfunction("sin",[e])}return t||(t=Oe.multiply(new a(i),Oe.symfunction("sin",[e]))),!r||3!==n&&4!==n||t.negate(),t},tan:function(e){if(S.PARSE2NUMBER){if(e.isConstant())return new a(Math.tan(e.valueOf()));if(e.isImaginary())return je.evaluate(e,"tan")}var t,r=!1,n=ae(e.multiplier.toDecimal()),i=e.multiplier;if(e.multiplier=i,e.isPi()&&e.isLinear())if(ne(i))t=new a(0);else{var s=(i.num,i.den);if(2==s)throw new p("tan is undefined for "+e.toString());3==s?(t=Oe.parse("sqrt(3)"),r=!0):4==s?(t=new a(1),r=!0):6==s?(t=Oe.parse("1/sqrt(3)"),r=!0):t=Oe.symfunction("tan",[e])}return t||(t=Oe.symfunction("tan",[e])),!r||2!==n&&4!==n||t.negate(),t},sec:function(e){if(S.PARSE2NUMBER){if(e.isConstant())return new a(Se.sec(e.valueOf()));if(e.isImaginary())return je.evaluate(e,"sec")}var t,r=!1,n=ae(e.multiplier.toDecimal()),i=e.multiplier.abs();if(e.multiplier=i,e.isPi()&&e.isLinear())if(ne(i))t=new a(he(i)?1:-1);else{var s=(i.num,i.den);if(2==s)throw new p("sec is undefined for "+e.toString());3==s?(t=new a(2),r=!0):4==s?(t=Oe.parse("sqrt(2)"),r=!0):6==s?(t=Oe.parse("2/sqrt(3)"),r=!0):t=Oe.symfunction("sec",[e])}return!r||2!==n&&3!==n||t.negate(),t||(t=Oe.symfunction("sec",[e])),t},csc:function(e){if(S.PARSE2NUMBER){if(e.isConstant())return new a(Se.csc(e.valueOf()));if(e.isImaginary())return je.evaluate(e,"csc")}var t,r=!1,n=ae(e.multiplier.toDecimal()),i=e.multiplier.abs();if(e.multiplier=i,e.isPi()&&e.isLinear()){if(ne(i))throw new p("csc is undefined for "+e.toString());var s=(i.num,i.den);2==s?(t=new a(1),r=!0):3==s?(t=Oe.parse("2/sqrt(3)"),r=!0):4==s?(t=Oe.parse("sqrt(2)"),r=!0):6==s?(t=new a(2),r=!0):t=Oe.symfunction("csc",[e])}return t||(t=Oe.symfunction("csc",[e])),!r||3!==n&&4!==n||t.negate(),t},cot:function(e){if(S.PARSE2NUMBER){if(e.isConstant())return new a(Se.cot(e.valueOf()));if(e.isImaginary())return je.evaluate(e,"cot")}var t,r=!1,n=ae(e.multiplier.toDecimal()),i=e.multiplier;if(e.multiplier=i,e.isPi()&&e.isLinear()){if(ne(i))throw new p("cot is undefined for "+e.toString());var s=(i.num,i.den);2==s?t=new a(0):3==s?(t=Oe.parse("1/sqrt(3)"),r=!0):4==s?(t=new a(1),r=!0):6==s?(t=Oe.parse("sqrt(3)"),r=!0):t=Oe.symfunction("cot",[e])}return t||(t=Oe.symfunction("cot",[e])),!r||2!==n&&4!==n||t.negate(),t},acos:function(e){if(S.PARSE2NUMBER){if(e.isConstant())return new a(Math.acos(e.valueOf()));if(e.isImaginary())return je.evaluate(e,"acos")}return Oe.symfunction("acos",arguments)},asin:function(e){if(S.PARSE2NUMBER){if(e.isConstant())return new a(Math.asin(e.valueOf()));if(e.isImaginary())return je.evaluate(e,"asin")}return Oe.symfunction("asin",arguments)},atan:function(e){var t;if(e.equals(0))t=new a(0);else if(S.PARSE2NUMBER){if(e.isConstant())return new a(Math.atan(e.valueOf()));if(e.isImaginary())return je.evaluate(e,"atan")}else t=e.equals(-1)?Oe.parse("-pi/4"):Oe.symfunction("atan",arguments);return t},asec:function(e){if(S.PARSE2NUMBER){if(e.isConstant())return new a(Math.acos(e.invert().valueOf()));if(e.isImaginary())return je.evaluate(e,"asec")}return Oe.symfunction("asec",arguments)},acsc:function(e){if(S.PARSE2NUMBER){if(e.isConstant())return new a(Math.acos(e.invert().valueOf()));if(e.isImaginary())return je.evaluate(e,"acsc")}return Oe.symfunction("acsc",arguments)},acot:function(e){var t;if(S.PARSE2NUMBER)if(e.isImaginary())t=je.evaluate(e,"acot");else{var r=Oe.parse("pi/2");e.equals(0)?t=r:(e.lessThan(0)&&r.negate(),t=Oe.subtract(r,Ve.atan(e)))}else t=Oe.symfunction("acot",arguments);return t},atan2:function(e,t){if(e.equals(0)&&t.equals(0))throw new p("atan2 is undefined for 0, 0");return S.PARSE2NUMBER&&e.isConstant()&&t.isConstant()?new a(Math.atan2(e,t)):Oe.symfunction("atan2",arguments)}};this.trig=Ve;var He=this.Trigh={cosh:function(e){if(S.PARSE2NUMBER){if(e.isConstant())return new a(Math.cosh(e.valueOf()));if(e.isImaginary())return je.evaluate(e,"cosh")}return Oe.symfunction("cosh",arguments)},sinh:function(e){if(S.PARSE2NUMBER){if(e.isConstant())return new a(Math.sinh(e.valueOf()));if(e.isImaginary())return je.evaluate(e,"sinh")}return Oe.symfunction("sinh",arguments)},tanh:function(e){if(S.PARSE2NUMBER){if(e.isConstant())return new a(Math.tanh(e.valueOf()));if(e.isImaginary())return je.evaluate(e,"tanh")}return Oe.symfunction("tanh",arguments)},sech:function(e){if(S.PARSE2NUMBER){if(e.isConstant())return new a(Math.sech(e.valueOf()));if(e.isImaginary())return je.evaluate(e,"sech")}return Oe.symfunction("sech",arguments)},csch:function(e){if(S.PARSE2NUMBER){if(e.isConstant())return new a(Math.csch(e.valueOf()));if(e.isImaginary())return je.evaluate(e,"csch")}return Oe.symfunction("csch",arguments)},coth:function(e){if(S.PARSE2NUMBER){if(e.isConstant())return new a(Math.coth(e.valueOf()));if(e.isImaginary())return je.evaluate(e,"coth")}return Oe.symfunction("coth",arguments)},acosh:function(e){return S.PARSE2NUMBER&&e.isImaginary()?je.evaluate(e,"acosh"):S.PARSE2NUMBER?be(Oe.parse(se("log(({0})+sqrt(({0})^2-1))",e.toString()))):Oe.symfunction("acosh",arguments)},asinh:function(e){return S.PARSE2NUMBER&&e.isImaginary()?je.evaluate(e,"asinh"):S.PARSE2NUMBER?be(Oe.parse(se("log(({0})+sqrt(({0})^2+1))",e.toString()))):Oe.symfunction("asinh",arguments)},atanh:function(e){return S.PARSE2NUMBER&&e.isImaginary()?je.evaluate(e,"atanh"):S.PARSE2NUMBER?be(Oe.parse(se("(1/2)*log((1+({0}))/(1-({0})))",e.toString()))):Oe.symfunction("atanh",arguments)},asech:function(e){return S.PARSE2NUMBER&&e.isImaginary()?je.evaluate(e,"asech"):S.PARSE2NUMBER?be(J(Oe.add(e.clone().invert(),m(Oe.subtract(Oe.pow(e,new a(-2)),new a(1)))))):Oe.symfunction("asech",arguments)},acsch:function(e){return S.PARSE2NUMBER&&e.isImaginary()?je.evaluate(e,"acsch"):S.PARSE2NUMBER?be(Oe.parse(se("log((1+sqrt(1+({0})^2))/({0}))",e.toString()))):Oe.symfunction("acsch",arguments)},acoth:function(e){return S.PARSE2NUMBER&&e.isImaginary()?je.evaluate(e,"acoth"):S.PARSE2NUMBER?e.equals(1)?a.infinity():be(Oe.divide(J(Oe.divide(Oe.add(e.clone(),new a(1)),Oe.subtract(e.clone(),new a(1)))),new a(2))):Oe.symfunction("acoth",arguments)}};this.trigh=He;var Ge=this.operators={"^":new o("^","pow",6,!1,!1),"**":new o("**","pow",6,!1,!1),"!!":new o("!!","dfactorial",5,!1,!1,!0,function(e){return Oe.symfunction(O,[e])}),"!":new o("!","factorial",5,!1,!1,!0,function(e){return i(e)}),"*":new o("*","multiply",4,!0,!1),"/":new o("/","divide",4,!0,!1),"%":new o("%","percent",4,!0,!1,!0,function(e){return Oe.percent(e)}),"%+":new o("%+","percent_add",2,!0,!1),"%-":new o("%-","percent_subtract",3,!0,!1),"+":new o("+","add",3,!0,!0,!1,function(e){return e}),"-":new o("-","subtract",3,!0,!0,!1,function(e){return e.negate()}),"!+":new o("!+","factadd",3,!0,!0,!1),"!!+":new o("!!+","dfactadd",3,!0,!0,!1),"!-":new o("!-","factsub",3,!0,!0,!1),"!!-":new o("!!-","dfactsub",3,!0,!0,!1),"=":new o("=","equals",2,!1,!1),"==":new o("==","eq",1,!1,!1),"<":new o("<","lt",1,!1,!1),"<=":new o("<=","lte",1,!1,!1),">":new o(">","gt",1,!1,!1),">=":new o(">=","gte",1,!1,!1),",":new o(",","comma",0,!0,!1)},ze={"(":new u("(",0,!0,null,"round"),")":new u(")",0,!1,null,"round"),"[":new u("[",1,!0,function(){var e=new a("vector");return e.is_function=!0,e},"square"),"]":new u("]",1,!1,null,"square")},Xe=this.functions={cos:[Ve.cos,1],sin:[Ve.sin,1],tan:[Ve.tan,1],sec:[Ve.sec,1],csc:[Ve.csc,1],cot:[Ve.cot,1],acos:[Ve.acos,1],asin:[Ve.asin,1],atan:[Ve.atan,1],asec:[Ve.asec,1],acsc:[Ve.acsc,1],acot:[Ve.acot,1],atan2:[Ve.atan2,2],acoth:[He.acoth,1],asech:[He.asech,1],acsch:[He.acsch,1],sinh:[He.sinh,1],cosh:[He.cosh,1],tanh:[He.tanh,1],asinh:[He.asinh,1],sech:[He.sech,1],csch:[He.csch,1],coth:[He.coth,1],acosh:[He.acosh,1],atanh:[He.atanh,1],log10:[,1],exp:[,1],min:[Q,-1],max:[z,-1],erf:[,1],floor:[,1],ceil:[,1],trunc:[,1],Si:[,1],step:[,1],rect:[,1],sinc:[,1],tri:[,1],sign:[Y,1],Ci:[,1],Ei:[,1],Shi:[,1],Chi:[,1],fib:[,1],fact:[i,1],factorial:[i,1],dfactorial:[,1],gamma_incomplete:[,[1,2]],round:[ie,[1,2]],mod:[f,2],pfactor:[y,1],vector:[Ne,-1],matrix:[Ae,-1],imatrix:[pe,-1],parens:[e,-1],sqrt:[m,1],nthroot:[d,2],log:[J,[1,2]],expand:[fe,1],abs:[r,1],invert:[Te,1],determinant:[Ce,1],size:[Re,1],transpose:[Ie,1],dot:[Pe,2],cross:[_e,2],vecget:[ve,2],vecset:[ge,3],matget:[de,3],matset:[Ue,4],matgetrow:[ye,2],matsetrow:[Me,3],matgetcol:[qe,2],matsetcol:[xe,3],IF:[h,3],realpart:[b,1],imagpart:[q,1],conjugate:[_,1],arg:[F,1],polarform:[B,1],rectform:[j,1],sort:[$,[1,2]]};this.error=G;var Ze=function(e){for(var t=S.FUNCTION_MODULES,r=t.length,n=0;n<r;n++){var i=t[n];if(e in i)return i[e]}G("The function "+e+" is undefined!")},Qe=function(e){for(var t=0;t<e.length;t++)if(e[t].group!==E)return!1;return!0},Ye=function(e){for(var t=0;t<e.length;t++)if(!e[t].isPi()&&!e[t].isE()&&!e[t].isConstant(!0))return!1;return!0};this.override=function(e,t){Fe[e]||(Fe[e]=[]),Fe[e].push(this[e]),this[e]=t},this.restore=function(e){this[e]&&(this[e]=Fe[e].pop())},this.extend=function(e,t,r){var n=this;if("function"==typeof this[e]&&"function"==typeof t){var i=this[e];this[e]=function(e,a){return W(e)&&W(a)&&!r?i.call(n,e,a):t.call(n,e,a,i)}}},this.symfunction=function(e,t){var r=new a(e);return r.group=A,"object"==typeof t&&(t=[].slice.call(t)),r.args=t,r.fname=e===I?"":e,r.updateHash(),r},this.callfunction=function(e,t,r){var n=Xe[e];n||G("Nerdamer currently does not support the function "+e);var i,a=n[1]||r,s=n[0];if(t instanceof Array||(t=void 0!==t?[t]:[]),-1!==a){var o=re(a),u=o?a[0]:a,l=o?a[1]:a,c=t.length,f=e+" requires a {0} of {1} arguments. {2} provided!";c<u&&G(se(f,"minimum",u,c)),c>l&&G(se(f,"maximum",l,c))}return s?i=s.apply(n[2],t):(s=Ze(e),i=S.PARSE2NUMBER&&Qe(t)?oe(s.apply(s,t)):Oe.symfunction(e,t)),i},this.operator_filter_regex=function(){var e="^\\"+Object.keys(Ge).filter(function(e){if(1===e.length)return e}).join("\\");return new RegExp("(["+e+"])\\s+(["+e+"])")}(),this.parseTree=function(e,t){for(var r=[],n=e.length,i=0;i<n;i++){var s=e[i];if(s.is_prefix_operator||s.is_postfix)r.push(s.operation(r.pop()));else if(s.is_operator){var o=r.pop(),u=r.pop();re(o)&&Oe.error('Unrecognized function "'+u.value+'"'),void 0!==u||s.is_postfix||Oe.error(s+" is not a valid postfix opertor"),r.push(this[s.fn](u,o))}else if(s.value in Xe)r.push(Oe.callfunction(s.value,r.pop()));else if(""===s)r.push(new a(0));else{var l=s;s in S.ALIASES&&(s=Oe.parse(S.ALIASES[s])),s in De?s=new a(De[s]):s in t?s=t[s].clone():s in D&&(s=D[s].clone()),s.unsubbed=l,r.push(s)}}return r[0]||new a(0)},this.parse=function(e,t,r){if(t){for(var n in t)t[n]=Oe.parse(t[n]);Be=t}else Be={};S.PARSE2NUMBER&&(Be.e=new a(Math.E),Be.pi=new a(Math.PI));for(var i,s=String(e);;){if(!(i=this.operator_filter_regex.exec(s)))break;try{var o=i[1],u=i[2];X(o),X(u),s=s.replace(i[0],o+"*"+u)}catch(s){break}}s=s.split(" ").join("").replace(/\d+\.*\d*e\+?\-?\d+/gi,function(e){return Z(e)}).replace(/([\+\-\/\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\+\-\/\*]*)/gi,function(){var e=arguments[4],t=arguments[1],r=arguments[2],n=arguments[3],i=e.charAt(n),a="",s="*";return i.match(/[\+\-\/\*]/)||(a=e.charAt(n-1)),a.match(/[a-z]/i)&&(s=""),t+s+r}).replace(/([a-z0-9_]+)/gi,function(e,t){return!1!==S.USE_MULTICHARACTER_VARS||t in Xe?t:isNaN(t)?t.split("").join("*"):t}).replace(/\)\(/g,")*(")||"0";for(;;){var c=s;if(s=s.replace(/([a-z0-9_]+)(\()|(\))([a-z0-9]+)/gi,function(e,t,r,n,i){var a=t||n,s=r||i;return a in Xe?a+s:a+"*"+s}),c===s)break}for(var f,p,h=s.length,m=[],v=[],g=0,d=[0,0],w=[],y=!0,b=function(e){e!==g&&(f=new a(s.substring(g,e)),m.push(f),y=!1)},M=function(e){e.is_prefix||G(e+" is not a valid prefix operator")},q=function(e,t){return t?new l(e.val===t.val?Ge["+"]:Ge["-"]):e},E=0,E=0;E<h;E++){var x=s.charAt(E);if(x in Ge){b(E);for(var U=E;s.charAt(E+1)in Ge;)E++;for(var N=E+1,A=s.substring(U,N);!(A in Ge);){var C=A.length,R=C-1,P=Ge[A.charAt(R)];A=A.substring(0,R);try{M(P),w.push(new l(P))}catch(s){for(var _,I=A.length,T=0;T<I;T++)(!(_=Ge[A.charAt(T)])||_&&!_.is_postfix)&&G(s.message);for(var k="";;){if(""===A)break;if(A in Ge)m.push(Ge[A]),A=k,k="";else{var R=A.length-1;k+=A.charAt(R),A=A.substring(0,R)}}A=P.val;break}}for(p=Ge[A],g=N;;){for(var L=v.length,O=v[L-1];void 0!==O&&O.is_prefix_operator;)O=v[--L-1];if(0===L||!(p.left_assoc&&p.precedence<=O.precedence||!p.left_assoc&&p.precedence<O.precedence))break;m.push(v.pop())}if(y){M(p);for(var P=new l(p);w.length;)P=q(P,w.pop());!function(e){var t=v.length;t&&v[t-1].is_prefix_operator&&v.push(q(e,v.pop())),v.push(e)}(P)}else{var L=v.length;L&&v[L-1].is_prefix_operator&&p.left_assoc&&m.push(v.pop()),v.push(p),function(e){if(w.length){for(var t=w.pop();w.length;)t=q(t,w.pop());e?m.push(t):v.push(t)}}()}}else if(x in ze){var F=ze[x];if(F.open){if(d[F.bracket_id]++,g!==E){var D=new a(s.substring(g,E));D.is_function=!0,v.push(D)}F.fn&&v.push(F.fn()),y=!0,v.push(F),g=E+1}else{for(d[F.bracket_id]--,b(E);;){var B=v.pop();if(void 0===B&&G("Missing open bracket for bracket '"+F+"'!"),B.bracket_id===F.bracket_id)break;m.push(B)}var L=v.length;L&&v[L-1].is_function&&m.push(v.pop()),g=E+1}}}for(b(h);v.length;)m.push(v.pop());for(var E=0;E<d.length;E++)if(d[E]>0){var j;for(F in ze)ze[F].bracket_id!==E||ze[F].open||(j=ze[F]);G('Missing close bracket. Expected "'+j+'"!')}return r?m:this.parseTree(m,Be)},this.toObject=function(e){for(var t,r=[[]],n=e.split(" ").join(""),i=[],s=0,o=r[0],u=function(e){""!==e&&o.push(new a(e))},l=0,c=n.length;l<c;l++){var f=n.charAt(l);if(f in Ge)t=n.substring(s,l),u(t),o.push(f),s=l+1;else if(f in ze){var p=ze[f];if(p.open)i.push(n.substring(s,l)),o=[],r.push(o),s=l+1;else{t=n.substring(s,l),u(t);var h,m=r.pop(),v=i.pop();v in Xe?h=Oe.symfunction(v,m):""===v?(h=m,h.type=p.type):h=v,o=r[r.length-1],o.push(h),s=l+1}}}return u(n.substring(s,l)),r[0]};var We=function(e){for(var t,r=0,n=[[]],t=0,i=e.length;t<i;t++)","===e[t]?(r++,n[r]=[]):n[r].push(e[t]);return n},$e=function(e){return e.replace(/^\\left\((.+)\\right\)$/g,function(e,t){return t||e})};this.toTeX=function(e){var t="string"==typeof e?this.toObject(e):e,r=[];if(re(t)){for(var n,i,a=[],s=0;s<t.length;s++)n=t[s],"^"===t[s+1]?(i=t[s+2],a.push(Ee.braces(this.toTeX([n]))+"^"+Ee.braces(this.toTeX([i]))),s+=2):a.push(n);t=a}for(var s=0,o=t.length;s<o;s++){var u=t[s];if("*"===u&&(u="\\cdot"),W(u))if(u.group===A){var l,c=u.fname;if(c===T)l="\\sqrt"+Ee.braces(this.toTeX(u.args));else if(c===k)l=Ee.brackets(this.toTeX(u.args),"abs");else if(c===I)l=Ee.brackets(this.toTeX(u.args),"parens");else if("log10"===c)l="\\log_{10}\\left( "+this.toTeX(u.args)+"\\right)";else if("integrate"===c){var f=We(u.args),p=Ee.braces(this.toTeX(f[0])),h=this.toTeX(f[1]);l="\\int "+p+"\\, d"+h}else if("defint"===c){var f=We(u.args),p=Ee.braces(this.toTeX(f[0])),h=this.toTeX(f[1]),m=this.toTeX(f[2]),v=this.toTeX(f[3]);l="\\int\\limits_{"+m+"}^{"+v+"} "+p+"\\, d"+h}else if("diff"===c){var f=We(u.args),h="",p=Ee.braces(this.toTeX(f[0]));if(1==f.length){var g=[];for(w=0;w<f[0].length;w++)3===f[0][w].group&&g.push(f[0][w].value);g=g.sort(),h=g.length>0?"\\frac{d}{d "+g[0]+"}":"\\frac{d}{d x}"}else h=2==f.length?"\\frac{d}{d "+f[1]+"}":"\\frac{d^{"+f[2]+"}}{d "+this.toTeX(f[1])+"^{"+f[2]+"}}";l=h+"\\left("+p+"\\right)"}else if("sum"===c||"product"===c){var s,d=[[],[],[],[]],w=0;for(s=0;s<u.args.length;s++)","!==u.args[s]?d[w].push(u.args[s]):w++;l=("sum"===c?"\\sum_":"\\prod_")+Ee.braces(this.toTeX(d[1])+" = "+this.toTeX(d[2])),l+="^"+Ee.braces(this.toTeX(d[3]))+Ee.braces(this.toTeX(d[0]))}else l=c===L||c===O?this.toTeX(u.args)+(c===L?"!":"!!"):Ee.latex(u);r.push(l)}else r.push(Ee.latex(u));else re(u)?r.push(Ee.brackets(this.toTeX(u))):"/"===u?r.push(Ee.frac($e(r.pop()),$e(this.toTeX([t[++s]])))):r.push(u)}return r.join(" ")},this.sqrt=m,this.nthroot=d,this.expand=fe,this.clean=le,this.ext={log:J,sqrt:m,abs:r,vector:Ne,matrix:Ae,parens:e,determinant:Ce,dot:Pe,invert:Te,transpose:Ie},this.mapped_function=function(){for(var e={},t=this.params,r=0;r<t.length;r++)e[t[r]]=arguments[r];return Oe.parse(this.body,e)},this.add=function(e,r){var n=W(e),i=W(r);if(n&&i){if(e.isInfinity||r.isInfinity){var s=e.multiplier.lessThan(0),o=r.multiplier.lessThan(0);if(e.isInfinity&&r.isInfinity&&s!==o)throw new p("("+e+")+("+r+") is not defined!");var u=a.infinity();return o&&u.negate(),u}if(e.isComposite()&&e.isLinear()&&r.isComposite()&&r.isLinear()&&(e.distributeMultiplier(),r.distributeMultiplier()),e.multiplier.equals(0))return r;if(r.multiplier.equals(0))return e;if(e.isConstant()&&r.isConstant()&&S.PARSE2NUMBER){var l=new a(e.multiplier.add(r.multiplier).toDecimal(S.PRECISION));return l}var c=e.group,f=r.group,h=e.power.toString(),v=r.power.toString();if(c<f||c===f&&h>v&&v>0)return this.add(r,e);if(c===R&&f===C&&e.value===r.value){var d=e;e=r,r=d,c=e.group,f=r.group,h=e.power.toString(),v=r.power.toString()}var w,y,l,b=h===v,M=e.value,q=r.value,_=e.isComposite(),I=r.isComposite();if(_&&(w=t(e,"hash")),I&&(y=t(r,"hash")),c===P&&f===P&&r.isLinear()&&!e.isLinear()&&w!==y)return this.add(e,r);c===C&&f===C&&(M=w,q=y);var k=c===x&&f===E,L=e.value===r.multiplier.toString(),O=M===q||w===y&&void 0===!w||k&&L;if(O&&b&&c===f)if(k&&(r=r.convert(x)),c!==C||f!==U&&f!==x)if(l=e,e.multiplier.isOne()&&r.multiplier.isOne()&&c===P&&e.isLinear()&&r.isLinear())for(var F in r.symbols){var D=r.symbols[F];l.attach(D)}else l.multiplier=l.multiplier.add(r.multiplier);else e.distributeMultiplier(),l=e.attach(r);else if(O&&c!==C)l=a.shell(C).attach([e,r]),l.value=c===C?w:M;else if(_&&e.isLinear()){var B=c===f,j=c===C&&f===C;if(j&&(B=e.value===r.value),e.distributeMultiplier(),r.isComposite()&&r.isLinear()&&B){r.distributeMultiplier();for(var F in r.symbols){var D=r.symbols[F];e.attach(D)}l=e}else j&&e.value!==y||c===C&&!O?(l=a.shell(P).attach([e,r]),l.updateHash()):l=e.attach(r)}else{if(c===A&&e.fname===T&&f!==N&&r.power.equals(.5)){var V=r.multiplier.clone();r=m(r.toUnitMultiplier().toLinear()),r.multiplier=V}2===e.length&&2===r.length&&he(e.power)&&he(r.power)?l=Oe.add(fe(e),fe(r)):(l=a.shell(P).attach([e,r]),l.updateHash())}if(l.multiplier.equals(0)&&(l=new a(0)),1===l.length){var V=l.multiplier;l=ue(l.symbols),l.multiplier=l.multiplier.multiply(V)}return l}if(i&&!n){var d=e;e=r,r=d,d=i,i=n,n=d}var H=ee(r);if(n&&H)r.eachElement(function(t){return Oe.add(e.clone(),t)});else if(ee(e)&&H)r=e.add(r);else if(n&&K(r))r.each(function(t,n){n--,r.elements[n]=Oe.add(e.clone(),r.elements[n])});else if(K(e)&&K(r))r.each(function(t,n){n--,r.elements[n]=Oe.add(e.elements[n],r.elements[n])});else{if(K(e)&&ee(r))return Oe.add(r,e);if(ee(e)&&K(r)){if(r.elements.length===e.rows()){var z=new g,X=e.cols();return r.each(function(t,r){for(var n=[],i=0;i<X;i++)n.push(Oe.add(e.elements[r-1][i].clone(),t.clone()));z.elements.push(n)}),z}G("Dimensions must match!")}}return r},this.subtract=function(e,t){var r,n=n=W(e),i=W(t);if(n&&i)return this.add(e,t.negate());if(i&&(r=t,t=e,e=r,n=i),n&&K(t))t=t.map(function(t){return Oe.subtract(t,e.clone())});else if(K(e)&&K(t))e.dimensions()===t.dimensions()?t=e.subtract(t):Oe.error("Unable to subtract vectors. Dimensions do not match.");else if(ee(e)&&K(t)){if(t.elements.length===e.rows()){var a=new g,s=e.cols();return t.each(function(t,r){for(var n=[],i=0;i<s;i++)n.push(Oe.subtract(e.elements[r-1][i].clone(),t.clone()));a.elements.push(n)}),a}G("Dimensions must match!")}else{if(K(e)&&ee(t)){var a=t.clone().negate();return Oe.add(a,e)}ee(e)&&ee(t)&&(t=e.subtract(t))}return t},this.multiply=function(e,r){var i=W(e),s=W(r);if(i&&s){if(e.isInfinity||r.isInfinity){if(e.equals(0)||r.equals(0))throw new p(e+"*"+r+" is undefined!");if(r.power.lessThan(0))throw new p("Infinity/Infinity is not defined!");var o=e.multiplier.multiply(r.multiplier).sign(),u=a.infinity();if(e.isConstant()||r.isConstant()||e.isInfinity&&r.isInfinity)return o<0&&u.negate(),u}if(e.isConstant()&&r.isConstant()&&S.PARSE2NUMBER){return new a(e.multiplier.multiply(r.multiplier).toDecimal())}if(e.isOne())return r.clone();if(r.isOne())return e.clone();if(e.multiplier.equals(0)||r.multiplier.equals(0))return new a(0);if(r.group>e.group&&r.group!==P)return this.multiply(r,e);if(e.group===R&&r.group===C&&e.value===r.value){var l=e;e=r,r=l}var c=e.group,f=r.group,h=r.multiplier.num,m=r.multiplier.den;if(c===A&&e.fname===T&&!r.isConstant()&&e.args[0].value===r.value){var v=e.power;e=e.args[0].clone(),e.setPower(new n(.5).multiply(v)),c=e.group}var d=e.value,w=r.value,o=new n(e.multiplier.lessThan(0)?-1:1),y=c===x&&f===E&&r.multiplier.equals(e.value),b=y?new n(1).multiply(e.multiplier).abs():e.multiplier.multiply(r.multiplier).abs(),M=e.clone().toUnitMultiplier();if(r=r.clone().toUnitMultiplier(!0),d===w&&c===C&&c===f&&(d=e.text("hash"),w=r.text("hash")),f===N&&r.previousGroup===C&&c===C&&(d=t(e,"hash",N)),d!==w&&!y||c===C&&(f===U||f===x||f===A)||c===C&&f===R)if(c===R&&e.isLinear())if(f===R&&r.distributeExponent(),f===R&&r.isLinear()){for(var q in r.symbols){var _=r.symbols[q];M=M.combine(_)}M.multiplier=M.multiplier.multiply(r.multiplier)}else M.combine(r);else if(c!==E){if(c===R)M.distributeExponent(),M.combine(r);else if(!r.isOne()){var I=r.multiplier.clone();r.toUnitMultiplier(),M=a.shell(R).combine([M,r]),M.multiplier=M.multiplier.multiply(I)}}else M=r.clone().toUnitMultiplier();else{var k=e.power,L=r.power,O=W(k),F=W(L),D=O||F;if(c===C&&f!==C&&r.previousGroup!==C&&k.equals(1))M=new a(0),e.each(function(e){M=Oe.add(M,Oe.multiply(e,r.clone()))},!0);else{if(M.power=D?Oe.add(W(k)?k:new a(k),W(L)?L:new a(L)):c===E?k:k.add(L),M.power.equals(0)&&(M=M.convert(E)),D&&M.convert(N),e.imaginary&&r.imaginary){he(M.power%2)&&(M=new a(1),b.negate())}M.group!==N&&M.previousGroup&&(M.previousGroup=void 0),M.multiplier=M.multiplier.multiply(r.multiplier)}}if(M.group===x){var B=Math.log(M.value),j=Math.log(h)/B,V=Math.log(m)/B,H=b.num/h,z=b.den/m;0!==j&&ne(j)&&ne(H)&&(M.power=M.power.add(new n(j)),b.num/=h),0!==V&&ne(V)&&ne(z)&&(M.power=M.power.subtract(new n(V)),b.den/=m)}if(1===M.length){var l=M.multiplier;M=ue(M.symbols),M.multiplier=M.multiplier.multiply(l)}var X=M.power.toString();if(he(X)&&M.fname===T){var Z=M.power;M=M.args[0],M=Oe.multiply(new a(b),Oe.pow(M,new a(Z.divide(new n(2)))))}else M.multiplier=M.multiplier.multiply(b).multiply(o),M.group===P&&M.isImaginary()&&M.distributeMultiplier();return M.group===x&&ne(M.power.toDecimal())&&(M=M.convert(E)),M}s&&!i&&(l=e,e=r,r=l,l=s,s=i,i=l);var Q=ee(r),Y=ee(e);if(i&&Q)r.eachElement(function(t){return Oe.multiply(e.clone(),t)});else if(Y&&Q)r=e.multiply(r);else if(i&&K(r))r.each(function(t,n){n--,r.elements[n]=Oe.multiply(e.clone(),r.elements[n])});else if(K(e)&&K(r))r.each(function(t,n){n--,r.elements[n]=Oe.multiply(e.elements[n],r.elements[n])});else{if(K(e)&&ee(r))return this.multiply(r,e);if(ee(e)&&K(r)){if(r.elements.length===e.rows()){var $=new g,J=e.cols();return r.each(function(t,r){for(var n=[],i=0;i<J;i++)n.push(Oe.multiply(e.elements[r-1][i].clone(),t.clone()));$.elements.push(n)}),$}G("Dimensions must match!")}}return r},this.divide=function(e,t){var r=W(e),n=W(t);if(r&&n){var i;if(t.equals(0))throw new c("Division by zero not allowed!");return e.isConstant()&&t.isConstant()?(i=e.clone(),i.multiplier=i.multiplier.divide(t.multiplier)):(t.invert(),i=Oe.multiply(e,t)),i}var a=K(e),s=K(t);if(r&&s)t=t.map(function(t){return Oe.divide(e.clone(),t)});else if(a&&n)t=e.map(function(e){return Oe.divide(e,t.clone())});else if(a&&s)e.dimensions()===t.dimensions()?t=t.map(function(t,r){return Oe.divide(e.elements[--r],t)}):Oe.error("Cannot divide vectors. Dimensions do not match!");else{var o=ee(e),u=ee(t);o&&n?(e.eachElement(function(e){return Oe.divide(e,t.clone())}),t=e):o&&u?e.rows()===t.rows()&&e.cols()===t.cols()?e.eachElement(function(e,r,n){return Oe.divide(e,t.elements[r][n])}):Oe.error("Dimensions do not match!"):o&&s&&(e.cols()===t.dimensions()?(e.eachElement(function(e,r,n){return Oe.divide(e,t.elements[r].clone())}),t=e):Oe.error("Unable to divide matrix by vector."))}return t},this.pow=function(e,t){var i=W(e),s=W(t);if(i&&s){if(e.isInfinity||t.isInfinity){if(e.isInfinity&&t.isInfinity)throw new p("("+e+")^("+t+") is undefined!");if(e.isConstant()&&t.isInfinity){if(e.equals(0)){if(t.lessThan(0))throw new p("0^Infinity is undefined!");return new a(0)}if(e.equals(1))throw new p("1^"+t.toString()+" is undefined!");if(t.lessThan(0))return new a(0);if(!e.lessThan(0))return a.infinity()}if(e.isInfinity&&t.isConstant()){if(t.equals(0))throw new p(e+"^0 is undefined!");return t.lessThan(0)?new a(0):Oe.multiply(a.infinity(),Oe.pow(new a(e.sign()),t.clone()))}}var o=e.equals(0);if(o&&t.equals(0)&&G("0^0 is undefined!"),o&&t.isConstant()&&t.multiplier.greaterThan(0))return new a(0);var u=t.isConstant(),l=e.isConstant(),c=t.isInteger(),f=e.multiplier,h=e.clone();if(l&&u&&e.equals(0)&&t.lessThan(0))throw new p("Division by zero is not allowed!");if(S.PARSE2NUMBER&&l&&u&&e.sign()<0&&me(t)){var m,v,g;return m=Math.PI*t,v=new a(Math.cos(m)),g=Oe.multiply(a.imaginary(),new a(Math.sin(m))),Oe.add(v,g)}if(S.PARSE2NUMBER&&e.isImaginary()&&u){var v,g,d,w,y,b;if(v=e.realpart(),g=e.imagpart(),v.isConstant("all")&&g.isConstant("all"))return w=new a(Math.atan2(g,v)*t),d=Oe.pow(a.hyp(v,g),t),y=Oe.multiply(d.clone(),Oe.trig.cos(w.clone())),b=Oe.multiply(d,Oe.trig.sin(w)),Oe.add(y,Oe.multiply(a.imaginary(),b))}if(h.toUnitMultiplier(),h.group!==A||h.fname!==T||u){var M=f.sign();me(t)&&M<0&&(h.negate(),h=Oe.symfunction(I,[h]),h.negate()),h.multiplyPower(t)}else{var q=h.args[0];q.multiplyPower(new a(.5)),q.multiplier.multiply(h.multiplier),q.multiplyPower(t),h=q}if(l&&u&&S.PARSE2NUMBER){var x;M<0&&(e.negate(),t.multiplier.den.equals(2)?x=new a(S.IMAGINARY):ne(t.multiplier)?x=new a(he(t.multiplier)?1:-1):he(t.multiplier.den)?x=Oe.pow(Oe.symfunction(I,[new a(M)]),t.clone()):(M=Math.pow(M,t.multiplier.num),x=new a(Math.pow(e,t)*M))),h=new a(Math.pow(e.multiplier.toDecimal(),t.multiplier.toDecimal())),x&&(h=Oe.multiply(h,x))}else if(c&&!f.equals(1)){var U=t.multiplier.toDecimal(),C=Math.sign(U);U=Math.abs(U);var R=new n(1);R.num=f.num.pow(U),R.den=f.den.pow(U),C<0&&R.invert(),h.multiplier=h.multiplier.multiply(R)}else{var M=e.sign();if(t.isConstant()&&e.isConstant()&&!t.multiplier.den.equals(1)&&M<0)if(t.multiplier.den.equals(2)){var P=new a(S.IMAGINARY);e.negate(),t.lessThan(0)&&(P.negate(),t.negate()),h=Oe.multiply(Oe.pow(e,t),P)}else{var _=e.clone();_.multiplier.negate(),h=Oe.pow(Oe.symfunction(I,[new a(-1)]),t.clone());var L=Oe.pow(new a(_.multiplier.num),t.clone()),O=Oe.pow(new a(_.multiplier.den),t.clone()),d=Oe.divide(L,O);h=Oe.multiply(h,d)}else if(S.PARSE2NUMBER&&t.isImaginary()){var v,g,_,F,D,B;_=e.clone().toLinear(),v=t.realpart(),g=t.imagpart(),F=Oe.pow(_.clone(),v),D=Ve.cos(Oe.multiply(g.clone(),J(_.clone()))),B=Oe.multiply(Ve.sin(Oe.multiply(g,J(_))),a.imaginary()),h=Oe.multiply(F,Oe.add(D,B)),h=Oe.expand(Oe.parse(h))}else{var j=e.group===E&&M<0,V=ke(new a(j?f.num:Math.abs(f.num)).setPower(t.clone())),H=ke(new a(f.den).setPower(t.clone()).invert());if(e.imaginary)if(c){var q,U,z;q=Math.sign(t),U=r(t),z=U%4,h=new a(he(z)?-1:S.IMAGINARY),(0===z||q<0&&1===z||q>0&&3===z)&&h.negate()}else{var X=t.multiplier.multiply(n.quick(1,2)),Z=Math.pow(-1,X.num);h=he(X.den)?new a(-1).setPower(X,!0):new a(Z)}if(M<0&&!j&&h.negate(),u&&e.group!==N){var Q=he(t.multiplier.den),Y=he(e.power),z=h.power.toDecimal(),$=he(z);if(Q&&Y&&!$){if(1===z)h=Oe.symfunction(k,[h]);else if(ne(z))h=Oe.multiply(Oe.symfunction(k,[h.clone().toLinear()]),h.clone().setPower(new n(z-1)));else{var U=h.power;h=Oe.symfunction(k,[h.toLinear()]).setPower(U)}S.POSITIVE_MULTIPLIERS&&h.fname===k&&(h=h.args[0])}}}}if(h=ke(h),V&&H&&(h=Oe.multiply(h,Le(Oe.multiply(V,H)))),h.fname===T){var te=h.group===N,re=te?h.power.multiplier.toString():h.power.toString();if(he(re)){var ie=te?Oe.divide(h.power,new a(2)):new a(h.power.divide(new n(2))),f=h.multiplier;h=Oe.pow(h.args[0],ie),h.multiplier=h.multiplier.multiply(f)}}else if(!S.IGNORE_E&&h.isE()&&h.group===N&&h.power.contains("pi")&&h.power.contains(S.IMAGINARY)){var ae=h.multiplier,se=h.power.multiplier;h=new a(he(se.num)?ae:ae.negate()),h=Oe.pow(h,new a(se.den).invert())}return h}return K(e)&&s?e=e.map(function(e){return Oe.pow(e,t.clone())}):ee(e)&&s&&e.eachElement(function(e){return Oe.pow(e,t.clone())}),e},this.comma=function(e,t){var r=e instanceof Array,n=t instanceof Array,i=r&&e[0]instanceof Array;return r&&i||r&&!n?e.push(t):e=[e,t],e},this.equals=function(e,t){return e.group===U||e.isLinear()||G("Cannot set equality for "+e.toString()),D[e.value]=t.clone(),t},this.mod_or_percent=function(e,t){return e&&t?f(e,t):Oe.percent(t)},this.percent=function(e){return Oe.divide(e,new a(100))},this.percent_add=function(e,t){return Oe.add(Oe.percent(e),t)},this.percent_subtract=function(e,t){return Oe.subtract(Oe.percent(e),t)};var Je=function(e){return new a(!0===e?1:0)};this.eq=function(e,t){return Je(e.equals(t))},this.gt=function(e,t){return Je(e.gt(t))},this.gte=function(e,t){return Je(e.gte(t))},this.lt=function(e,t){return Je(e.lt(t))},this.lte=function(e,t){return Je(e.lte(t))},this.factorial=function(e){return this.symfunction(L,[e])},this.dfactorial=function(e){return this.symfunction(O,[e])},this.factadd=function(e,t){return Oe.add(this.symfunction(L,[e]),t)},this.dfactadd=function(e,t){return Oe.add(this.symfunction(O,[e]),t)},this.factsub=function(e,t){return Oe.subtract(this.symfunction(L,[e]),t)},this.dfactsub=function(e,t){return Oe.subtract(this.symfunction(O,[e]),t)}}function v(e){K(e)?this.elements=e.items.slice(0):re(e)?this.elements=e.slice(0):this.elements=[].slice.call(arguments)}function g(){var e,t=arguments,r=t.length,n=[];if(ee(t))for(e=0;e<r;e++)n.push(t[e].slice(0));else{var i,a,s;for(e=0;e<r;e++)i=t[e],K(i)&&(i=i.elements),re(i)||(i=[i]),s=i.length,a&&a!==s&&G("Unable to create Matrix. Row dimensions do not match!"),n.push(i),a=s}this.elements=n}var d=new m,w=e.bigInt,y={},b=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083],M={},S={init_primes:1e3,exclude:[],suppress_errors:!1,PARSE2NUMBER:!1,SAFE:!1,IMAGINARY:"i",FUNCTION_MODULES:[Math],ALLOW_CHARS:["π"],USE_MULTICHARACTER_VARS:!0,POWER_OPERATOR:"^",VALIDATION_REGEX:/^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ][a-z\d\_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,ALIASES:{"π":"pi"},POSITIVE_MULTIPLIERS:!1,CACHE:{},SILENCE_WARNINGS:!1,PRECISION:40},q={},E=y.N=1,x=y.P=2,U=y.S=3,N=y.EX=4,A=y.FN=5,C=y.PL=6,R=y.CB=7,P=y.CP=8,_=S.CONST_HASH="#",I=S.PARENTHESIS="parens",T=(S.VECTOR="vector",S.SQRT="sqrt"),k=S.ABS="abs",L=S.FACTORIAL="factorial",O=S.DOUBLEFACTORIAL="dfactorial",F=[],D={},B=[],j=[],V=M.isReserved=function(e){return-1!==B.indexOf(e)},H=M.allSame=function(e){for(var t=e[0],r=1,n=e.length;r<n;r++)if(!e[r].equals(t))return!1;return!0},G=function(e,t){if(!S.suppress_errors)throw t?new t(e):new Error(e)},z=M.warn=function(e){j.push(e),!S.SILENCE_WARNINGS&&console&&console.warn&&console.warn(e)},X=M.validateName=function(e,t){if(t=t||"variable",-1===S.ALLOW_CHARS.indexOf(e)){if(!S.VALIDATION_REGEX.test(e))throw new Error(e+" is not a valid "+t+" name")}},Z=(M.intersection=function(e,t,r){var n=[];if(e.length>t.length){var i=e;e=t,t=i}t=t.slice();for(var a=e.length,s=t.length,o=0;o<a;o++)for(var u=e[o],l=0;l<s;l++){var c=t[l];if(void 0!==c){var f=r?r(u,c):u===c;f&&(t[l]=void 0,n.push(u))}}return n},M.scientificToDecimal=function(e){if(/\d+\.?\d*e[\+\-]*\d+/i.test(e)){var t=String(e).toLowerCase().split("e"),r=t.pop(),n=Math.abs(r),i=r/n,a=t[0].split(".");if(-1===i)e="0."+new Array(n).join("0")+a.join("");else{var s=a[1];s&&(n-=s.length),e=a.join("")+new Array(n+1).join("0")}}return e}),Q=M.isPrime=function(e){for(var t=Math.floor(Math.sqrt(e)),r=2;r<=t;r++)if(e%r==0)return!1;return!0},Y=M.isFraction=function(e){return W(e)?Y(e.multiplier.toDecimal()):e%1!=0},W=M.isSymbol=function(e){return e instanceof a},$=M.isExpression=function(e){return e instanceof r},J=M.separate=function(e,t){e=d.expand(e),t=t||{};var r=function(e,r){t[e]||(t[e]=new a(0)),t[e]=d.add(t[e],r.clone())};return e.each(function(e){if(e.isConstant("all"))r("constants",e);else if(e.group===U)r(e.value,e);else if(e.group!==A||e.fname!==k&&""!==e.fname){if(e.group===N||e.group===A)throw new Error("Unable to separate. Term cannot be a function!");r(fe(e).join(" "),e)}else J(e.args[0])}),t},K=(M.fillHoles=function(e,t){t=t||e.length;for(var r=0;r<t;r++){e[r]||(e[r]=new a(0))}return e},M.isVector=function(e){return e instanceof v}),ee=M.isMatrix=function(e){return e instanceof g},te=M.isNumericSymbol=function(e){return e.group===E},re=(M.isVariableSymbol=function(e){return e.group===U&&e.multiplier.equals(1)&&e.power.equals(1)},M.isArray=function(e){return e instanceof Array}),ne=M.isInt=function(e){return e%1==0},ie=M.isNegative=function(e){return W(e)&&(e=e.multiplier),e.lessThan(0)},ae=M.inBrackets=function(e){return"("+e+")"},se=(M.stringReplace=function(e,t,r,n){return e.substr(0,t)+n+e.substr(r,e.length)},M.customType=function(e){return void 0!==e&&e.custom},M.sameSign=function(e,t){return e<0==t<0},M.format=function(){var e=[].slice.call(arguments);return e.shift().replace(/{(\d+)}/g,function(t,r){var n=e[r];return"function"==typeof n?n():n})}),oe=M.keys=Object.keys,ue=M.firstObject=function(e,t){for(var r in e)break;return t?r:e[r]},le=(M.compare=function(e,t,r){for(var n,i={},s=0;s<r.length;s++)i[r[s]]=new a(Math.floor(5*Math.random())+1);return we("PARSE2NUMBER",function(){n=d.parse(e,i).equals(d.parse(t,i))}),n},M.arrayMax=function(e){return Math.max.apply(void 0,e)},M.arrayMin=function(e){return Math.min.apply(void 0,e)}),ce=(M.arrayClone=function(e){for(var t=[],r=e.length,n=0;n<r;n++)t[n]=e[n].clone();return t},M.comboSort=function(e,t){for(var r=e.length,n=[],i=0;i<e.length;i++)n.push([e[i],t[i]]);n.sort(function(e,t){return e[0]-t[0]});var a=[],s=[];for(i=0;i<r;i++)a.push(n[i][0]),s.push(n[i][1]);return[a,s]},M.decompose_fn=function(e,t,r){var n,i,s,o;if(e.group===P){var u=d.expand(e.clone()).stripVar(t);n=d.subtract(e.clone(),u.clone()),o=u}else n=e.clone();return i=n.stripVar(t),s=d.divide(n.clone(),i.clone()),o=o||new a(0),r?{a:i,x:s,ax:n,b:o}:[i,s,n,o]}),fe=(M.round=function(e,t){return t=void 0===t?14:t,Math.round(e*Math.pow(10,t))/Math.pow(10,t)},M.variables=function(e,t,r){if(r=r||{c:[],add:function(e){-1===this.c.indexOf(e)&&isNaN(e)&&this.c.push(e)}},W(e)){var n=e.group,i=e.previousGroup;if(n===N&&fe(e.power,t,r),n===P||n===R||i===P||i===R)for(var a in e.symbols)fe(e.symbols[a],t,r);else if(n===U||i===U)"e"!==e.value&&"pi"!==e.value&&r.add(e.value);else if(n===C||i===C)fe(ue(e.symbols),t,r);else if(n===N)isNaN(e.value)||r.add(e.value),fe(e.power,t,r);else if(n===A&&!t)for(var s=0;s<e.args.length;s++)fe(e.args[s],t,r)}return r.c.sort()}),pe=(M.getU=function(e){for(var t="u",r=0,n=fe(e);-1!==B.indexOf(t)||-1!==n.indexOf(t);)t="u"+r++;for(var i=0,a=B.length;i<=a;i++)if(!B[i]){B[i]=t;break}return t},M.clearU=function(e){var t=B.indexOf(e);-1!==t&&(B[t]=void 0)},M.each=function(e,t){if(re(e))for(var r=e.length,n=0;n<r;n++)t.call(e,n);else for(var i in e)e.hasOwnProperty(i)&&t.call(e,i)}),he=M.even=function(e){return e%2==0},me=M.evenFraction=function(e){return 1/(e%1)%2==0},ve=M.arrayUnique=function(e){for(var t=e.length,r=[],n=0;n<t;n++){var i=e[n];-1===r.indexOf(i)&&r.push(i)}return r},ge=M.reserveNames=function(e){var t=function(e){-1===B.indexOf(e)&&B.push(e)};"string"==typeof e?t(e):pe(e,function(e){t(e)})},de=M.remove=function(e,t){var r;return re(e)?r=e.splice(t,1)[0]:(r=e[t],delete e[t]),r},we=M.block=function(e,t,r,n){var i=S[e];S[e]=void 0===r||!!r;var a=t.call(n);return S[e]=i,a},ye=(M.arguments2Array=function(e){return[].slice.call(e)},M.getCoeffs=function(e,t){var r=[];e.each(function(e){if(e.contains(t))var n=e.stripVar(t),i=d.divide(e.clone(),n.clone()),a=i.power.toDecimal();else n=e,a=0;var s=r[a];r[a]=s?d.add(s,n):n},!0);for(var n=0;n<r.length;n++)r[n]||(r[n]=new a(0));return r},M.generatePrimes=function(e){for(var t=b[b.length-1]||2,r=t;r<e;r++)Q(r)&&b.push(r)}),be=M.evaluate=function(e){return we("PARSE2NUMBER",function(){return d.parse(e)},!0)},Me=M.convertToVector=function(e){if(re(e)){for(var t=new v([]),r=0;r<e.length;r++)t.elements.push(Me(e[r]));return t}return W(e)?e:d.parse(e)},Se={csc:function(e){return 1/Math.sin(e)},sec:function(e){return 1/Math.cos(e)},cot:function(e){return 1/Math.tan(e)},erf:function(e){var t=1/(1+.5*Math.abs(e)),r=1-t*Math.exp(-e*e-1.26551223+t*(1.00002368+t*(.37409196+t*(.09678418+t*(t*(.27886807+t*(t*(1.48851587+t*(.17087277*t-.82215223))-1.13520398))-.18628806)))));return e>=0?r:-r},bigpow:function(e,t){e instanceof n||(e=n.create(e)),t instanceof n||(t=n.create(t));var r=new n(0);if(t.isInteger())r.num=e.num.pow(t.toString()),r.den=e.den.pow(t.toString());else{var i=n.create(Math.pow(e.num,t.num)),a=n.create(Math.pow(e.den,t.num));r.num=Se.nthroot(i,t.den.toString()),r.den=Se.nthroot(a,t.den)}return r},gamma:function(e){var t=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,1.5056327351493116e-7];if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*Se.gamma(1-e));e-=1;for(var r=t[0],n=1;n<9;n++)r+=t[n]/(e+n);var i=e+7+.5;return Math.sqrt(2*Math.PI)*Math.pow(i,e+.5)*Math.exp(-i)*r},bigfactorial:function(e){for(var t=new n(1),r=2;r<=e;r++)t=t.multiply(new n(r));return t},bigLog:function(e){var t=["-253631954333118718762629409109262279926288908775918712466601196032/39970093576053625963957478139049824030906352922262642968060706375","0","24553090145869607172412918483124184864289170814122579923404694986469653261608528681589949629750677407356463601998534945057511664951799678336/35422621391945757431676178435630229283255250779216421054188228659061954317501699707236864189383591478024245495110561124597124995986978302375","369017335340917140706044240090243368728616279239227943871048759140274862131699550043150713059889196223917527172547/335894053932612728969975338549993764554481173661218585876475837409922537622385232776657791604345125227005476864000","24606853025626737903121303930100462245506322607985779603220820323211395607931699126390918477501325805513849611930008427268176602460462988972957593458726734897129954728102144/17750092415977639787139561330326170936321452137635322313122938207611787444311735251389066106937796085669460151963285086542745859461943369606018450213014148175716400146484375","399073568781976806715759409052286641738926636328983929439450824555613704676637191564699164303012247386095942144825603522401740680808466858044/247958349743620302021733249049411604982786755454514947379317600613433680222511897950658049325685140346169718465773927872179874971908848116625","1468102989495846944084741146947295378041808701256909016224309866143294556551407470861354311593351276612463858816796714569499021375899793849136855085849133702029337910502448189055357182595424959360/819363879309286303497217527375463120404739098260200279520788950777458900438307356738082930586032462601215802636320993648007907724899611296693997216938989854861043298494990214825163523387600982777","5896704855274661767824574093605344871722790278354431422729640950821239030785642943033153793245906863203822369276271050164634206965056233097479117980782641839669/3030306850569309344013726745100070601277982132543905537366562638553198167007159067544789592089960911065181606283478843359856123992707598685058297067179343872000","76631772943534985713873427262830314617912556928476573358548256872141516989538374761909611879922349479420014771499018155447198112155515453671128814488139633810493264352294560043912066253026059140653027326566801398784/36852092933388988649396042883218509607503204211148493545892849595498822817623842579026942621098851631842754395231561679671400197056377380063233740202370686144673585955581403046886083948450136247134308381940165804875","3159076083816399509754948610929467278257473888282947311280653574634802580912280940686954763313882823327077171624015737719617373932318151594325834524000275847475866299387913048/1437757485694188822758304467756419845842037623148461107362957994816554782989250555362514354661961482939226272309026092009962414616417412938087494467254146002233028411865234375","22266067259907364984531611601870291368272674573653403965630628996687370994139884833897773468149149664829922302484782423514167405397665098388400450149078982462318781750661005833037235183394221496186539779712428265837926417581952/9670030144664428565128962309657100138096047028794689249320859276197340398920725569428532293373676415359965773460364494998334259893079003125373872108770534788283842907318071170285038777091588292539102269617376180390982915567375","14604654564989239958569331443385369522850975185358647132770022716433280072271007767111036877803328768910274400515590151934676819262085211828028638417329558229123989556376108454497813055/6090614019162516693013973409650613208227889078878781039105047015752493519149314227721984436973374032279421344818329285207124280297611253861173835238379831004010748379874393292231671808","1901241885407696031217292877862925220917660047127261026827869027159993239567933534052663335498281439239753018507182016153657409777749792228538380379703411298411623469292891476969894084838876001545818141543890273256985768690847587711270930688/765116019778838839812655402103512685695769161212360553099732689795578904762091216998790589926057819838537805856579109910198553330075924857419395160755642371550113347465300208422126945265887065434116781678702741657275181694851670325469434625","139459806786604751793737926146840623607010208216289543036026206208962059593900745886202214788747453279179283344350478734275973878932538430194363355795823581315329311220701640235653288975569812161436/54371368534412517053056101353618694718215711767266376573138772968257303578467926450212293233332401067673270853953399269852376592855992724934941173346260129257754416412476202526978443681584633116375","1045669091124493070709683241190022970908640501171378776604126771144008324358233819560649021940145166254659028524319517244711645162132513416238958170819347361185944945680269442845829390112062101255500836072082817820950448463314034677353723256969344/396228259004446234921310936915931611736815598535963504660076315228798989932959459406702091180060429080345146735173591749448509810270759531977278642135591672189002006272326131885315743181289970885337574780897529347356567086535505950450897216796875","9912919238915437302006264477931031611447467070103973106567538528951878797932559935860738745374437522819124347510590800370471910492338584284092534264608801221235029062881964101996762011296996851893455828946521/3660537472668264151218961634689665210933936249986285290553357254224360417386515311493310199319523687171757653216994741150377508234317025158302057758196429623723072084157928224798322861732880034847243894784000","9263710175433181746575186369318246002919895649622127410824041370079225200282403368319370743363303164313395723904510539050157032684710468364067204876434546848634842333436957245275217583248805993142227630297924119330553308466662488683624783307023014909360640/3341177182697517248552428837661919299725031035849865632511882688786226888137634168024976033652753689210700218163621739078534353578510364301481093730054725078138658805025014615651043313990684347632166030359086885561104034510990826655289288319840595753002771","5116082230713622171832327542439052727465114322479570603905499496221224653983960598946033081212909066917137546065542953865612718836914393275681318667667521726785633638189373998191090501201427906618075889744489190209584/1805752553736060443820406101277706970767657006346276183748749630179442318063568286372320188433843729960294965366346522303898609655762491623098453269916163621089005711823488749297418113474056676109581110715068124438875","246569125619713282434448566970352231845414317018379160824176638351574938993535464763890962336882760882398479702237564384291290459961036068916857265499633061660562532011248501476114401629839742058389195725393702000011860799793778295606988057303225493814005789533570432/85307063020836305797178273029353623060860009152114361453434032434699636078115114412588719432277441055049132559782203988387794711585368296817222565434951256788867244687081233632650953850383220864394261763844194948389861147622944651546912394593164406926489862036343375","133672026303452911046163998480860917119290576658330909785707604886881155606725822685088929236266583416708668502760907677019598002175122453170574729028452721476464728566191464897928696630979863154661704374206171469014225143/45398130975270785045482567762871405072140548998125471025451666500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","6041693953360002800224091673336562508913199995987479264605216252220579740134601435770085920869376641180763419907442721705887169884230643795126568815123647603047739799302562095542459344811429882053086550900803768964612193941424128649976704727183797495759082741166938351872/2016766992122395667828553277997478570503475626107286343497917705446132017125079612756035254750822860815515899557855166824523851779156336235294914777307802256439645525835223691751931866188957324792276149549076500784191791380803500156776088683900346065830066370370083309875","705868391597244582764749229356331441978820024796066870551110486625729826111158236686696326058778874201639006234449557592353247542995871491078308187261304930042019640830629526023972693107193897009168955674240659026247094657679060/231848642748474339277532000336338632910990823562381469441716922006107433404523316252618490265927265734670539384485699132080062215196462178933963957679882342083893417545858074378754089719547920901917516016346211301054206383643383","101832160604157943093944673541651013907278188571533075311673249923948856034633446617630054761681006062910980371900782781226979391765818325065031889334563981235894369036439929651260587335544056975715076598739977065390678221999918899003881778449092038750712969437519295878491018112/32944277910571666002449086492515464541550138004002141571670657643770713783329063548790202120805341989608877739811787937782240802963962520261844114327432160788193314874913687387269408387417806176202979244637915812905426565263196954203487934225589622864145960079736633434831996625","10655703119271468913597640479490594180964700448340778168715956712130636958373270202484276402718566314881119559090842449610957974112230306343486091910217340665146602598568991520563987490686996746558858366002301982443029430290679385551/3398412687366638541233365137084722368200311117891192348532156645374786104142009695796409107380345795998400850838706661851176885183144928701608654514812261697598380070746520197171576610572921007069104300695592751543563472456384512000","1903039332876763837419920240543738799531131775028971323439870868730321221615515008394327723508670975623498588291298064320786970626232668956372004004897872810230178526101184611242511193415796638694370503100219710864543168952682617801833318493436174387568067811938490953495819438108686336/598806534367503338307287246320963280558134937382149405305466709787179429317914803617527827862441615350396864359976273212272586892074799651088317544101755361439294687323233086696182687664637422796995789967075271448560870681210580691574924544896656175563265378514188341796398162841796875","525573915563826130963525826191411949262846916750432019596028344808298471293378917508549164993368392834023782480702893643486699787870059946429810070222126260200026332874480239090370088123833491499400991181659445914352500247596757005142623368/163278727324937389095822405034435687776345799835442022795533783889356344755225815267819508608559076191292900367982490827396869405536484846115955581043091229202052407483776587687967125885665493681707461345895999542381476164157058393971431375","9263815657177858787273494705338516861045771674838057329170239610953039987023429736752079544014780707408666628475997291124805562998227296677616204140605356257712022384368492575381355563976330347792504605666631512343447560301417325154003481040250148561839861837778597346623630046623751094400/2843321709948499955095590862256744532227698001408929142548057792217790532624003190447363578048562448168721539177458065482170148482375585867230123873178100117094533143052886527452665480614620123764036974180917207421482431983407742154634391264619615289225747664532332469783301704643254076601","407959339726114455622180187758753007349209016396248763075759257357925636039752474207685682218422721827857994768023399625060206708378433960993946156803948655098667156937949174400873748557248801874735834957795040139401560494087476967548060208243867/123780218751812156744401121690996305978134694678934447237402511116731459214498784497436358160964198336874043702652746834763131444030185151143987331404604087778514863973633941401826334750268416015224906056576641018962863645043976537664227639296000","2547676391598917379516698439971914695230548782904479778605691338364453606537643088857116141939170899135026552016969320061900926954008522781162186995856580955090548471448276736878300717869625651893741316530109438876067419826217901657017506157997588944233677467357220316084583383623602865379325184/764562034757392298786420374672266498815021229519853724850874576419885380830752931701831256959159800764672605004880389358601658343203513177084389490286723240185146570925957286083025676875197029662038213216541352875570101363668917766225709569356861275434470568767077844675593176178611021135573625","186545352286463730559933346565311535598243666022232037054735807289501173444103692309735768703898330430135399033529355360391658728987379385732098960609744313878477967971557204207043802935782878745271859468248704012618254203101767841517569443555143252/55399179641621656233589820996143825959365789093262978988289445625153099592463372579496245442338653053662134699646413817866770218574795378644415019944304868289119443774932782235638737888469746745621382139263856603239588594078668393194675445556640625","664884440164786473344854955309049113269357314957985265728106924238588705533437169796551912202931185746193155801905841712503407258166135075966280435780812714252670362202091663287095423712596462690753468682634261029392794173636943978404002804413009590005984736612421172979101972556772005594499779860608/195485517776407145286424460448995460754674039560651791192647586550615878988380153730602665795647187884543361218962125172808792176382956599256188706636727418572541254480798303566840010217729386905041217793614214518363859058348249961790104618910877813067510758225302884815410347238200133693756493703875","2614957283934314904315471338485451166053664494383241929385424599389309215073267052860464009981063483440201193771607520572077231889699858482582363845275452280606276949653970992719332472370351170732899676316967244504534154616036371979031399425846100527685/761493664432749089312665480773496290658029971027686543404885407644062485746072719559288231362060149626237939029641098328278650939665665969011529293869562636656650999759724704272743235210867676873525147820749560155294022488994426729939894753293900972032","124843380518493746761140367283007507854364503961156704095198010255465940085534099747297600085903814014415830785663764373057896014399822131175202342399536439284123918855893825207202244831315575594886675813256448846863723093240955901916229136393454605455444105444987028391748121054399538064686074523506176/36022228212051654395480210378626648518430280334458144892889271272122662467638331091863215146548048144675657239846337165813938424387499358852301016926312083940212100001220180762189978024821166744964908871443681332664798940660421469519997746775275873085770018269706847741064037876137315001228315806659875","827992369063043155578730871896750570951766628472810506926098505028264552046829097082095665194000002802661600196840639204300804225352337632259980703832713031790922485730615305441309917696044954289187837653933158950774246017223571461858939407386087081525130831392/236805932823686534991153393869288530368011574665859226704279685567723830696754821658770176385138917722808377962346690757191122309876922069867472518117628639913077442806147910884267694879089753138429767401700283014143248445966474839193628309668702223994071394625","17347276886878323736540051321582548724378497839789943634071026331001588645519865992773157565595886250230140452154269197770615097377486013097979087647774513500701793885978192218455687078883766086309728287172567466406449372659680040183273634701092561727514713494914793425407149186041796935055187281744386432/4919325621804683623339606849970832094714371903709195539440424738973575902329797546592497378000858196173718145883783709223158260700365224756081275272021856393735663399552166737690038832550853145831185979094979556715294990257315369124065787473707136464772247917156232366320267601622617803514003753662109375","137984231830526866236186357461458917020538108058615632801298091031540729111527734872044790487396302545910108285921421417358113055522725197998483383380192391312304647004240060970929072498293210057120617332323445379424867965764749534125081131327565507524502163460761/38810445792642817561168950890315210470940006613819790543653745327778579787694809782601777514116858514049585074667085399925278459138508514838268321349069481334967221455722811414399738756151414906092225265355449011152267068726417045644222323488445626292574879744000","746567120547823334914136339633766098626636643449144032626270358619125402826113269699709721071135471625588981126637674402048519990010499180844665151971356149292818375448504122545400227696621572263621729512461528550588108384619064912224884465737417596190735966915167530332762203074440688676123756162572829692160/208334337057923929636884170505570363171441147899816815785150954417598643614152856767186132467069365605496210036171429712485182162940460120834349006784956522600679357307849981862006710239311750261522832996877712350330290831638640913932265004107623954913155144975252743257846945609734368518424172846119306643431","64649371728330695076928013661001819989330953381731372450140483779536126948957993261299287753791770622512248630224724990234903928056275080682537641377393210728546364176267034339221558641084730052304770498929958838997239635790469536857863963589118888238069738647239076/17903951498200212327802847425913723358452100686246224008745414214690047078122925247086521362329833307849817944645647750649290248110509395628305970523384831671737569872597295947593410067364379687588919135621621162007748635920864926867870502568935739725312687094047375","2454918942158003099688922026016393688092399295166304634317616773083386087532869193458590448918958337530406410803840837646465522656670050113548208618655070231274778592766244282964463702354872753657766121825196898916725498553882689210280080206627916046484942827487726300822318764058084323314109595329304407466188383616/674880185931325925966586583820010578979699141814417326552629206140252348822939845006845669570885271576698771404162512001549922909048916000017837898649100825976232784446638776021483802989797501705685620612986771521390439936066527738682396560462899753657942715306792783283782238662155922082005591512296007820682995125","74018558041066162916454010680594042518462756234254788158141115244349044958441521749277686851928706433556285971088455226217644009628399441967508838553345152310730562224910795446341601049647392069373970101491741830623078126344928804029524181578945586663110848142571149861/20204153620006780689923328634586091101021423979622170579036140596085566172775051595588438592742563923428900864000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","2127032036758045513335690185608563023954009095206088224487365541995326714285119384743928987635752931664240752323937321097955456543854943206092931247498833001499955456190701695430459583885125382086777607021670447795321669948733328973350279846928613949120929250312666393359442423066212311060931469017737106028339882830848/576612418511902928757340062840968526862381326698309578771238715462180282212422302261044980131594522407066369222998903808960617461164985318633518680304995784614308979881735537678182134128319596636920719106506829571072447362052319438091347699720147003209417806230149598345068078717948025207635448205253184540936478445125","35289653975561083576641954928762116897061274899517309102784750384002335187117263273488751066569234386120759866204372398611196356888479036949053282301027789530999737306501029700128744408015642211359442183943916106790666114870974212159410284751571905275610921784716184508440/9503006066880728386808143045924119024212377150217533250562188228062174064693375135306438120385877320162710918716613546077156389583384656340709638430674364232343609717735574035535102953482366914421205216675248471695111720986346092738728929878538430662191272737183832556131","102633551023964794485575491065909467125458972250222581133681080524371507544152979467328048718122409841060527545925136196267751819689935599599321090571687632103850847605493223603751038996548520557330016046032671961857623066292962260173840972332108111505971231021442896036760967107060309991355545554631003681544611731245475968/27459658121882266328752886605529964804078316737648012166874496015808620265471203512606463219297059547428855195782384236337998738233668399173746663289852416697917397644234441300570212555870401420579737973722145663287124151049692290432756231390864184491891697469874600345958989433125942336757049639797225309327019275689074625","10034393558388390065766795008210457368713365491566387292163814915435906649268119060550511145023450790393353937124495488860451123302412204483570913557762460385297770427946219119911920640306914453207097103853766023934602534502476962159682750262143380527529536498215384467975023/2667919902603322771586358077760621955455470781865624844984169443739075976572061827709528710108877015489050369589117491611045518221354793418884447632063538994046714401229510497599783726376490260140723032102883617341970952663947646017489439179953454964374887388652792446976000","248528145263843375390386172800048509380966183384567983242213959113927668429802237067505890436957693495616107089384741585283620097982859345081736730899912519273262934785992235852866637878831878448348444611412764161078458068549719800733237024285525816723480868704742804077255242682077291713092790250511567621735004237450946304/65676865669148624809340872151906045781446981664561196686217551358486802274698228825404698950974939545099727242259547145392352658637333562345477931951890984276718673618736565926663528625796412420753961231404680876558659735251469326707567479071881966875336951133475135427640218972722939427821842173216282390058040618896484375","7805448718805635696495809414501206964843262114470109146341305656318015059743127114324245035489577134938579856003956861881125856595981500593426840968087618241785931128978516340812066502964561231235073012672356530509663384739132686548934288703179479011016719045530855033205271548/2050525178024039744126592505352202216905491833360272553169520915020715464206141942151086176509423406413311520838568324134077402841030113427309725873344806030836314500267104070131451720947531994814710189000076651895520222646974590481497382830325485174899169093049299764813276375","3355325071293197839434119105039673324264765809771192815982246040415580387729382404624613875653005261578877047405365032178619450963731719777167015959920645055600439987161800547901539269321100559393048973255388860193948274255340335876890491746900991668165565729269698196233805991206691196045182214641935483083662356666996922240/876402579119117579582569839757462461050855174353108858954282915644790659429341853404829661899850841645529640454766173209897510988090318303454542547519850473808789222552969933222203420847859171250332350076509996295844203965564448154484566493395403967626596213792922784509892086361572955175655987334882030766001799867659814117","218871061991045868372866381545267589365410350294028138778572466235486397478028823720846191998825628156716190463263492304639890659254282445466806224943413446008645087186307985343574807361972238230520975439736199291019544576443791916302825193643774360055545186783819367378492631806297/56849560726416896431557940314760680962653658127458002233782028041537121216487790008085876994020812492987733987414743604239935223783349870516284048368761617736127892160849065895223288023531930411718807065209903593668117085505482007061969339237404945180379460053180570404846043136000","5008685108365226931582937964451700746853986170633433728409171904803795018146152804690759530990140552460596075588463394200510044617816085275660078502126507209302951286606953039953843685800941558212440519542602092919776366067720586295390886070120828199562643208637974347390938772070049344991272621102622931576339988103674070876518912/1293888539680354282541277646947380627241979967611883341823378331667976045287311988103163380651334828012840330710760757271860219584371109472132211215957402251594055009937397184768184517621978947384029376766290498101728971145633139541827544539988344772578184316843734267915665730981857376872622787627370859411909330227080697966353375","15388340113525711660227566446101909585796746979396093776960989868457211684028149502578116456785221720682202816140911944661051001675127262774824593420825587319436537346311831003212424497488485098543512314062112948777572038731823948224734505930748371522309451168088057190162878224801232/3954220582960831691377435160890656173654063611768428458807273708040518769541211737927975894584024448193835165167801976423275767590502552964407494549049777006346189436817215329891530811451811864579644894987864267389290848598289794977382504890216219362031324635609053075313568115234375","5099039333987561374222193551155323470675617979816941646196895589439391685938046865391119484510329634015275893520725135141878751153360264368353595348921951280561029028912953500944814771064409611917475818956659775131751121312316084465321917769679881052144364834485866477379437705913911371481828140817759401117780199246301705600020671104/1303503600297679371136943454060319958680553228879031326679449263682048703103464872914972900105569835004878963701599765030590097739639045890060548760692125546754294514068052902543220382104483822438283040090444827980927544440984823535260277595466339403795403200720622852069244768910603820007632395190204569927612348189089161551951106625","4902837141334073026145827027361937996261324349722726869116185158777439337041263482852376194988371853413467559557923410949898048139830183335197992754748294810838187068126867611615800383834975563313220497573778480109264178673389149671194149749735833378557143135481387904961537942569904075/1247045310545991266291285730016853118981099516935251861146038369985109288084420528171217942065832292739130145780833406014673689119563698528225048800794718789218267628507713621235056538202070171596177775095071513194885568843375526804796016261173388452184505503341132236719484809714335744","38114743522716832107917466438257616720476488812538316101658139632867788464381862291240727309611460187159930652186486096300862388591521625093237019662273764387591494074792574929490381910446287947994150655077877204446864004067956087975012773988833339521775463977233068498404144221045837190392670308437391686081418318624745039402145439223552/9647001083383999453668111809775451078976046488746916070976218645431946648087171586252172936600115032316383427265217993193444199863138429602138841976586190525451324093772097241349417938578878934577091671046050326087898259692917931230974174799815198493279413438192301437068820185757869608523761456160341754512329264442115351926967120404125","573695055225225727008803730767518906490704995929177617646275646884555707960986625481944101622708415415988844740028718027554452662358957933526173824325955904005404113684003841990198157072540659184995738719040024647370869010473254071681533880576462368600901824622431045529064651675640055917092/144509482511118816399089096021290587489594541280398871255876563615464628718527634679330291741479135415168539765887291789615790513527330600394937614433502341116068305347468133950204152174094704092402978083370792135432486240914953928188835819767755172666693219213868545854371103120604946200875","23876960329653589647925126180903391687666378233201794403339630995420215267415575142266707357255726330536094448314199602616026935251126469221925945960901748679919435908556550271504767784553484434363646489174587463466333864577705745452492395785557425904735048180164697040313528831173448025400634629163795223739061661461986923675833880378496/5986312408594306954013526197465608559068621248896320652512228238115589875514604632230098997609482248000888567135685167138762172475788060284232459813998201719590208742091697294562538265829954186149162974972471533202880368317237508987477069872431064075005305838801862900501819963793062041081601844759452202282545840716920793056488037109375","58168289917567723171226992383559866214094157894992327555495441698028867727845766488121900626912848698952863438654895252811583144479300382761129433911280049009362667380001406579175563745824368613319103673817094498117944856004415812877213722455299491145649879676787079744410765053845551958756701/14517067289347903655500020160671113450349743650636953726251191692074385521975132268313263723831804150872238173602847065423463131917373356798750100313145228608894881457107689499956903046984443545789053438946050974567665049237414588435796381674590098629779384355275820782532479708807512981504000","728621890568281859295409481422447012528302594365693410763821707074444799793690738137592101239862736313347273167450056625929591960610208335290882047413011571781161008296084630072829079783328937418641417642857196346026366370059522990813537731394823630207433267854616768658990289454635793326766697884798538576055949457122067828153655416688640/181030730759516991863708593747964787874073354051675597050399087612142539517308720603687322924426591889179726492403913356461908748733972707460063017057809060190437917851790767968877215795679844983288935075688219234885360839984681619084834228226744165610073685719017596630302462070188937998558312507638434329299017584329479516410907786681093","86855946923438322218622470067224691860808273886184997065663554841573982963995340977083049132518812923329423480393306918856650577072525633920456721265953575424233701929892019410099166322511413146891121248381648145391642571638857576890568882512129960291171866772665863159474602604647289052079991768/21485753507365901947528588896402264670781310878547726104482740647554738151100954835784115119035980523529677083504495839730499664052882400915208251594384038810917282207449860876251558307288700200910747338758723324686939379138206117634546981163355060740270734146780942696291669461182599512320099625","2158989152301022938148680102142188531448821359505188055264665167313418619665693092337665573150374231484840948447637297247277576415460889296724813940128955070240137590073233263168835678714131062764247434144994737610229909964847568491446606012581370840699582055341626266533733744293929658949697805855362114229666626620766245630122333733703618176/531794915405164005613733454597931482878479882704956110685223892325074211694837836221759995948610212818642789132749082430059593652854659130217225506942675608692701447738732031302987802196501895840510235161825501235133794449421919927396142470196961877376701957829921152848178076410141813926924749057304222282687697297216661687583257901415465125","139432548574396829074586704387656697097760057897628994548358619815052936481650396157428747411173567801047221928593253479330480454469358220685854351236980383914223693722868233819483137401339800304943891968050399345430243790898955416907228948287367356990263740207046902209563417267686591994743547621/34201151688775214071963206765436083445901621442002061707492082843232231754829227303539041286301398668437202547003300396162741375435703188500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","11008517174872833286150985180322584448162884832099344969609291070844193524816852920942383850580217443209402836100467940651581092350600329145627967515818684442171571156446321228596914355704205623857871497315955269266498229823278800717909321269179839084452384509142712677235552103459737790674103994445173074670347080506698168482564009465276165824768/2689223396936080856855299215659204161946704205931885125148201643087176556822542895325191478283706585400237901215485150928036895428721912118467760766508162631903585126377676412573187912443878232521444786090510891599171741773242011017926658231638022943018461086517502584854390836347781674626615709751386455292026775663545470794167629144456268750125","16108638074211260588800537540680707641986073914251424878121255234668558067988171568946079848860335948991834525552515669040163026131919804987340113244760738846884911038097907756220945883750502673899084880578229601870882631165510396775126850307838505063922101682333806284668762825609556049426829531780/3919363961344261777100658318137884299575193089462944554282218278496298610828757650104922583359642384253066896538203596057302203635134833545580869871333892935330950583664400555463557735723364497947986885146043017010159347046389604172186788902608216894094289769850517098027486468084407618748895626853","34420755849180279597302103726180110022640946692592540634353734157479505420320000324260530767186132260970572450489530034440214259559325114511265075416512316229177952140217732655405289808326341696986755141965043719344169685611217958619102774617224847284122901023774956887687026904767714958090256282893003000752947427857703259704682455375442735857024/8342030311716679826889917494957593165464748884572298173556257652389845294530325764837124998293398445804458613956489096007564811101361266196542129764287084823604897187311540561857741285793447174119667215803837719660675298308873496219385226998078648428368061868944322478384684509466965129972030932418920415308276430355882329457342937549162000252625","345888075261020004071220843714060353763382280664960929903544964118831237876694384053904571498830068831026644303797377762345709976595360421502594656308937649239978525713471393570536680412814805076323426256584504251728507416368609420882442293831684681071553766603478479006495757222912500012444787804577811/83505703731469734628961395063481893801938371516752417759131774530720075262459158384433785006689548434701904106312038822969658455364219435022841597243178757423598248565463985786213156556523685666430799283870548238467817226915680747412191245046634279766450629886904716776719219698922088211154187845632000","1061717830619177527082296723099890392273896386613997004874669053445943252046748251883532634529759169500795452576392700472771365240996842610207274128102329096619028487369622001737128463631016494371635687841733644339636164570819431573829173533941056258744442930643735587780907310433371453992062647737259587563398111688659657406089003293576961475848704/255359631537215747979895955806995352799574790340218399351168178555478073997876110889483456972687438702262017800167048243754141722496276537685853311434069991222324039005160057724073156957530106623908696241268268096879569794431919729620178375212905203484165745866913773304319069321426245521467122472046370356725530914587807274074293673038482666015625","274122944106300296738399632684955400761495830361663966466225652918683099779465438024846903286816813856490888796372134557295699980528187779624865098445756013563535339056233912394908544185885547842235097677765325396255649207317018754967666450708249125316192200151505568416495274671679500594656671785202496/65687592621976546250581560102201535533608158256953087745856906437400149205693427285162333502528793675585022025602144243543064185647792948495372442630333800126269123531636800213405254045262127593759539706750242430153456891792533267948231185296091297979933562727112487057234422009426868531651634706262125","7842680480716516803148821198697967237136721860017131244266974996267074742248599085253569637183007740566941125452215834642683053334607896723447140851344501084122965014242091312411884985569341166545074688756440728922408743841592658677792796881188604773469108807869960161395759837407978596679911066586626885830991556090978327508459276025943279064965688960/1872528612245648675720382138045071131304652050696842872529163720558126655075937845539792108048310219395746259570506175902206215101518698490144716531697689534559827422735649881381597761684154409796315455445459537515308174919488497154409643876490472215352056502193150125644288086294418253309947229151074464928874881827227706992859640236086417889990541889","5300824422251242070074569186825929119848111723012841627275830216301188228660779008353049603527567784119877706984722171178137272986345560485784907345500893648715341273841147320288851034078863843374665850852481747000237834238703248634174397792745914847774297223176674917912406659831206869442510948965571661/1261140476013707338477604677428573831791396352814802149994640617701773078174882455512668089072441176857892331468691160991310474734143842336092636848492066592397892638052212250229129355009939118431643425836944282456647571558383755315238500832868535816144280088644939696339160092963629012001958205063168000","2220223718762215584659309059880106334425515875615107369399767892051551634000614327272260081056973863669004224981561870246078120862256383581012183852291444462730018546753183156982897386563561418424093883164027305254176874653780425452987066512563140531367766900610414277825262239199580925879453806414860409441845631158680721091621460775043562065815179617536/526383206607841251253861841374779803798480623722760367843070466043030228662340154304405180907941079883976168609082254331465595267209149963786388600028701073430773581228212441424400748220833542964971495005714483235359479470452593264280645360131482713147116366500300066771223383007216182988263355451923333319170174755334598973202740108032097242475554128875","521891797109626296684891455959263713257353500867652268541535940159815152120871142196535233326890353914761242025931373491906127275561002910157909306979093246574207104081108188995072105948138299097848175016082947174156278439986705241571619793059501724269644447572323501261424770743329858038040685313621446524/123310256826873923765604825413207481739886340225713108649758575106598510022338480189649787216845041382860899099250547657534972156328080736149239332330143771138115695598493059325064119176038137294863053148618656356436332991079150723235214278848602671333076219529535123842212129829931654967367649078369140625","66086044538329677372986118727999622900471937619891337714357792768200341519193500393739322894033303245376225584865369486696276607060432449792893028061817203932068085863800494054274423512956136695211796751845295921015953538329385253280866669403169919614982155350899648626481405781514434761541281229159396787287553493046927448595964103589100429722948913403008/15562137339474350565671240515273666798063901504051979980452491653975250630723677279081058884163396938548780856293034775459223871281049026140999055923743471466471830572672766633086347312178711643724485955576579988182546105048041649947277672869613992334541438784737993706482731696809943027528882927942967419447250586964258807454003775693567366165507144866375","335377615394100148751647837967017467711612297170079949298328061159559939969228226474615711044891085626519877634842694983669611974807129333052471799687426665556738316626171408219730853872410792831871526174987402129691897433888027072807302411474690613948951673562473758814664346259109886876538510453475290967835/78715592752271462306588358880337347638000605031000575876214116610339827495261512281635361568951675037834544811575026718101166562072917855004822606752296233435017284127594847656529606648345533195437635894948829857913798336356647286032372695130461573940500785137424365840081503133157308796505622439791698116608","20090879701618729602554170716780970848925039917987945471322994867171660307998603515745066411687983450400412739285577269751603921163835619296822801840348319742203974023505186187060251544248644338412667631232247108675504629538319425769464277309915502144443973397371136256151336255138506001292355330875114245901820438821732843540725116728866301271466614762497024/4700223519410528857298732096729483544820841497820611795617923063440946097326817340637303431283005509904481323205480729806879570430868897342398783028649633951362398196137429076844504529051072393709154483678349272930361110568616112723747726853614661953537957117231900032044221535502745676310313569997665352252492568100075191900969170979460298189170486601502625","2904778979985524171206573028445379872240558084236464200857594814631031581387804621371822074061289363372523364167184697785570324832815972970658633551879143187709707164796663015180877412717910872234647704536817108676736661804878068078543241390828229923424191204586313620612539678930999769543756218765870513049986792/677408099044823641581658869221044375312077929976719183424865834811543737800956896926637625166844372424044003929341361734886232742770909683021563822987505236295727478159938135467975522336774471915167606673489722102077041330652185811196423400701795791669780695158730756241178262962515917389382302757366325768069625","31270155809329751863885224732454397292230969002004953832354065319735530624996254695453061851449600345977646455072512400760539747054003851289540339425848681804190284451253462663731135337775088379954403740058084949675460445909826322297817535400604180338201322667139062500269285493417563095365899631360901732684124930296643108551710704785906431324876072470231424/7269578038000504017073007978844992319987411732848567116655821196644382777088703228960020894756722675887473977480537577509061256138261063926845643360849217556370868752909531088361229374467207196928745673402380473721018157327193509586295879051411183657185176812738231456253321187419224704301236205478184115996135940848503487199394612616742961108684539794921875","432538822079707760382094121020421735679118830363764570640789368235407853152380328891350816400541189148550353337874309885334920995713154225799660601389784410911658967499100610376065640785585342035058364676314084595283850213942576431310823836792440218271879354669291052589804956435743500204185107215929849054782893113/100246574739326291035824954677502591279343311051719151327066341370995390423713403739043396503785261917771859220535505691760472395306543276314938287868734009582906895763073519374099272340577921671298878837400921045252035507925021904954445172372479744465666760762909731237634082051855588025732494461939980856983552000","1914333673689206389116942789116917579088664511118582610293383428712902211612554212779880638065888518488492298586641997844141510832940409501694726851666478650414191249534733087933879981733561565249818572204932715347752949087800778646065986244657260832234479202201129845117955957242616947361016603702640821256099895469088229339240402478576285854783063612307200/442333801076281757298117784528962837115323835962460661601905131618341609371649347131724700192551574625400701487125984359494804828935577124602622582550626336986871791407398609915208114339012374456785705161994343348351473385887949809051796407340988735853810174589261300681030826392672282630613354461927208579993042968520650313621522933214063366558703422757071","5704691626402072213006354545292364761246893919997531024861408248746241619817955824682639582830486790618668221530365426203424888737658778881721063941495350237419723855000515747725926735319471480027293210991869255971365522170749568996651406002311020883635577590045650037569906001924971041810547543163363976464780729932/1314240362076792592671773873754757443276256223533339004339330559325754574023619698171225777585408160438834449576526997055649849875516310105297894855264038450585295422343454458568152668980131977005808840141079502436391909349182185596381509091427752151860204235071122788499996991078935216686010888734471173124487937875","451219364084386208718456142329444023337343409261545444643031014769484085278440612677813682892926852469540118625738238137458321112005189595703619178533263706811689687213128887082197330137502064260105387500552856851972124172206996205919556553246133218441769325133725631665593372188755090094541462474970525820334385058333756591222492801647110594428922046641945259392/103648250172203340865458115839764297558925693061798169434516001775068769911768281084188883278842546791612199025413573394167639925287068809631958006622842716869211374513136766899877504136929177267362862319748507372147243911522667591375015611312165464514308451222180272935398828092646393830572838772085366567154646425598388620105539619174837489536378605144891769625","1591076564577634575701791393842535460875733974464805197283632670013516183281542903377750304419996681222758401497321278555686661981435637461350320471258386388843198706277657208526372100698700615835733712519332548607115875288787602084336341594576426630670911478276101702119972195558314357975365863803265163991961173/364433108410193393847203348728981296285742202617988970384277162225847256295865554341611171460436362780497179090329831885853324392923449579538286804729856000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","5307507148709435807261229345132535134848030343901300324623409721698217134932866488937772986386501538026693956121121771089740095760486362654754229904633476234090792827930433598453200536551779789049352131005222659995845427680686677324963223653949277037520711609343166926627713758990384011274777087968799793410506391884872456420041494598273703914689586637995139580794368/1212244290381524115082005575105703496583315188540177702780216570265159923654197746388568151706509243638302707511238539845531608313334248788980188054651601536067740709977678222790481348003085034888244447626347312094586389347535167903408519024105748523384932942441843118813819781347089702286481924493361058339731949844620763272778960860509570622673048786968660129650125","3046577098843580578619955603029073328361298436129791931304665777036152915858575282362742008136721284817899542475666054101957899858138590963789072530710775790433466847100422875906866496318804986202089528198912098377828580031852152997907433335176267300286466072997014023120087988748396598176622765923059385876855303940720/693911859077752895978833241338902695755528613729508555938416419864772385336777924892434701804078893822446727762077537955240605927550548046309823051841326355655848406646248595628715185413852040295631448250459076043816328082561248420925930431777502622148019371383254316636979070731427737764160145097293260938978413488819","155310926743873343426312607182060072939030765297630534544899230213054714482456829198485999782086944271490229412707980997432528653509945301574794242118433868747172279224118534460563400440670015323324602117517342201640016853927923976796453577048995243600967202462466681112804476672348206491490513419336308575442086511015101999847896197546900512764233674747415844045184/35278162986589659300679088538176070649273991865663041616088851923111175518405117391134863644540911005782372831496121355954470744169969774540892096320978686548284501139861783292226140413769665461494668479430833892857992401391262903582109993838728281915806394747833588629467613308837196269424421131934859079260185052081536487462257809987002198437182539441349474426375","46729591025621874782758519074451728476386657576036360734358719976400940301493939192083339293779149127132651616972817165172116269307276487158069293114860391502484125554406945249728802484128756924044633825692779783425628292959170597009935305429239702926898931975023598456207165067568919757902764815108751735753431153581849/10585868084079030838651390738371141142245086465033459640458366146849314274285871375459898014414833295804139979016362796357043372316321872357817727821559232353993714062535883074661734509440994664726425399880995133711038483607773782532430879196405793694658185175583691180757783597895616920432527125993118171361116684288000","3736372348124144720852190769710129461145889011598636925228657393934132828633132357232883470466940330848177425542748100211498184494252714616379450272611850068867816250209867530921278645286769418080018709947826876461419654782341309127709703626401211996255743831998918894661053669189312375159058718767082163156988766821194002596331826150321864927832618126580509732359424/844176851007504003627016945212023239308348428094023437269532743221937069345682900884618378849283002998220513307273333096775669556093005637615012750733216460458689282791632437851364674879152695438589692227159038555722539345972833161146108367329370564838671791241431125003401861887477969954740544092178721327724620450947646209914621007186497081420384347438812255859375","1258774755828991281578968023382624723772927642002016270484090409043454336040857926581316994594109169123354553321469500848146015719851609220423736153365139804086413284787598253618361769125996755159571523632747129480387254164008968993734442164892486441152227433281625391753702577143985047832519062595123255569172968685060844/283659859661671181526547833415653453506477950678651675193210969173130116121017723360258249430884213011988678011357458727603413521688184521573094783291496368005697481333739504490647194454695504722542014845706216224432373442438242355188461951883454664693262684873988061018976711201351382163527093784753398257094429403691625","84932063355292829988908961192574710493098897148701473172754949846455626381329456661808566365329266898990829247446356970454502007127269708487563279536825277374133681167235811080298134899629580318813382668399644553111080625918213250223197440426147821225593304993621451053135332451997633132772608233430131400186571793929377129211228689703376067763625568623535588709576320/19089978133324852910950469658566458037096027722326716800113107848115231563787455584278193954518442601810776347091253561956877155673550458955562102935555510392954425196165785410319126098393353878286400877305164869548380670204577544630353859009177051698096136470072137579698473017257397949994722015089768745013713383769765609613514021200888647472804720456494757423299627","802638881530832431828249604040579750916118423833791608589560402449036920165704012070349537114920882938466635598602387718300074733476150548724726460209016834416094317724261857969955414000155807312852092720310159572547644569797512233899495300028159721348599816083166712365215075728968005941610056018023633235372936903015771583/179951197386119079732438617407921535065140503043429174394605652913879982486051627760652197484142547447000508189455126493868229565647284332735552462525598465192073558793335913005459266977086104359621022691931002488052727597513413492393525660272900161375677499228252863529934576881596384036401784035248649026076581302370304000","25208742399375362881099811032135575360109715964024747212026245529087599633280142314962581193303683759605084995818253124445773115574470717199218828756449187055537877478033129862600982068782249943150019637186466260707552416433010545437321814115233841687700051830170191107127799355485920046505591193770164750886037885397478191534797655616745528343172318318678405576430544896/5637713398995569614196397857525646325234056219513202928587580534159596897880731043336790273040813044077153051260989730372846713618900145444802234629922717464041261370803598799826604841654608724727320798324006129524610666235998113655193642594744544226880944882342204407750193512869672849910003246504052298022468012594459974209940607450480609190841893267203392880360823875","732332637178584560220688900268566130246820235956768724845747830959547501950765063982943061181526237061809052444110437930100210105274824607344902764184151030827266142225894655531497849161692760385938786736436977268616029862577293984376170905024712952813234949508186306774257035535805330366742322777611063402455261391021097128/163377988152179636922409938163005948596822656868040662831003991395905185823836089887990201522673196719628247106777881741843786365701135555917263285268753605514812568258179391272113405920369587922702002732667842511108732068683407168090725712401954314293193572654347237716691784386690948494003094992876867763698101043701171875","22391374854299462107923583267570593886002658786775211597896252879708753450794332301142909715845151746786016535157797023153041007263258732991465037648536702217273897876864351559736449481285518249846264600935543582562018874574655740660800634883403597181876364712521253650744197321080655028374602772696770227741610874399454362583980465225235674816785988164157351243193265401728/4983275997188967758382167867656806681565521964135131710678447245984239733544941881418957694612909599261843693554043504855207170782744518943778096768859337980470219783210191765678908537645270392500777411134164918803949155037581108678968701961544979451081836872425574123683574475790997414488641534074873248802450108535183413970057319247033379016606809226547805269752123746375","21252344995592269775107236774689012760750850598567799560343535731251766780016530978663079386453430272698006977668063208502408607227544322945446079708000304179073184745623740466334127867464883762843346619853325415963062181018736410570113171387891518398846617197097407612852037905687899800932343156979591740310928257766081697645/4718515378484509142377558412184183991357747235892194234377932213613746008373918923611236346330189287336493794499188640380975364991548794341177060325509698404571318037298112293926833877103554546466055612498927474225619680186119313129604319096374924037870803554153458104225741255753314955115645304948564151765516183663634546688","76703085666560609319365659209445044957052359500745196718269665234646121134787807938680787341023203786904308047981099228357850016602203539979246579454229078497537148799349353250167621935384193502383187510928609818011142642954550330069991570983902841318203794113898871515702445720207144863877026526025447819537396146822201819435536435835285098485990260677737192230985069824/16989892821104122916312992616665764943723222199277412857053896319814438961475117951904867066845412639236790762432996309717924037467863024360211163971190006272168845197000304328480920483651558672879967350982199768255256753110375467976246339260326422891913564151453729285191351273342206198366624882195135056176502724912849575385576554208844814085228696838834665339811027625","40153831166521391225489894857551838468150576827129133168972859441122728710165233865309084872159583787083130713473702296122465319276461991457173085312407612757280915853584698420083436946976844240063731333638150599017886937783470942007376523947840104246927580254612991191040951001539641947153847776050138532219595746056076776809812/8873576113581065493273519627544307418139908640325227196912114520903505426722086265723900326735989771660987609604507503750212298754414472822477243293638486047313990878348820573874809636084574108909615044524663712495422565151340037564156235745628465172219286664653343193162657374410926171153516871765680561505768223660055617934625","200736374277835272485186523480177159453030082779872429648449412313247640312479214261681899286513818912991945046297334418102711629933437654377760028476767482162031641781499114859553677502002901248124750539270235098492377826240319766677856465093871367817683734079621359186477306173620331748496369122143019303740252461824523590096923561928354020960176605008889579578495073283712/44259440065125442964014453739391594153290923937737136823355312892557975399035370631521014554980129291582486968083228888083079118116286312583989433037097397252506140224404130371160608365777625538148303917306340620019882928744151294738308047800711028158277500317134537540772759486365658024194428796846364486187105343266398338060080611643110071184992193593643605709075927734375","488459049325494693259159444507437983381645757291858092983371672334043029615965882574409808932509285079401239403272414271652617474184321852388397021836909585659327974611273820676128650810907598106588433939541654215766888212287311943387232664417347883717203611092450971786083806323404432266197250919880225892099146722474124874256523/107455855466267410923480140898552598306699341366032095904938430084768624148829473848763761936703072253841751966906142283640379336131083461646777390874405323298406517250231389493084918065243079819898691146841695350589992171102939046740169198394671965069747042621265775948217054519855346617967866614303497258042439052681849864192000","8430374068596413768975326329313648683222744787097373111477788794692418932056901235174019333392845529821722488982447683794746518712070635063397464904489452840169472596494433874412726723065560358405027764015273789053064830528919091414531400589850704395887250756457780868677553068164933299802944396576360356896758745030955907258232257358056931680617626606715393885378887657377280/1850480358582748412767893656294669486390769246349349706200869446679212812264400876685764762211659843658541567071977813110496329850010288179702589501255367345935389050373021591572539260951149696801665953123597521983257852207280970577287472932167362521740230973547070264273850381896786822127290397075758780174083415923482640313277341120938690594859118603017930500014640169211239","58273615882491925540881784328370957720539797010816130007322211512070634295154626813477498607761260613353633996451797686143131893884559909668805628269959901044961666535533876340116728982072626875010391195372759135469446048394835148654407846242721443845351855234347422256700864370273092971804207514736924787577569355949601385705517152/12763172138328432984573837529764902730448666594097466544652830703737195804747682450548488162227364538052585484418491914323658215406327363805353540266048943197822838925184942600367647278764952826664684839953902567694832690683467635727409976388280092262839126779730168889686628630302519063225007497707028600865624133968363921915016625","2685278694947152969468407055109959900160804835228466214479525891103128459065131221736713585038130737099067040196326815283171857977706979990467444622550497565521863441617001097354649972660183038850033950647594754644997436624623325003537308428828750008305464174443210079059253920383411910911594636045517662796811001285984447671371943267419151220518726940455756833040934506414133888/586864816044968996825907488721678304211296267371936463272955488077666796280028127333229453342355554450708284934221461946991556216095213627059047984199091625921432110913096253352065238765240063555347292393427726758010888546427415276046238297382474708612526770055488323003698641493939145624184943388159614111350839555141202024991876221874110644879676602924730506882384603409121625","27700345710264347957758638741952394530538598225904772664391173119594616680996031886665218221392453628824570256438960349220263575741495285780845399187013582169907518462437966962923592601721119258663490655013419675469864809004562272799012227293974254329929404036071055528766397079743200179924243479370594973626764330855493789112414191/6040997839051213541001279276287478343874107660287651711609067205111574718442229224212245187655300348484144001298428958025052162253854676210451657425437588244676589965820312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","80160269787574270953020489212619791839643207793889009503234879683494928396231769167082355143564723274576166638869430572977442020236299319718643894871736539109822173538266278165276591962215927816541165548699380129014840956895931285215480350321259054359835472320394089646764361802445068798451796525897304221529850133401768027469126408090577121172238802281079916258951770135485696/17444957084936455555074876721808241311651668802091828589911310253709517226715880722948267977560381436307152342821304525073651379763144281678911047276389231713860392794975453518107055568765009486973017341479560154792340888780337029481646046233967923289468141293699236815196553819373828280398488966665994092877680860643266914861837639322607761804740256920429518434353839878280875","2352816897072623416220002134476921108405735955266703519252095150412419264317091785317803024028565851487861978477208755211589867803009700996828082850796103789009194767813611798769297617674631277847910238088040257037678126316866517601388289837575778165301828137259948173292658462765645645868094197736382683775415645307647043205988394700/510973411316690313485681833991645423802776865720580280058344111363363091616558230182669376841383375321912553771027107891991318313938505988903735114191313214327683449514676737796942389784957658395806951715454372568523597420866050825822028817422805046287798054682484158011143949412956697442991898914560191411624040490122951328364833797","6403295584873165688372907494046202150046769667837790834896334486679541887567517050446119511695248926941383207478170182650927368177009669717288184903306689332746127845953193587519575304974203099873732502605739219028995266139383163062837007982999189114810534856227848568800302527760100163350814120545587074865568436789021082619398126713943637898657861949091545516403987546145915409024/1387794272010111535893205703999712437783041553900341112488641528986385462810448493444968969845352401058333929711237978223214186693177251566069419805757440174840170213159651962686467523533938145629444468366235554597245713128812532716616087753947246800626006504878203666972651384731498770435755225220796872155249202960801768048854869001310722927230237083418017482134588865244642658875","82993247683514419570466529457059660634483860665557779709153549045427987672829778520201315148149878525274005978368939092115193636113741972236218502664881450367443614971109677363668874484696543982239492409231870942414193419634675024621942196087473557914167832058111113476295926250739099284241826553737074679953551191767148712684157318697/17950946423927357725787689855263532224005643859095168852729513034456208872420513601894508438640531171097082516559962755244698695622824386001219435651555513795509616906355363573638916895074349491513539093024980575852693293474288638209680085037286354050958859425647536735341886663074581909148323105020337857959651624760873736590065664000","584891611376763781852144397260140844977346305541197362434227194779766612939978629636198589818106137319267243431810481928639442343946346034433828599323416877248326356345631611148749005937144684862502198147087702668524450709118588741606955966569427636630159793409544653944608958808602551061186799401212712216156799273254257486955348236914237644151956226336750212957092204830385441792/126256710861549838395499078249922986417488985866522660521294610280820007499099176190820291214370699289977888813109514854178180265382471972583921477022411657285850911270389720508719377071949050253246021921916685716353393018411683757067093259101151481189635423399611625009617884983318141463140199839724797412514785751549277231259345923662499623640886881048572831787168979644775390625","4743054867460856425399742072925732465660626340183690464743217147109403130730445842673866624947360862438925194786600531200056131309608642363389833474026007798643235346104937733349791667694862514383520689594596660275306247615314272223660862212527346572811422915223417783887717426641317921972456913534338708745549252254865615725859881457906376/1021840037832289788284691535543138164288462770384961802287250236519983887262771944174557087207566030730743075334169628971336358708580124427857321953981475719503574867471090607795242192417162791762511940848493176847925838738242153177311649130718886794249673254183907621449520415060660496225939963471753122766421338241291756892571824984344625","3784664074155769467702999785016514468281913375341134899878893061325465790589101335015569840325786070795267055386681356241209412947116340524588831510768864231937929260236754881829005065056310226407358204278658699999612596866156294195316867934035877283950841910726224355461522065773816109849107487214275801829843762482082803559183694631856772777313673086715631547326400170962722842240/813783281473223559981291694175087508812520505931454895884442580280342455516154674683217348039336712901850738745276445107477919518905155156380620466135946654952837573797479076027688866326359448543065305071605591497778941561986579230698384305536224430794233462949056326864499827444363206162251104552740175503996670997705423888382328014210171324376593090187604268086334796245552762333","1946671258536842642381655747294621776070051525209940130115769153666368932042152311477746728678182920842238801763565726086459485050237860693394471644023999467670017470376746609892484192072297938254898880354014176373253875722410186683852253828299669530022166361304397631667133689128358365296701757782382475692465977794960109690362462330857/417774039698408581013003883929127512062321623871486379101498968145670269174833505080260389860863417408848209525427705249526516766731427603641806256289098209429110794311660844125377702016056984573671024035213045475132134896835814746425864304907974005950155657789157496389234919107772201305672421982198984613601511388413381215220924416000","328578487723377153600821813410631465225159589727320893988991729306688663770697528156625398176929288628930496338036815910669579019719633124832162035588583242320537435554101841406566009219059042888412893352417446437227440076869427577701706713564212185163005644118869496869980925214424591264870388237079776503547314587137721633918824664946974571838634860386893404364499977966899068777016064/70382695927096628347637455030970644630942872888311870124896575877585692281624151103204551947776906510366521972834357031777287506848887607457751667816514216907338309372900327919413372044625602555866294337672022362865161523684052940126509854895320132828009551012639156341878073682501185688461720664801829933689280752623773789373199210473995823367199793407048741191786377993390965297664875","2617201476921368517857942326432090876874414269689140439151907982631768946799200744678055980827789859579196832718849393046147656447672531861353456343821196812881882023188898815179947651274131166835133965629115749368441605680383605331300030886676081418867305170012032824011912531673468215561506423833911621270680104083533917562622600478548/559567121085534865189976875600841717161617153776904752351231210970240323460800785728739412474960421770806162360125774000625035522428160837855944215417821324758873127567654244465281354654299068546570789547691342609793050301258532586131013585959164719533123826201937801986942606844854123769532447570107525081084531848318874835968017578125","636225736038986537559880265988431731529837451289737542395494683393492040808565905376235074534207026537145408562785279823547657299565440309510931336394031904920056464959974743525662459433889398003683078967642651812081450227654478095420306880762753401111260630654049389197602389949892636943971690212484981672010398108426002137114819838399222096538921225458913266993881960732663394566024064/135776510176793971074115131648637508758953050390591773574951317807919051619690313331192027871176160424663811116849856489187562728496099757910540362703888937768555824513740118941387831822900198029266206334350448626733139136083404404120210893986654422850183837974770675600952078956326317698998103770833069712616832650406225828969036781514645731022616236082175582937900731419575337473384125","266695771933124633677367149389643417608461366874310588884377151539325854547826373711099517873721616543570605935954334944030816383858485296542260152894035979141266909050267414072982042090341712035518685997484257326212454742816979806460287972757626105526907510197321350895873473656215941034605746494172316089636216915825022339855304925515685/56811706665210352283362623728191218698295056176625217939528332247537278605113496147630185544004654583441448319260578659922931798845493756189402805173037491645434052737405379674607517658118427614090338938517963215812444779184193933749520313676564187507594274551791388039139409235056119788261689087831209441779870873305232021728002651979776","3511806683161697708497547617957719390189982761002154386881580160856792742952365159764830433511949678304281539875366378131195670004345568047690216126001067194904446295336734931691743477531830892015690816210752795806120303198745685394015161323982229908105397857791180342330098240702332072396030780386362735967021055250450666535422528637737695053315137238368787607412459874094164027214953984/746741569878639983491390741637813989978804202898438708743258000150996080386381281307609038830698579358879333079215327202911977568726258527646560497079622703052765164031089590965199628534477381843079892123440214378949632707668935001371616475282883095939750704292616758568964786737752325652839226013335092148777788733453702438432279149298482004122593243860829060557386699231448957232420125","499543951252504651717279461487337168721376180441322735807713499521878076780205427598086756686061009718016175215146305489885835839673419698751530207404115002383180054704927695269921072232395828258826213554806570423602966743337801741633869267620843626804016742412046844770601322513184123515405692795346790813502805238635003099976693786012816/106032986203682550514602969462803214831559442358811656484036951559991322084935692953211120289352600484987931812632505499612220494311324679562152078883141464406938524087376964935494245010636163705698220308243980789514815579319533341929989455211613890905485981353837321342730307819060825125980500975023479813757024395422041501208805339176375","8540849722242122835873311629952985285477986765819584558233324868363310302206006773828897816547299245727087876984857726652932481899766510637403577175623031467933486823994040576431755172220921921877192006685053572215922347418846423419683723609799729359551828522978186208983138345476801247634773975311405913274552616037005854836040162212761099347518242200807692224460514057530656658616850816/1809694575992816440924165741094996511361288430727981159314194000585536832192004274726651828760263522962868944612215633976203596150606503849595633388319338251977160257979846235995654357082321611719654136058257458753105122024859078420173515189641515736029725847315662215778251370398007468665986604529263071981040014321717598469319370651877296085250322599247141397427185438573360443115234375","51377057693118720457387330519321684810411289582445982078756989158447711080414032055843805733348558621949380554029375294451303430269197115810494758213980833379214402452992657502777067850631862453239349835215260705131864911194740832694498014048717871429797341104227759557199716944554347879767916801106279081864127192611546757627038037780244683/10867246748205139797826516105458406878398263495890048637741584969144406206902037615496936724683237700974333817527350121106320991054058406504571347680049945745432432384570515723033245430148177097144850158758462968940525568041926860856763884474605057056550146491001458649244094211354153171337463406192651150028767064600270112838159624568832000","2517199821548153657910904242290029026229621935918771922146425373057248090467388430999870036608278542449661971830076845113363443421757278612394167195431759807908413353743377586893872930828548256216510734912027450642648789925142482023713336937258932978503310551945630359646777080073329099268529064437120002567758664419443374110941824106727218341795100740316967386497091058915066147604481280/531524260324016969370728057738851340792702640911631807178654723224511108065633433027773388768889035083734041289308124943130099580765995149865288328550751289346866467755881013217287175392101334538392596956248952430438673292186779006015549928829953979591250274457658042926539541422697852390294886719770034058916886894408015624288115732154492554105512936468520265305162358665491880968652687","937159485027553069020805864547349554547661693803137696125140510201297417077233061462068930061915381468160677500445535971818609631674361074587732183297775728389124966713749450996643183965795829780345678634356741756033039293590264355732129789110416943789326482663579413229893878422643110852069225671783017610387570935863228248464396615988222968188/197552642195166614912991396771845374656891854357948006221100585931656016640982345159207601253599235265353060942313995345483862152489766993442419668492877390774016299878943454249209917002169480134131612530977452579520564400124908392339263545911443803619972765231094502745980083350567509014991735227390978850048088378721210219321877150756855372125","5119346675109082499980756672052066247676641510661024682574296075659671743397880591881419516307292610449161239233139088348510165442597278965718490070997173182184417648987611422446347235659085092530927312760229499083348217392125906851921500360553758600756698605047197529446594606336369425040236883171542367713951500007600355406492128741649090501989105696576697387613035366083536629358444229248/1077349190930018641197987339365056771667455373500846354778079878558146320193384166982231171317419356136237346389570422332278447217033773023556383420372685049620361481309067017697564760747047839930422553324681218253359586320952896352245366885171583221864112040038531116947187482413031483309534553461613717398523132176948321964066833901215878133594739833910960843185464241840039390204295097875","58469980853327028628854378052548435225264353747414624620847476036979290604604988637469977624105451959796142112200285366199247075503424204044884512269071061176877225315884188402954249683107639777479663275428465242905314418930053869461904934138752031124685541853599407727446896558064252696813370692668496452783003306386669962110734257851955001481/12284458784412533668960387046583440199646081362484321078872891438551639470826582933879934711861551014258493898870867541349962531447724393381011633785884743889445407749238183080941846528000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","632694338036291086868292541736272151517212971647680989553388199374739841494700315711180961760384484042159533979873604395621016272772109619401112452105475906812313548587880899058905419220497456502543971131226430775692744506047039958551641270070996110661036371362526401525207493270590999387476275629412687473362310414634469788979236895300129227082421021999210841384596617452097273320509348159488/132710874087075221626157136110978536488168313127228703025408943153782802265472978945703742152954881438058373686972477195846162708986982742647038014147903817539418442869011995988024638278746664230046452545499722614320284478925059527086663455478374200352375121910000967044366831275681254530914306064535110528723482282501358749001657608122307686482720926189537227492041135055090784059994118192625","2022422468242151190347511883185841333968390991430363660248687284021524206079162212007263606819387821055183192871951076644707111802972354128011904720586729919826758651167984507804867954970064938022106484656560866447290934136610214175516487579122328055482392137619829739560923807880779865442016530712986750711199998190148885726144596663143651240/423528009127070458603837580844559347493775236970253513203186912091140251858605354218715508091394564000304400858761758838182654201653901408046974668599216804223721114331085507752600832390227068985693006017591304916519540245902645712532993889000048992026931475754508248265356181099817467608863068068953756055334213584649136541490530849577363647","150542201776735231618709653388506394887777837646651406023174643241783006776019388336318216053045300417086929061565868663031237502137150880313922488106751241006715449458736723129545400133450376339156062387859536289694727635468338235084533552501618659272047966040838509286942825414463511175531001410923014751124732748099355476332649458471135027773371541572374016038525336728276024676601778299264/31475618522527975728853391146702172347290819252268551219771201846701658848754300838383637247014705706066050673096278897933831272607774110183488615338021656923433335661890414740664480671162459271850877855521869741833030384682549648626038314686632195158507693321505500888988183270276134667071014075017317692121986144742473139078857816578133693776368882596780120407949076129685719314703426278875","162664351499283182546788129866259011542529017155637405328005084357078048074065548349602626724265307733005745244338982661090506394708170105916177679714664432754153795772811389612700051002336719842784098507498286260450939289109123759859710248621544296008356071415713931721102824434964336667980062728653562369697289761913925215639430496443820411811651/33956433298509232632327667206936379248172049619640091186698677954874297837764235300806836350019565970550533206216590639008637925266405524715041372407701947953283803854153876844320283735281209725651036513491246238622967031979233265136280687995181375582844780830517825595245506321879177965868747546127685256867456319112247572348416655367667187712000","27228583713734183629451808889147559240254570554044667607519238865891084165382075658707675405673276615039702916443152954157535195508033284355580742761569101934821088036084480297442018005972653124248838420021440899368869744141698556359295489470499243402799483082406238128875386939389123336303631993557844565927960009744780823166462314116039469622216263221278402673028225214534859076857413557466368/5675134787340359276387085910732530678163604187009567576895331134521132071092293139167824957253050637085885426100206370974479279292804959049999647539684766632278449357893560561608633329561385765035738071726214510832066885156767060324427330401967034889966727638276371320401053302413136551142103678412692111973028587922399670456670380189570979581674699102934733563330382821732200682163238525390625","1340937726818688387636018677960518622106989311577445614347061615417831160296369500704524022869612973331444242000788110133157689786976834913297544087249593601420972111789552905846168933014570399562460789075871112224533723259660967481288525220689577290386781169316008987012566216235876842757183233207943071523447855623001920854571597886491163165150556/279054368814522483241446594911968519760869180429079780837994812436395792594449929617293503975169489945136244602350941695478861584261665582123038340824700224583170270427163469762789603657025958695551448477050958557681299495041994050951692916032501884523150972841782658389836059236040091605838583126400660344344601879969354053137568588338096589095875","8910951660339249479517731530773509037034977353457185453617569046885132434552771722727442649095007828468878374139001808825741829728375370140505088133244952288239619141544661695065318568074863317054989982620944602245967155400712702259180443238473885690297281525960618905625084639870407113029712510345262279507055197024677292523214467306898573956604928730377318210588837126450942086527893437954864000/1851573255256476362977604759655284263358595254392797078730401113550522214182030016660458780180636930591149034499142464357511158868625309442843792189394292787657774627425816694628839987456477799348874853555586931850788645677998004186437300173080088839930384424797706381282430208961565555953254145002318893188197561315855286173276564036402546798318351229978103276843822345004757661005876638005274037","84997663352987536417038496128111159210386455419431137931308301989414462311135708114322046234708053448098538629166672456703651524480738219822858469100454933583774404032968304328859365484249897913676382909050450855222567147661842184538302991526635974158862033287154321908483007506326807469239745851379559259262425675035790574846229470041596801343087041/17634687575122715507915388096857069366146981156897230620371714518707518105157483283253374797127075689236298114335734874553183291806268149747826050838089931351158483980735336772879045027213982661634865556129548356487722537193914986994283729746578044621115589195066212043187229606921062007047940293972381121200723292297716621231320254309060321476608000","1648849257486312935416274009474520589799750757877252390543329851029437452988499485179026845292068377957697884739052491455807688429630524210823560524122596610276957537756142278585091315141096146341773982302888007751632401090642472506538817998043326415693840862261701364114923327286462650797963969289743571514890723145251583881752876340628073395708716735192690808352188867334842743895738955762067968/341580411902962140529547622267381834425264893226447658723654120920549166416114849731588552578626041597847002946105459812230979900480135423787717825697955152193526724029890829615845314765605770060975538542976523177976182401820926854406945392167140347444433885786340415437006775075196031433365827874254477351374236932624514469241634422312990555534789607377023339236417434574755566856489013828206625","4899626659231633406569362199187192352933567344960498139854460545644210119722856870634652562532083546344965166340063297647520613455037240144734014575196764021102614748218834054157165781057405100578668000290493431869797883155764963238760612333048336953434663867580862692267574574465371615023999531030446250351305046572267686566999209229202587258144318592/1013522377571209303732207048597964555261512342860326827024786500686692475697570284120359840724596444209277948648863014479460188496587721578075151793081823795161404110811480269106846359964436993190293615381593756076515012514100289406862487971220020752628653845345780766244842386136740768474703009091552043945843632199999007070800871588289737701416015625","362903847358088423032098939589019598036593525722040887883164115981767777873860799955715587436566233010543937498922435963385091400670303956612881974450548904906949032005878241638546734597308786514086678561900713741746905742866635779432216761799371793260025549698865319760786921444505323758235164807966277024031605673481480590193724980659448692487108892154809490199414370023696404259691299614147712/74959603173756091922435708504751461448318819548943586676159545028063979695880930926805574951275602951047845904770828900645717477098988124553474616764040938121171776556999069351772286262529729056288451037717198273521810585868307402693261479298923209587143468206907278220909447483738730657438961435587752873879244136801168836767273934997417156543866722171766794171623224855358640156858606843576125","8521348154958613550574095745596657249924328336262127244827955886474742319277424381360677655239017583606851483318951440691757875270001283229585075137091617073509041644097526047127618954293881264113694362598157456878784814696577083997902588926421675843291157049153701100218784481406086810264243143337016042301806376864424632290226377881206765051896745/1757584673254145109614914862134217345456065873908262753169404848658913774363650863904627183104777337461445063704655164325930891269843669860409763569362863600932267319335889540453302785099532688264425988677082044905948179153286276609910158854349711054144968131934713419772852663860893241364433872853338630216232313607969790083448433666334742108176384","1802461420562646993856730082999823508145602238125054717836501201545920604020389361370931345491160549787411668288359013059160331370751496329806488246135100776263777863399096485894306306621852596694700845918608199329091852956315870664531614358379176680326508877329862713333336188556181470928613423972314983964578645688876556351433429494008513812136152576866650152623510296911708111085518974142728903424/371238439252064016214448115231139360835481920731625321084601566992497057371416121407293286027832357816257507287295719261141426130159269433199862002841433235955835172774430690352481806933860390015899973299268361513643524088242973968537595085600335021120523852420135081643310663869327371821064862449426404044951571585406092523478861879148545678639697679215289523234342337347529225543852787599016265125","88795280670112240977945082069219541902481768504536167808816453021962616596410396813316064685579412429940019071114917828928080181638058444302439626425155946562362550070187433083541414569447612195370911498321149367969974762244140788494955146280201020345849385865084095189982291190135293114489407801749533448443222584092575861096946605418438181411489276/18262596223069549313969288693970246663726147886364354584825624311486557881239003216971630599389642752648815377795018130449384513824927138566203714891090017787258920529990523519479383032564209629983810866231367438270859421572641494420831435563580050954867101292568399107965982704216434467243223964964535464624988344342084084237484262612100980519602625","752911409358158070688133336918078236438086521781731735123294741731669530734909563155732092406099003582749182967246236657021875488130304108082404134004381196925042617909108654109138702993903561036987511410396567636331465803949049946947888490287210013788802287247422993384874670368649616782837096233384279817294778916419067404863458318451722971117669642134894906235066332205740872938406767767019265664/154635332883086377656813458754577288834216641577439356891585125701020579768315520324293435008561626926046988056302745604248220408154454267643222328696606367409715369481567213640103076112146615938180089303294709009813772509602954514391675152597458428326644988225555987883250642389550531163153338541870029415077982539614784206119074702022117790679351778993541426110436276530890609137713909149169921875","15286089077439918584953144558775765002061832952090847117286473868694909713791678395221438112006475047633028543501632631679316850512797978594476229228325228403849089079675681042224057234415951253954044235099139983386056610384489202589484570852048157272551098909455253037561994944665563291526597323199530997923272894119350512727802414680772513760081360291/3135161418037836259442831302977219750614726139657718770206960776514822107155928800694375522572523712277389679035632531727155957120566617736817225541673148354829212969778664144907503411589126111888917929495106029890532891919001138770210977012708107496187227751496980000137223047079127096028939624830654227758737339725345681745847598157538483308068864000","17723482381737693269787076798246423310802126092500438681864673375704464394105734049099094818738115345706100191580982712146882034618103161268453808819471603805345990162762722549964406042295355916458624836894291267553138041035528315839108252422478610879301656207772491548742981990469454529537049123948604931661837539943536878260665617524824604291547373872716194154198824107266275716083848262625068958720/3630091565725887087605600771358216927099748013831912080380983545872077197366172619225751217619097657405660172801849926220948413919823038425519006413005998509677472226729295278652284861834178791332630676772284971762683579047508016687969040658592436230062049051143001484384767836353233324570686249824980508520186643477313941054900197268584495128610811273834192099099592687485176400539748616360799518357","39160514032490258389003214587901781721548011632821053230881239001436341012396166857515197251499460842954863342641015306304854226194551189224721257664420778416733889030680295206179109679627522113592373938602737416822981698362363553492610842201005420727750505681358595340127099855823746410663750133019743170700888375554918213182862789028531284364877435896/8009919337434786244380818390213546866794958389603666737562053423775386173149395943310276429895991903753441584557917565343673605019989336264748588735390182130334278887642569515202100870042209261561001627386525182096090194076839370589780431326097965428311786635366819094633651297179987340498215947144870164066409654464551017761658775207392803825996394875","18188388167811476762477659006849121912679763597132233588170406666718758511478154418948855160838212151370453213943784067796172102916618102024199200086478021533171984254799008541948973652219533819511807681148179806051835318645591102296256347927018942348574774821478499092054497390790734798143983945096982240517058861467440217558586822663985584775920517755909444876443211404222400335500608733284461685888/3715278241795087610941547133490827711133909145414878217965273061493740719983191775105550559905283733134189195190321643965858771461560130864714477448011225816210219450040558581571206711791272284197614810026220745160693898421068168630870850392739817340370146186703867097982858560347971281142766235850971837330222970900661653800041795020382847588362774677568059355238174402415384788280852059532958121625","46353430636874284402376008361176880938798775506236714098123916668545331718677407145199311191108199195405139575147933283523305343027297808443653460575141799729554209181454676876263582758919969948546918471128299522715691694855904535448703118221685887195383025133924852224568922999317583667985459047407473419196367812949579858081181660610155317911318937349/9455890179897829052705408931064120820559254220394152447502395298827357144081378513080398823188243663943177539817982481713456798757563952162598464929784370305696420245648035222083207596797327498500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","13607414211126412689435920170832779523235279308039712294681570127241403406455725064605210473923965685858012114332021572088551127762628892611459785625407107300355287623761046438724706918300976102581928643740596336865698485838431972050267114940079353996100620311097561405192365496385584164725035842307146351211183443267583872067352881387294766804298681841402861626441205037637282007810811602289501477350144/2772205947240095684743358245950494400934136973845543049938212403703005150954425087866758842625041409060217562878157900197951382737615822655863548356735553650755342108183641353142157728364469706919993519071329069805875834057743793434164720370026073143626055293058601124362130539040404491770346043977106988100969901297669523170508321703496903672333781306743488573086901583022550356345156457496396749797875","23264350093315690507131500726914401771633259602904894387312742275462601574788485574913195967854009886824436237740789910851843045306673524324611130536719802717912615609109285261163220007241492964833933975789257681755002054890453747803418465119567389315754801791950553304034666399677630030683759466627797123971742061866928213780452325847848901682792886840980/4733430508316851445525799359992627142007028326865116523033957869609125212251136452396410236930025876982265915963089597825393317909648054808274488356887197933393799241941120691826916741647173843634076299630884655997401370400734954098249519111198509015387869462198674657171808841005212058822254513429836457539629035675822719720295352508916898476137111981397","538960934807826161927564251064896730663918579817797131801326848839524373936888402762331254883505157846659830555799909822861853145306547699817986010353774500545305596630924815657016569444824389893996399550343022444937690798126189162954188680257730893424775303801562327757655350002001080811866451425665301674688928515041429654624970707803336800125648742168380676815769457467038849213225206824671025803392/109517448833211208909213522579666376007937648875042608355810687327424621469323788799169718267715808580775296460944943658428295481347915131091297305260674731651980547668762317138753250458639043477453950774629862540017034566407286963562574188172753764978963685535201028286359818524519980885827473904574840285411260037264057197155527809916623487144493019982419606308144576939532055057697567269576800542875","24451481554350251656598350124163983489544445991992661049829014268366250968046589127810466483349378560701491445658725080497078590986743512397927747885285095846398852574219367580068049729894667374214861939897557930527646930793431512683750733092448862551580494245486308114129295467976874843852138144539250235632985676953662288536669286915983261820949386845806781/4962240683851186225340479316959605207278948397833849899236383273145853045488131674290332609876751222112917095096150531825255611911377071887145019702433883343849119017643117746273523770961304609989779231048095665388209125939879595509516490230961558353074751312876252070889983946768175488341370453053495319823381943793679003096504200440997908071027962806272000","166591964685609920525429719961758335887941461052357297159523350448241484106515158310298216150030768812873781356326923214637847449893575074813991141092681107583183275003570804134461187213143832123628701876041315736048451374824101256980832991214945762266748755723551899001458245164317581617731332466039757786839492869211248064662857987111284518155462148044812626055842061283907063784492325693994911811072/33765943466859756347231737285768516240749714264564410814839966011490233598006227246396923594069488496368994857718734549787000213944990695920130591750377483911116845697231074543526982580529937081378303555262933800375576494067959129682770065443667091668104132884375840812635624862495548888467575848428463895756394050252457592540570490061561616914443009224917652440212112452400106121785938739776611328125","142464729519206642943985715465196065680101634264787375740459792619754842396453535646509170066091478069799080172299369994438836484938378991283020978342879057271045033903518255546705211647900945143546293360496661466657600494787228476009216508124736254967761901224547269496682078470378676865981855568197705507111970901389105723589666709580851611656838285777566736/28839643075889294346635430272525349651555039807615358795334663734940126053968249608601725991946342449660829847322517564370606746964714098508298705743689729306507554363954348780144675937510900983622836770223945538844314468550644543502501484521561567788992156632892028591678742014134130878101553633195551605796158103033794695984958987367799607407626319024034625","380457154857422076784416625436182734840012277442496600178664323821064977485271288502806124740204295811759917468598315932331219906040253463960961995849761235911145436552991677050565022181516596464968316292789048809559129516930574340710998611088996508613850407294743457197519091160170604426002924022923388338999324182261954685794522778833029950214443271526469607532589775916381786492089432407550224137344640/76922142291839859196033215395526448408989799722090330866256930898223012427332209054699494033511478050536463051459450844520020426942553107946282832072826069342120835351421637970462054707566481086202287686453371483126873188020538661871147778312986131920021929455276187425940666580158173676284545586944833678819622895550345083175685846944633982680908505900099388037050135210936852210263717185637166725605577","79999800708369666670693340813609265988600461251844239982904928629083975986385235816587497657678297663151298709076884516168798694292862559083730259839524968813932151813233366175091317046758260934357096757322369138747731224414176608247605314668045838769433811781490030635374856042786947109101585097035794969502111354126773165391577217071956928171336060247633607/16154850265413610119312596299635391433380319311682208755390341659152160578366244774029302281068833963848811596545791104919556346810193385001196395489740571188884873246131813864782581356887110499639544662322008824704830818136660544673293865921754569356583698951612797219776290835161780326945625621758204931298948625885081325268123344406261740843197232316416000","26517014004241498798848003208133111307300592620947908933072661812816683085261359696887064436611747292468717739609776825664344064024535028242737616786238200200498291226984541942836459188328346609549239724653950302145388877472274074665166631509490297630344351573245265440164082334092997307729007429218385933622623935704482371360985836659823269511115937443161532987660855490906546130131716829909388620539153152/5348257529530073524280989257577050878033239486885664777340947102417077875628238501791711336803418503616042922880218860266611595594400020206192599559925169589023339295256084579966533260861249529670141854632965231468533448709363477120437277477668173149958267956654411822360053335695956270719680086524322530514249891157439878407417971839744392044064720476417844056346174795601710447583861127956455406902139625","71197348290771978405602732839537012310626009318133570890482364371056186523989330157966045289127980687764218363064941391483781008265266963537623770685390148810455244349859354857421474277963009857011653865476081389968122418691934354122230780300833008753686234433642072919923583176333668289998661499146617277981691372057042930131717336250309680764289256080895092/14342680993892886303954853579883363225921109635079605392320944523109187641283117181461662846411912306480691901515655220490850586434947504504317080144378185989596578890875561336496479576651516902048606328604696610314441229321219627021610788398730173161473456954861916116391687748151443335513249810808309201830214153565966339609616397865465842187404632568359375","342401018754023891059352629509715357053454506037284788725127073168445189422181540408896452651232759821766616850264122591225331120588918865882061344322996688880669665450231982002597398732201789017495427566260651180470635467002453249479483900268320570004293679361696197905823690145326531180324429318916092471863347575533714871355651558610515931373080997536792242278529575700808878786732127630024064418468916608/68894647682461956089382461406499759613691148650738957016015844830333168307020284281532026442272618372290646283794122772122665531108484704223311663270836645399554940741928358317884620420886609705267248656765357348477857852684140561714900614303731786621656041881975328169543884661780531057279582784036689401206706069028229798913082362331334839997133771880514515972024899408556517159759907883793675672065360125","190286571838805495686895463752492174798162827967490343625540320679760700551286395956241059969689020885714190883323266375067607282890063444652926151862650426323339187596278760962390404656342309737428214493422028545912504503974763216230927196187743439226243880933947417760147785405444976177822143722569696182520826218120595298059020305548681823408268556482981325/38242608291912408815838081993045123864617058390583394828737640036167893859507494091864963383596867701436244007905770284939991912884465101575490548813894148831966132970730263562113961685364216989999844961688441914455435934703797359360780356482629495214859917249465567846934284121032247250332634283689409883499295469118485912489058982596725212975311140618764288","15345379701153714436938289567639102307887273898834051456693981514956329731572600026866162286097662958712922836383881840211072389867463987895894067288699955858337488812343674818565432780224654423872618380928462939482247900055572079914753652915184313685270722583926261499687728814560680092231526501970431280783177357735398580700300402036873780385926225005561766822479878280891130232036389707452005183370152749056/3080426623087819678602049171756961824196425548529619576972793653585089380165862889092832375934535464160425580449193072125955685099151500755278763306599307218302635233595329082702148677300945556130106197481236122437978375963261172524503625593066102601042060541617791008722569799735202779005407381267021641545644264334109052258081225159748043792288699674153722046659880085850980843460715080965607434114275256125","36443601662144279337033484452272105547257065463167427418525882851507989449375452076227652634440476502702584889057376829320548464677623038648843251719168810701744338735202853412651160681259533015293997501525430222870696235141468274274064390273214484922080219643095978640300874086585386991338440415203863901714217818222666715642467237183267303214471854472286478344/7307237990148312451155090506264642657872224684879860008436735430879314349554023096366846856470375025555139219961666754780864835035902856314981482268319886395881809659368275720375576152008289949085453326722156553603358879420820012964006978808113307340321824660484441618487292138631579616351777191144073820686595597986548374588839763719082323114663844043046087375","1575294930860663922843149113097927168024893739962464327016763741314068438447271326302129681931564068796631337571133444163024224071270063174829664848259482066723104251718808936762938249028582992557822551950212098797718627418782376027133576209718376784834456568694813577764300716139817031545408608110880973380162736536313173329973171844528083756524804574267826691156368696436273087171467254161930265910972517504/315498546654512047637461608750018349421492986465373840347519942494904200733840189483934245529561231604050629653992944140351106887747105945984325466452136415067807666316202346895657914393512001212656936450425268507235863153258769360296536050028695266363553141327896064944506216017933135251875087069031098099192325817395958019524956320840925176589616439477134480262100237057953933117460110224783420562744140625","7692057599553133417225997786980128299372439542315125030077404519679450372805989755158000864378924877036225189784045171045139667691524763609840822628706422918926410377185494048355128046783294954373197082851501927410350313585640237550107070936498164597231431242858771457898152684298047446530220873884022213114819556822050178579707210264243087257050468000092842761/1538814487241112760739561704846381585063002784795057066438330325566843108114787083741788078680861495340026117682606689156065008672344707615420501964123121620401073675430690541617930520947170306763541251152854304975131871537939618684186766168376514664494488691311397307418298556185724993104760692216619178358268934740746932420562664234738576394742559349407744000","15190836470550557926140012263310230378455340797095100474720776113765300081463960235506950799869073894127884189857505951314428810423734978025409205413789025720642609035117121385453856877706229778165533034683130064865256448444765902482146676668197546098809055341050873494446231793312407516463576380102073171090898973046611572020564659042146465345334273595086941562425006763960197801018796906114925005810069684480/3035556598829526968124942916297025416522606357010637652635799096498208643970273828496655227572100159414352020909846298817521082538898702393916708804775798552206401718323929157863173504795127180177622667376867235806208021329981136637175570409791442328468473111768140746895005561471574356889047981458002257872092408771959478275534098789982899056118498417649167444480913552548249005268380838457505944462494874581","2923754549090941424546974281011770689534961442264350984393235983189168024079617848190236639328676436485460311093391982825027512234467853098757486086492333410753919927528867817406389678461354257841007722472106464785557179844602277350411593959136520732862935740433163383885526249897183805981219416420390137516812715245569037561966929572448247077578419534651990827044/583599691615378545100950777601104007812792435102945248411439102112424251478512952087517463400054567832353967731887062349496616445419782499817548928078665212077449420216892583997505908858360011413290038645573504472422610780073975450391707084016931661068694024023083417126286468909117254531307085545768412513447197205482285022417611018126886491416133665625891075125","441922815213568908489589193556560586318864326425397702047965372289295962228254658331201274291697626694859414786292266008476137667843874780506886929181835469302142365772763129838217316953835831059616268288399119642314758261677639945004547833810080700127847214666763863338091523753898362699222880772298183760217731228628442782431573977490761665091005756534420789258276075174436091798475838370152192077494553263232/88113527373573049332749294663402406454524640221866407165839162576979477138694653404281889227416977618913249275712917582743426231744980461918772793673202077716234026090308791893409200158969108910565467273725064769890443408324386897017825489615600787634985397885230455168591240328585041836771921929567914891379235573982442311269392541694564675053636078990836491104116280492254795616055818375774141667319774630875","91197133767962483852278456285591810579974783077874307589555559715577599604626819245000672929518645004771085106770784762994476973842713035791487204122653245797126906189270204029735872508462106527240320932458036231707311992868347221176460407003487373754014365881209649632547685657666691589606571865740595829983849941049450471212387808617247938941417000965198123059467/18163679611214677813643455199979098261849405189805364986036911945012016248297645596270602508015864371788974684317239728239847888960155365342460843559658233069613218442910226128113196984801126248862273503232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","733396724434554481470656964167233690851279923085197144879644750437402627936723531635898542414136943003236478432848965516925891956615111678444586384493883113385335463639674699443808084827715994137410743992130712903997815471369201406683862985677774155704267039224546352414417632475628136460919900347977754644214725932476856018335195927604771408949980634142255497812566866795799230501026066145434755838336990365184/145912495644159810313026420025053989609942265686388630266226856650796088768164358961644113076809511566125145395699271530802891523741636707532676065833327082092521989958971154798465784847092870457944857590623097781956884297103961713362268264159015928554707158239398721416218953003215109202771651993622244788505649098445109438104466256408060944298437033058380804126574878377874459371251056800895394904459469832875","167606423853658713615749101123336326908381619586838606922565378505211386185130407423587264776519589295420758009764678759213587906216543160801059029133457062067529468464636376639307690657945597847080706144898920305379653754920571797771178341550808041652360635584401789901525709166172283390177673009483341826911179861584213314395893323035527116283758445038413646757280/33310364848744488727470761889861069993071965180756187311178124887286133554324042422503263994717993129539448310743598138364172889305532401505890384806078790034557049074169245078416704866867380089103064821732673967120808611636618526737138435792818828990403374766228037003927569643972203993263329403469747342204808360947840103843317533210523853631711601450617095736473","22466735478643771803624909352181817912387732117378538284107485621001246177152644141853604633676939694208131243081227668237716194316732125445041260568403752325416203858329469477774720998849334961751541191761521224644520742691981372782009394826739249604257098248751626957528543558542443122470657230835176462612530464044652140581367666271771882198747182114685116336512604038833327707163107207664705120728068987996560512/4460342260599110071819142535903990817893424192972341872394014748315090430999224107274777695306032783105944721337053156074851240201179902835353097683269298594190456286888326067932777720561181760369783486872666974623910515795208353605697065447942804414120030678603538761538385793829787734830129764152263691296719726909633580318897787729004972323599773548689272008712427926734258913271101899780538635213826239542884125","1972862002066252798837977155272535342727415329632252213508267781390870646909686724955861608046325765650407340102472833428905279473185818898693854344138403744757857928883601637909604082588338869612221777263582365745419719805587946558326048087138197694016224613118304623864709183681172362693106460535117459192992832969130895829916210933710820035479169562970982784580861/391262854245936198649509275719624152305206807261382621390946060636032376057385723427601113233050260359684153963520782285097664628279596618521963444574543409076428660874564026651742234728997339844161514273669735686516761239076529088145208958938384732800586298943281728435207452253170935715239392534815683367114290676180839217919539381651841151674859715992309727232000","25408691426286653276004556426513401767718328640048945917745783225459709487487356095164164652218100925888847689099153320777389381851598236046402124684511968385325107497047025485302333503075085562533472482645023963717347867696861885363417595298751490212495932766872748125111115039311507374363000062513977436921772096443948159289707996749061007112458126301618769295162649600673247799961118662602756889448152517364992/5033870770817104909025512331238419776407331281944565644457345507262881100618908405924951559853352841154730802006750688581603270849880756026262217651685813584900300357685874044482329601894134443542753690048962260914642678445058891387041919581376195543193199307524572671344323361282633828144708683536721118910549933336800461248338059209853766305058943888965279863852107507075916981165164543199352920055389404296875","616565940481577765011174617619124841631603944267256178093555235591208387588894068005162766513720546626399308168923904625210748051788652328072241494243040185611373035059619136712559505023703153194815611268503291295059648269772663939137446253437248541496631852986499688052678961495116210133458596866684413931188348798244969797973846568160999564540652111599082181871436/122025682149627484528651507368051367620578469392233875493556828623437869650284356703295836998178256875766319508797903923638967073687991229708051285605187358616531926112736402511567721889845693991963610192161413692928378708223712791930113386840109729368772998347036090902364801014045328348830748307179590755723160142468563977011700764517880467116766150322736003147125","979882056834583241477188686550561625289337025747787132773853690143359657519481397575561812727394470125172272246774578404543257210124412718725081536309818383310896102958167337333430555168671327992395916735022711297435263157670501117734412587691271084981140167017421900852550822579410636184333142944411060788723653596377015359036101170054828623669169047118551010102258802465554033173968468183492058271365801755986560/193732066620504775981759812703028757608600125742477178751189607602983198559778039141192492589734277739017909889924488699372940787977794555519474807920198944109549023547259912324279741006975129518191081373554817584214941629021088206977532599055014150433581544599721903881284581257812850697423350805715586436114842183295730680490110793225514602133304729484547181740290534056445482186430729398701311563285494964645419","1138059441890428903336718712159907364975959482163004276901676063186939296217569849990951930955270849692775077813359573394435924934540269310629731801376134549169322946310756738187834128956671195358413024062230774111935109203207768898525882417078119314003162592087920755572050993355843681931139257303484526223461840939880759908449181135029327442039666513325916729112853/224777393704985303260433439401503507705148576727364388720387174977154204629336985298082893443205223017966145098064861566754244624732671470935725326043491911142467178027013112527668183783450932992534517827863293825061296257420183669383719043873666284378647952385401303733274771042385666436214517205678674213118374889121542369996042313879258622144464565403138392064000","614262617634904509410555695398092190166323289787703954329113412647342230855826568873946233136303566178604275296873234926652080462259552775254755109931312516616838091852915397846984381183732773411263828600108443070778861986849272794442105107285234729077818614332155890946804257724112143631642663084660012362691100872465148864413343598067567142977134846266425075195546265101720326272502009234689388355365794889444257557504/121200854655310345878069155190734381476914416893031941761756379148622591310152793328910334357724762079139509813381997287954319983165971628429295803162563856219211627796200599196263868781937234015821367575512548522790158101892507996780675863234181700253545912643548466256938936835469646114659598727592390628209362096738343417775009361678599075671154405137663077798419897932404104579113056038271753988669813988076515476125","106893445531995430131837569895703697604978445859412739331042151546083234373443601923983714252801103551874986033841637079479794895452077803182698291822629713500021995241940133037200268381793282318691568234728329378829301282121562652452936297422136961147432559766896143081059518238234777055931999714973999553456547746825617168005650221542417216291412324174772893635832/21070287546583154895102927029203125577385528350171457634203261197137238923923245382493868134869009844094435068284335909266152042903157700510534904847257436666980671067329084409346149729385625108233234542133838924281113454526471855573271066865534480974484196644173270141056470857666632902827625475719738076524047736123182255306429677688129231682978570461273193359375","1112742798776748551928744983308584493817112400536084744850969025063360679785378789764875076529575583792571198510306186417773101346425704969671256564494135750783642910394213727189639661184379341961737135764570942961692159177189753139209638929302928699705042832922774012622017270172331722295881412111812933593370743210214549038212395941675257558442878012136484052827439007483777859391215222647499741572327725689840850048/219121905514652575155579185322367175400669386131891843382447432851122462422992147756333729893028362013318264155489537138133372703295804002840920402482110260590055749843170064921843460498824128274420925357547023876488939786863662801268798987685503391058250902634999352652063668663245829496836853509616873246554292796823779397317819134891873583857621623143253788854530146303641400986028503534408870194989478421253057625","983995170259637497940121707857673268620603982844439610076334749792119502557380361624096960070148627663305171311646851566811683351232268240169848810658089698606409195744471343416197434926513684882439596141368794175162315633192028977211909698595778839497844847281262559899914504080092844816319298286511436690429175757804604673752838786852277255064434365401871903307643705/193579499709739777577893639665643417521924510242119561765932078835121983190401762561436208758210519231103767232899529457440602166918701550386152070813526760823513884391055054076485295945972185402977095815609448651316824455250005505410192101148149284756928250258632031981439345164037318129987999546683113483700660879431801728391911161900686707231543216283304182063038464","30691013076836380319652884848585431917439358375118437035944950498156836885409110087616602043242747413728866747975631727566613593257623099549583001362246649928075859944695060947434885707102684568632559339383409378997568182445019183928058902445738702610436187907199482604867148445903921474846103586253320950728989228898324829144701782792767763794895137313050381112872972806712570559942583906619373159053654481250809168128/6031936190594376585238407905469035598668211679521553144958053099463931217856780171872253258738635531385711702176347575597387389685526098889278278029314982721284691198967204664771178761416891317672705719303088746953644978471289001577698554025410820041497108311270431130911021653860874238212040640737171103823631718483572464361276703378587106311153455557896527384426327053165214814954154328483257657424873929502112904625","33633002641218571027682690377239300567277297301791434890431645909447040830457253186262970747405514897340315490970846553666201190386457221846694126637998462873786334837901001833771510353365825087187582807843940479192544772559118293851131234910638705258664901225494129023244916125545283621607920983287799648992632814461828998517949449887522866259724675318233522060729654796/6603800575190864815125307817934327053530311915572323544225173935830559756077637251538096164499112411672913910767032482188570876526606118068929913515497400397562722669603861813453418621246538114872330536044519242663538662076583511078523573320035084744399535581216815034837553165853576616422592790103728141443697362408727056813977234078214386771115586436985105038873998875","9090550743395453237608373761422705922989356346696677314277463900103283296889488490217663400349361962695279888433677856471792856853109469433355422802663947305503479561493033851081993247556828544308258821557994512133708656174864544457143793106703578476914924328960109390350040954158797845288786321215010324565010420734044059968931558099077932776525974187717655105951506223649947806568984848883258144616897526257038550656/1783219994432430133950472014582130883873515063182143523712063859964133099770763874744121895885645346884371273930727450069430704145915261127061538288702855011220545530326588799412076879985026006593893648911637986337776174555198865379578424838210466703683642106934154603710587408512357351455891557594977191641529451749437270208258072920514602243985184744955476557012910446023911358037761232253615162335336208343505859375","396226087129511787616470716244996965529391571019620342657409150252952330537366537352182763477820160355931003174946109480036915624974500187179367618457008802667089004678925595775249725629495848146669773574395699032785024522882892752987825063933573399691764866816284097232869198405981830106568826923407996367321353003569052419999880089180418759265274331299787468134974811/77651132902382550540201641628906752945078964002822585000619340261128555048628863996784740469908853602590877726845475670110127527874088625214912598995012971630852593597027649154487264595100300180591016581254965295280089902497540043916128232871685159131211213497239568483141031137909208031392464815187505714066235868748950184065923236670418822911614780061752905170944000","1288523130900767412477856952035690867153496584747510253984686336382980221603917538996138294311274357713893956725672062832264871415025750136690143411884111580335458539824573239771267043414225271729141508235839982033182605445173050590151912297720800168687369852280323356691345317649445843078291369394324862039143247087442309135074453265658730028145500871559458519282433012494054724678302957276371418936282902434203225600/252284450515080370603949213084529993395050575951188044032908270470514999880554862449223347761507020354321422785760279154913310488296485989979706208254206974075438570521939826124860483842758137231373182496438568202110337751291106165654945352183167578675508602832478752400011567482434301614269579368882858973850914513870297071866544875650189106576672289734326492492059816669288907018095832842249738081022227281715919357","559506782175368748187145067236900803925823792088293851453005882621173124590368101213652371965740365119375069053747415415684193092607523211636912074219215053809881814859129515591479780669511533619258835199715146655774919418434080807837587396115955105126806762961292429904380132116986984435528307613054828929294602185927322238461491059740342387266084431988727321711184308176/109446188216864405154936682374609448082436347600301765944233278303643744736544109262794383069197271409398615846380701459882784547857821831816863216080069944818453908760476475874319791512782445408136169878207358663250499628002971644430164185578966399908622640732411885568638054229180673755690889471388585521113862492432946110902070139679164884208988489955874131206343597375","365842109776085256207829452385781129402656684569922320812625438296958174120084800064669048017227033185969596458778213306152397766619692644694641677223213185977626940193107608138827771259334379895020377700759789774994800008933137569543592829220611543060189849601828342989023692876182148818363689293009174358168826340010491728715549904988196347316703985894355217235339548078187164176255405596310602921647203428200269666176/71497266937783826306774367225149833789788300609530680399994804704196212252148324552193149332755057982662844988588678159610516634667597707204818296457616315484973288944637139939912166034691155272078609876888919170894915224022982785138928008133003473320018151370486895637936102520353951511525996197267572355782608352075229547764732602557133494648237258900273354364050662921889937355682486287799239363976556848320046933875","59378684894605773397070783936113244261297966863668546282887298999811950599772732377979382620766180662159460666220894896896564357533604962977968843474062092083279165837424210591042655271577974272394203253875965589611493384384257117088518521598379301169916060951350650621757237206805037261878212424267780312614942173870651684587166691539909068452932891649554575072205080763/11593916877920131260484148322810317629326850763057953025674154928920977965095141485536566217873796019006709247938019404840440511433467040918770165456925609124166970862430104329357419669175323763143377917913760028500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","440706629842402075137926797732405268015915199334341565218443748798479563505125605478061664327658137598204192554352688830679475840386882350034150077506804799859586772904929402683276898098601814091430598259347980573084686932949502809068565420937301632494387691284902026088950093888426872222813857928092871267130505744095697172494119689779474840037266295586359244899477781345249657455186847452249040895151288114085352974933708544/85971876318334010542313048056773419567285701852816309711738644074302467763075671531248793080425349570584102078764464196653843973936119037322000695949209283327606280423406302517302874806092835694196353778161663338667091195199032831587897410329509487165187753418615356836636352319310103639079123698118997500068644500893282438137614420288839230827096109835206605385673197123994357393257304049093683934224826006704198171592304125","13220371178312284248107863849287558696210741535280184003301555188086761767176560823174196915070378763091889333203635784037294769747641959860810039816533609140662043493962707445564057197150603226797446933532133956054671103942520142568674339411250001585991743608723150284270101326419464088290151483823061613403673956918458456165552482913079283537536214967294211244361353060/2576683013797055224377707713704899315377379548630511095136568220145808780162671473907260623503552385384482723173913562423316997528913651044277418227616447815609873991028073011738113927961824632868956802271260292075825561646156680740323686126811928372672670917332613490241615850953660246271541592056143611581223295045062157404996958100136358649109693659623847024011265147","1538372578072246705266078247950089219881197139399081643650271348770110178217959856819170325400476655944115553238940541695152110949081675985299189913515975242840473616169775880272489805123124548256666658584129873597192213080038937409046114908719298170078476325423466734429870048697383304265342125425087105698152643145531760853127801123272389134514333752173173161562273487752064850461823726948588221913540799816489566883798912/299566102446745552813544808169323270315327122249327394279467999308669285416179486075255023523726449428151807672528368606071047812907935426406886253284580296349349558797128593446316786243666290649442956134448480598303527795996222703837663605600624271807461605295956674925277658331760000117761013381199880905748188151556184620779667670278558839116983636972680749836497346863752662521197700717702790359162307617024566689271625","281696937222363685333688097915539146272117417024070728031063821781398985795813333650547982965341298894634762289669256129805545549280355643122501181852136332529515756074502902204877664395456278205770206019663082511098956468724829475220996427130295010430751942126263620206886404244432409164651524408198286831329682605959881993845189585640874220032515465014097345759490750307207/54806274927935495596891312029173862473687610099325998583092091915101265393157631244775387832621032230434007486602816972765210205596482942091518459849775458089575743699797096697542306049628939919466378189656065461708686421130956996965004776108499273871055615413566043083634090083096967567965373203683231171594922347812966905149873265654962896456451681332216735396249206784000","228506238533410805238253122961471637501498406104430046727793420497895852412513560203475440156216063574654372726194215013407325207763369075250819386897086702757125418327084312933061738392406321003231853349865003322697360659712771167066453430309997639548320673279964210730701373707765051246595806673865646607841876463608039111252607452843372970797479959213447237540830563469297144446069689149549515457318899981763489792/44418759813188470246596822974281932219088697005123285598909329328419879212164564561558656547678211265529803086702843380128457744445765859393426675396393053094588240457569380155526179040891009717323059641035189017918495485630657360525410506453554255734005459614858972904374739673834145083512160883402151636664208253116362089211658645312778404886460203600762546810897889629330022309705583438699250109493732452392578125","2396110297187570506257836426251930521245117960980667897194680897478996322590925380310917400763581787981992131769075961259393685331523600287377841990678117113566991100720996059187144934569703045966210306282348527729533806882408323961336166190162075154579344185244957673138372347997134388801085788353482276257401005734929059700346687783400772331280644647089520646562669857652648/465370154262863030800729180763091967573522779260407615567563274096037297593764955820626213827962697601334935773802201919483657310282236100250543992334865461800976838791035335861420892967699843608855185710753433852279737724446294443337363478679601049432404435672469098850676302728116369979460222148206944323730586138087862719386327396334468302608499235112520318322763857676375","1188272888075247520453568790651819187486389546755745961952033150576243575862120569399808467067800830890874391487822723879717525264875722720416173276963170672622214121308038530968291758445510982186014289745026439477197148445087614813262170975056866881909056450023324743409114115141145340480846088869807540798073417035168139476153897066325127540609756310068558610112731607522096096821938163134080426356894899245575410494080/230586762395914863625709048789913840511134004337945700368117795195769576856434588144361459740833007125516905017415184787078710001969815416281381427387949263792200577791644278234661952852149216540491852757174842146376788280677956350901082838474705227642420261641783722891948710833898248566893322144435457967452449965772543077421407816225704952270697016152452032506898311260979594550143344971416786595888053149375287120733","1072184299258468249004114536023934869518152618369895613271618698908405514630154819453979477077738526673716264830106745031385951736108376866253955319711026042389282009348594845497252059906901748860111986811345742998968284077119165082435598381810306691078037018432766116865792677955520465319184311529667642995217214507658693259694586107847099911341219913576038605872218680562047/207882129535607118520818565811162643811811563516006836924341123976848022970024793004700710992938987476728640943834012473687892481059618823520721737479364352887178017866425027953255856440099446112508663603319745066750522936408781591578321031173620445865113295407603090322283539974563690157418931060565698315406021569491751612761888641141446406531645379264720684248398299136000","158094023904374464057702010126993231151433474361820266584020400101533651587072432728050776506672527718975042616651177034635188178967462982926261516748842073587981953038445977514446838733557926696939591069712397947055261777416704028506441173540338327591514650398349069348381309688677335132100441905603664282735310299686268721634369502296867409514777359935022301425165750780988231639828675424239931533849896744198012747670272/30626384366513923671063955469537776291182594080083494737341604579575446319190916924682809546024369330706012653799783122328775875399363759308193432327358837772825609356553955350401725689682838701996446404559005896479618311357573203081153855961484398360670837599853294627153740224543175497655414585918231215639906924313779933211774291565425360415684556655021031131349317390382320286092667852173815259422737956767922154798375","12216278924286401897470540169822542417611356797676160128176706721343511598951866107858729405615631246003458062949723290192242594609994613705183460814797527214549142043573863947658832694800184691222426521703728394203722420336773310908687071670107794543022567943478843065246011544888390757810534211554666736239506503613750756246364621509359804902243487113673014588325806249988332/2364584127734680580481708368927921125934330000162935118371174269642831409084634375654239735054363928748162229294829526339927907778510530444646754603322373712788147193691037688552857183116332292048731726305451516954679277320777955342295564000586923227775208580772868590742136150431152495718132142742153643081187691849828217592954519485869135930755646768375299870967864990234375","578939195017447864385837341975558679292903716580114421030538728778491606282153588930983966100514147976321305616196463174070345884292672842497715966933722088536619333912687108737657068701352918582656105418491672377271304970407730786932913490869797471081081431072836814581099271832696990064828717287258860166842791984158634684078346453202928137987930328826212011774670396356151265781053547412633310327737900786639842674288716416/111966291649651600701875186827360807558960817589719096407887999108024557254221008849510152469119211567152616745769256123968832250104006560061907741567034087109512483357851919402017950812795426393415409198268246337542639470834168040295134130657073201020340432236723824670803498949071870597039309004562024033656488150406105175401372709011082725359382691270659245312133919518760328422827067578306005644825927050994860723405473375","8041514821545833865350873212853873042112343327573364523948780030849543753072688526717886590013028227714585965095216381829914996539132359247488639692828639170075726301411777307168737667077730792892326979446426349813642680537699905651125068091362135055902152994216233622733424128982011248923051410141033146604688083721413402395290842738021365861670415833356403364696759583009635/1553937833499559104910551811592138833189892464446761247731330672284191313590708439680460540329836344767557599746234213006493842842879398684745864919973051635127080738612248150108793397855113122368507483429209127035263504194847798809612278864438287815470711036548695032421148125849669175729331459149833945183228413961985381338162155596008680906676498435954178226973272371625984","12059659399309169167301353842123191409306995788633965680414620302285606896146667751472818541537183787935352700725982053536032930866708413010971856856768384974849695774437178790890015242323873769697407411558706626105140596160049735605389301414460825674631122462760014451298494875244754354054447697502521388381253293175367558014453865905104467382184997528879171136492277222127399012368677604910497789360212571238146627048080568400384/2328494054002703067219004484782931471919751585969487160602269605916676223315055450845942763690581877771159615428854802721943114463834992106300185328876910271612375509166975628540839858771078495267566008071532876816826751069408153323840515037497664871689085370699991860738368371510578076683395101062439493831773194498579620513073693022191702398601471237166387045790480861932005012807234071429628725981935147069738988682858417182625","683009426705008850682549700382901603742691705123356866338951397347368059105140826655486518416578697931244347554322654428162554903861783227680935341690740579867651545205562690172425016836559678937794312287639193745517811234257062356826622207475918293015140472942579713388671782202262396642735640315948612572908444501108579457520714632371056288874351015666995549139003946314085696/131769214246522869780429817236150406548549044658474416909806179734873399109656411633488099249198882165279745627038984487365589625562901914030850178330133080409420340227179447548044572594184601425691821617928130423410997853384425373999967759499571890326740433081063424903098252502791477854302204200941376983295622430177445507316706609802292121282957519571162158620971952084486375","1418116259749091420309271913909337143756589314597557128553117870573928055109322864794169592355058370891251425125187770724828108988587888087023982451205475980371440423992838481547236638456717520835668859093413956339261802305597694403381021863258753441889536361061407579332570493634254542013337999844407181346815549594836374497512447969751514466481466717590255369810506813543577735080228718660747940956248427356785784199073569408/273368882980516556922532339653303822104510203916024760371844491705599093435133738774975538364241630079468712981056336655766117378160822393876348755370711942273876284944422610974149712212944211513462921649872232656449940987552227525504529710373144228818606127541937831103642415534318303187393593236209298242574677293352798419428712873685798636474667204083938875672934235816396371477146089168375198141802684403955936431884765625","546411077581845999248238069684194831621691193366466972898628141511422317954477211865167402284211971296286346492698354214043840080181702652132835681239302798339667835439189275457116051279366194551632712819028177402221815140045210690908631767786711675029194359998826252332434573121740830827417293557234891406021102083555472155479148332697839972702631641910213821827820374586459319/105246945889799140338072754365901705544530661781295362563214285953881890233987516230568663143342952799036341701952267011236663118111226623815975847494372076420199418712941018288738590264475520229651370015377608638075866459684692488079223686296541020897904588347083045723167762682959422858996673894180805702299907478685374065593161226849447131100462022089783265346597553176576000","2398330640958841474772606439916070050977544535580605737383995160447105736276950196885906408317628083110923322157113892928963237845914017845444295040924101784423382681801754191301860383927129006953354739240926643562987838836997453985855576402628166875869041032631651591871962852884189548538272285387092843044669499688035134181859376665409767886188304314888753894905317929877238322615838524354191263502347881033855441181420399360/461588070868590122892265681879734295007029130965626060552783760068897000195207878227714842617470320231527222074701444349530952699708435668339712860464533455345665068841333232359698449088497137068713309811942968433868609329301082001752617420002377892756821532220676085014874112083615054550278903960627185675459015343606391094523511117705747842645927349130302549554534056269331809016770715819934970200483161548527932617036185253","6041015879424725383006424536130409209607854044642113747266098198777011981328765528361630516108680392500990580908509403483891763219659726090675140672989657743882183951954294745396417829943469201306594018454995862321821016087416840247422350906412007336103086620396467456181771583200365740253389107968122850063607085957109965406634738740996318415514360956028575560979203447735121436/1161752799109428422288020947061281540989708937450568100764830251908850596717606701047413407636907934320789870175907792017513896999208892282137299070761467096211814586909598705615312819596495636017728313513520193786266452836805291464826226833593878504804389728477191170027729963773716267868284479768397603444919008915279522376004326398403851684761808785381609370767169521034383625","13240077436443988749179508462267267187169441948722358165090554769250505713747934643200804819418670147225695324432684266924694524337920816452346599774452681831320005286326986675907899608537972384924882996757503264622991355949039882526389342174307168805166215838138277557052303430492669193939212362638263582899713198716541723383138016564027766560215944409353427176135895982596327685665844815618402881202645610620284792793420780517248/2544223084468158291883698813309541801455311468982232546872485444308211415529998472787377800559884210837213042932180479090277285630234238711851480232520137856848809986631784843528381778520727465146661792797924458540957133423665746229799675650290296217658444899605236550972043549278128087645211909479009099766619355677984218929672461506691980442071860591767266913041147587815452007726513853820116629482732060593116624596368806566625","1953999166296955830935495158735359200362904181792947794529339487489730042568305997099959302322956898299616194932283060554261566410988618045107398092345476532371402134206635235570281738377188438407703089325315446371127042537576093536896282955524842632708645655481028161471313608974238110718242273935956977555610147714316158486553633871312187084618154014921190595222799283957140353/375191165084882521037046014569185165885459082629136124177286500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"];if(t[e])return n.quick.apply(null,t[e].split("/"));e=new n(e);for(var r=new n(0),i=e.subtract(new n(1)),a=e.add(new n(1)),s=0;s<80;s++){var o=new n(2*s+1),u=Se.bigpow(i.divide(a),o),l=o.clone().invert().multiply(u);r=r.add(l)}return r.multiply(new n(2))},factorial:function(e){if(e<0)throw new Error("factorial not defined for negative numbers");for(var t=1,r=2;r<=e;r++)t*=r;return t},dfactorial:function(e){var t=e%2==0,r=t?e/2:(e+1)/2,i=new n(1);if(t)for(var a=1;a<=r;a++)i=i.multiply(new n(2).multiply(new n(a)));else for(var a=1;a<=r;a++)i=i.multiply(new n(2).multiply(new n(a)).subtract(new n(1)));return i},GCD:function(){for(var e=ve([].slice.call(arguments).map(function(e){return Math.abs(e)})).sort(),t=Math.abs(e.shift()),r=e.length;r-- >0;)for(var n=Math.abs(e.shift());;){if(0===(t%=n)){t=n;break}if(0===(n%=t))break}return t},QGCD:function(){for(var e=[].slice.call(arguments),t=e[0],r=1;r<e.length;r++){var n=e[r],i=t.isNegative()&&n.isNegative()?-1:1;t=n.gcd(t),i<0&&t.negate()}return t},LCM:function(e,t){return e*t/Se.GCD(e,t)},pow:function(e,t){return e<0&&Math.abs(t)<1?1/t%2==0?NaN:-Math.pow(Math.abs(e),t):Math.pow(e,t)},factor:function(e){var t=Se.ifactor(e),r=new a;r.symbols={},r.group=R;for(var n in t){var i=new a(1);i.group=x,i.value=n,i.power=new a(t[n]),r.symbols[n]=i}return r.updateHash(),r},sfactor:function(e,t){t=t||{};var r=Math.floor(Math.sqrt(e));r>b[b.length-1]&&e<1e6&&ye(r);for(var n=b.length,i=0;i<n;i++)for(var a=b[i];e%a==0;)e/=a,t[a]=(t[a]||0)+1;return e>1&&(t[e]=1),t},ifactor:function(e){if("0"===(e=String(e)))return{0:1};e=new w(e);var t=e.sign?-1:1;e=e.abs();var r={};if(e.lt("65536"))r=Se.sfactor(e,r);else for(var n=function(e){e.isPrime()?r[e]=(r[e]||0)+1:r=Se.sfactor(e,r)};!e.abs().equals(1);){if(e.isPrime()){n(e);break}for(var i=new w(2),a=new w(2),s=new w(2),o=new w(1);o.abs().equals(1);){for(var u=0;u<=a&&o<=1;u++)s=s.pow(2).add(1).mod(e),o=w.gcd(s.minus(i),e);a=a.times(2),i=s}n(o),e=e.divide(o)}if(-1===t){var l=le(oe(r));r["-"+l]=r[l],delete r[l]}return r},boxfactor:function(e,t){t=t||200;for(var r,n,i=Math.floor(5/12*e),a=0,s=!1;;){if(r=Math.floor(e/i),0===(n=e%i))break;if(s)return[e,1];i=Math.max(n,i-n),a++,s=a>t}return[r,i,a]},fib:function(e){var t=Math.sign(e);e=Math.abs(e),t=he(e)?t:Math.abs(t);for(var r=0,n=1,i=1,a=2;a<=e;a++)i=r+n,r=n,n=i;return i*t},mod:function(e,t){return e%t},num_integrate:function(e,t,r,n,i){function a(e,t,r,n,i,s,o,u,l,c,f){if(f.nanEncountered)return NaN;var p,h,m,v,g,d,w,y,b,M;return p=r-t,h=e(t+.25*p),m=e(r-.25*p),isNaN(h)?void(f.nanEncountered=!0):isNaN(m)?void(f.nanEncountered=!0):(v=p*(n+4*h+i)/12,g=p*(i+4*m+s)/12,d=v+g,M=(d-o)/15,c>l?(f.maxDepthCount++,d+M):Math.abs(M)<u?d+M:(w=t+.5*p,y=a(e,t,w,n,h,i,v,.5*u,l,c+1,f),isNaN(y)?(f.nanEncountered=!0,NaN):(b=a(e,w,r,i,m,s,g,.5*u,l,c+1,f),isNaN(b)?(f.nanEncountered=!0,NaN):y+b)))}return M.round(function(e,t,r,n,i){var s={maxDepthCount:0,nanEncountered:!1};void 0===n&&(n=1e-9),void 0===i&&(i=45);var o=e(t),u=e(.5*(t+r)),l=e(r),c=(o+4*u+l)*(r-t)/6,f=a(e,t,r,o,u,l,c,n,i,1,s);if(s.maxDepthCount>0&&z("integrate-adaptive-simpson: Warning: maximum recursion depth ("+i+") reached "+s.maxDepthCount+" times"),s.nanEncountered)throw new p("Function does not converge over interval!");return f}(e,t,r,n,i),12)},Ci:function(e){for(var t=0,r=1;r<20;r++){var n=2*r;t+=Math.pow(-1,r)*Math.pow(e,n)/(n*Se.factorial(n))}return Math.log(e)+.5772156649015329+t},Si:function(e){for(var t=0,r=0;r<20;r++){var n=2*r;t+=Math.pow(-1,r)*Math.pow(e,n+1)/((n+1)*Se.factorial(n+1))}return t},Ei:function(e){if(e.equals(0))return-1/0;for(var t=0,r=1;r<30;r++)t+=Math.pow(e,r)/(r*Se.factorial(r));return.5772156649015329+Math.abs(Math.log(e))+t},Shi:function(e){for(var t,r,n=0,i=0;i<30;i++)t=2*i,r=t+1,n+=Math.pow(e,r)/(r*r*Se.factorial(t));return n},Chi:function(e){var t,r,n;return t=.001,r=.5772156649015329,n=function(e){return(Math.cosh(e)-1)/e},Math.log(e)+r+Se.num_integrate(n,.002,e,t)},gamma_incomplete:function(e,t){for(var r=e-1,n=0,t=t||0,i=0;i<r;i++)n+=Math.pow(t,i)/Se.factorial(i);return Se.factorial(r)*Math.exp(-t)*n},step:function(e){return e>0?1:e<0?0:.5},rect:function(e){var e=Math.abs(e);return.5===e?e:e>.5?0:1},sinc:function(e){return e.equals(0)?1:Math.sin(e)/e},tri:function(e){return e=Math.abs(e),e>=1?0:1-e},nthroot:function(e,t){if(e instanceof n||(e=new n(e.toString())),t instanceof n||(t=new n(t.toString())),t.equals(1))return e;var r,i,a,s=e.divide(new n(2)),o=new n(1e-15),u=t.clone().invert(),l=t.subtract(new n(1));do{var c=Se.bigpow(s,l),f=u.multiply(e.divide(c).subtract(s)).toDecimal(25);if(r=n.create(f),a)break;s=s.add(r);var f=r.toDecimal();a=!!i&&i===f,i=f}while(r.abs().gte(o));return s}};S.FUNCTION_MODULES.push(Se);!function(){S.CACHE.roots={};for(var e=2;e<=40;e++)for(var t=2;t<=40;t++){var r=w(e).pow(t);S.CACHE.roots[r+"-"+t]=e}}(),Math.sign=Math.sign||function(e){return e=+e,0===e||isNaN(e)?e:e>0?1:-1},Math.cosh=Math.cosh||function(e){var t=Math.exp(e);return(t+1/t)/2},Math.sech=Math.sech||function(e){return 1/Math.cosh(e)},Math.csch=Math.csch||function(e){return 1/Math.sinh(e)},Math.coth=Math.coth||function(e){return 1/Math.tanh(e)},Math.sinh=Math.sinh||function(e){var t=Math.exp(e);return(t-1/t)/2},Math.tanh=Math.tanh||function(e){if(e===1/0)return 1;if(e===-1/0)return-1;var t=Math.exp(2*e);return(t-1)/(t+1)},Math.asinh=Math.asinh||function(e){return e===-1/0?e:Math.log(e+Math.sqrt(e*e+1))},Math.acosh=Math.acosh||function(e){return Math.log(e+Math.sqrt(e*e-1))},Math.atanh=Math.atanh||function(e){return Math.log((1+e)/(1-e))/2},Math.log10=Math.log10||function(e){return Math.log(e)*Math.LOG10E},Math.trunc=Math.trunc||function(e){return isNaN(e)?NaN:e>0?Math.floor(e):Math.ceil(e)},ge(Se),M.text=t,r.getExpression=function(e,t){"last"!==e&&e||(e=F.length),"first"===e&&(e=1);var n=e-1,i=F[n];return i?new r(i):i},r.prototype={text:function(e){return e=e||"decimals",this.symbol.text_?this.symbol.text_(e):t(this.symbol,e)},latex:function(e){return this.symbol.latex?this.symbol.latex(e):Ee.latex(this.symbol,e)},valueOf:function(){return this.symbol.valueOf()},evaluate:function(){var e,t=arguments[0],n=1;"string"==typeof t?e="%"===t.charAt(0)?r.getExpression(t.substr(1)).text():t:t instanceof r||W(t)?e=t.text():(e=this.symbol.text(),n--);var i=arguments[n]||{};return new r(we("PARSE2NUMBER",function(){return d.parse(e,i)},!0))},buildFunction:function(e){return xe(this.symbol,e)},isNumber:function(){return te(this.symbol)},isInfinity:function(){return Math.abs(this.symbol.multiplier)===1/0},variables:function(){return fe(this.symbol)},toString:function(){try{return re(this.symbol)?"["+this.symbol.toString()+"]":this.symbol.toString()}catch(e){return""}},toDecimal:function(e){S.precision=e;var r=t(this.symbol,"decimals");return S.precision=void 0,r},isFraction:function(){return Y(this.symbol)},isPolynomial:function(){return this.symbol.isPoly()},sub:function(e,t){return new r(this.symbol.sub(d.parse(e),d.parse(t)))},operation:function(e,t){return $(t)?t=t.symbol:W(t)||(t=d.parse(t)),new r(d[e](this.symbol.clone(),t.clone()))},add:function(e){return this.operation("add",e)},subtract:function(e){return this.operation("subtract",e)},multiply:function(e){return this.operation("multiply",e)},divide:function(e){return this.operation("divide",e)},pow:function(e){return this.operation("pow",e)},expand:function(){return new r(d.expand(this.symbol))},each:function(e,t){if(this.symbol.each)this.symbol.each(e,t);else if(re(this.symbol))for(var t=0;t<this.symbol.length;t++)e.call(this.symbol,this.symbol[t],t);else e.call(this.symbol)},eq:function(e){W(e)||(e=d.parse(e));try{return d.subtract(this.symbol.clone(),e).equals(0)}catch(e){return!1}},lt:function(e){W(e)||(e=d.parse(e));try{return be(d.subtract(this.symbol.clone(),e)).lessThan(0)}catch(e){return!1}},gt:function(e){W(e)||(e=d.parse(e));try{return be(d.subtract(this.symbol.clone(),e)).greaterThan(0)}catch(e){return!1}},gte:function(e){return this.gt(e)||this.eq(e)},lte:function(e){return this.lt(e)||this.eq(e)},numerator:function(){return new r(this.symbol.getNum())},denominator:function(){return new r(this.symbol.getDenom())}},r.prototype.toTeX=r.prototype.latex,n.create=function(e){if(e instanceof n)return e;e=e.toString();var t="-"===e.charAt(0);t&&(e=e.substr(1,e.length-1));var r=new n(e);return t&&r.negate(),r},n.isFrac=function(e){return e instanceof n},n.quick=function(e,t){var r=new n;return r.num=new w(e),r.den=new w(t),r},n.simple=function(e){for(var t=String(Z(e)),r=t.split("."),i=r.join(""),a=1,s=(r[1]||"").length,o=0;o<s;o++)a+="0";return n.quick(i,a).simplify()},n.prototype={multiply:function(e){if(this.isOne())return e.clone();if(e.isOne())return this.clone();var t=this.clone();return t.num=t.num.multiply(e.num),t.den=t.den.multiply(e.den),t.simplify()},divide:function(e){if(e.equals(0))throw new c("Division by zero not allowed!");return this.clone().multiply(e.clone().invert()).simplify()},subtract:function(e){return this.clone().add(e.clone().neg())},neg:function(){return this.num=this.num.multiply(-1),this},add:function(e){var t=this.den,r=e.den,n=this.clone(),i=n.num,a=e.num;return t.equals(r)?n.num=i.add(a):(n.num=i.multiply(r).add(a.multiply(t)),n.den=t.multiply(r)),n.simplify()},mod:function(e){var t=this.clone(),r=e.clone();return t.num=t.num.multiply(r.den),t.den=t.den.multiply(r.den),r.num=r.num.multiply(this.den),r.den=r.den.multiply(this.den),t.num=t.num.mod(r.num),t.simplify()},simplify:function(){var e=w.gcd(this.num,this.den);return this.num=this.num.divide(e),this.den=this.den.divide(e),this},clone:function(){var e=new n;return e.num=new w(this.num),e.den=new w(this.den),e},toDecimal:function(e){if(e||S.PRECISION){var t=this.num.isNegative()?"-":"";if(this.num.equals(this.den))return"1";e=e||S.PRECISION,e++;for(var r=[],n=this.num.abs(),i=this.den,a=0;a<e;a++){var s=n.divide(i),o=n.subtract(s.multiply(i));if(r.push(s),o.equals(0))break;n=o.times(10)}var u=r.shift();if(0===r.length)return t+u.toString();if(a===e){for(var l=[],a=0;a<2;a++)l.unshift(r.pop());r.push(Math.round(l.join(".")))}return t+(u.toString()+"."+r.join(""))}return this.num/this.den},qcompare:function(e){return[this.num.multiply(e.den),e.num.multiply(this.den)]},equals:function(e){isNaN(e)||(e=new n(e));var t=this.qcompare(e);return t[0].equals(t[1])},absEquals:function(e){isNaN(e)||(e=new n(e));var t=this.qcompare(e);return t[0].abs().equals(t[1])},greaterThan:function(e){isNaN(e)||(e=new n(e));var t=this.qcompare(e);return t[0].gt(t[1])},gte:function(e){return this.greaterThan(e)||this.equals(e)},lte:function(e){return this.lessThan(e)||this.equals(e)},lessThan:function(e){isNaN(e)||(e=new n(e));var t=this.qcompare(e);return t[0].lt(t[1])},isInteger:function(){return this.den.equals(1)},negate:function(){return this.num=this.num.multiply(-1),this},invert:function(){var e=this.den,t=this.num.isNegative();return this.den=this.num.abs(),this.num=e,t&&(this.num=this.num.multiply(-1)),this},isOne:function(){return this.num.equals(1)&&this.den.equals(1)},sign:function(){return this.num.isNegative()?-1:1},abs:function(){return this.num=this.num.abs(),this},gcd:function(e){return n.quick(w.gcd(e.num,this.num),w.lcm(e.den,this.den))},toString:function(){return this.den.equals(1)?this.num.toString():this.num.toString()+"/"+this.den.toString()},valueOf:function(){return this.num/this.den},isNegative:function(){return this.toDecimal()<0}},a.imaginary=function(){var e=new a(S.IMAGINARY);return e.imaginary=!0,e},a.infinity=function(){return new a("Infinity")},a.shell=function(e,t){var r=new a(t);return r.group=e,r.symbols={},r.length=0,r},a.unwrapSQRT=function(e,t){var r=e.power;if(e.fname===T&&(e.isLinear()||t)){var i=e.args[0].clone();i.power=i.power.multiply(new n(.5)),i.multiplier=i.multiplier.multiply(e.multiplier),e=i,t&&(e.power=r.multiply(new n(.5)))}return e},a.hyp=function(e,t){return e.equals(0)?t.clone():t.equals(0)?e.clone():d.sqrt(d.add(d.pow(e.clone(),new a(2)),d.pow(t.clone(),new a(2))))},a.toPolarFormArray=function(e){var t,r,n,i;return t=e.realpart(),r=e.imagpart(),n=a.hyp(t,r),i=t.equals(0)?d.parse("pi/2"):d.trig.atan(d.divide(r,t)),[n,i]},a.unwrapPARENS=function(e){if(""===e.fname){var t=e.args[0];return t.power=t.power.multiply(e.power),t.multiplier=t.multiplier.multiply(e.multiplier),""===e.fname?a.unwrapPARENS(t):t}return e},a.create=function(e,t){return t=void 0===t?1:t,d.parse("("+e+")^("+t+")")},a.prototype={powSimp:function(){if(this.group===R){var e=[],t=this.multiplier.sign();this.each(function(t){var r=t.power;if(W(r)||r.equals(1))return this.clone();e.push(r)});var r=new n(le(e)),t=this.multiplier.sign(),i=this.multiplier.clone().abs(),s=Se.ifactor(i),o=new n(1),u=new n(1);for(var l in s){var c=new n(s[l]);c.lessThan(r)||(c=c.divide(r).subtract(new n(1)),u=u.multiply(new n(l))),o=o.multiply(d.parse(ae(l)+"^"+ae(c)).multiplier)}var f=new a(u);this.each(function(e){e=e.clone(),e.power=e.power.divide(r),f=d.multiply(f,e)});var p=d.symfunction(I,[f]);return p.power=r,p.multiplier=t<0?o.negate():o,p}return this.clone()},equals:function(e){return W(e)||(e=new a(e)),this.value===e.value&&this.power.equals(e.power)&&this.multiplier.equals(e.multiplier)},gt:function(e){return W(e)||(e=new a(e)),this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},gte:function(e){return W(e)||(e=new a(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},lt:function(e){return W(e)||(e=new a(e)),this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},lte:function(e){return W(e)||(e=new a(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},isPoly:function(e){var t=this.group,r=this.power;if(!ne(r)||r<0)return!1;if(t===E||t===U||this.isConstant(!0))return!0;var n=fe(this);if(t===R&&1===n.length){var i=n[0];if(!i)return!0;for(var a in this.symbols){var s=this.symbols[a];if(s.group===A&&s.fname===T&&!s.args[0].isConstant())return!1;if(!s.contains(i)&&!s.isConstant(!0))return!1}return!0}if(this.isComposite()||t===R&&e){if(!e&&n.length>1)return!1;for(var a in this.symbols)if(!this.symbols[a].isPoly(e))return!1;return!0}return!1},stripVar:function(e){var t;return this.group!==C&&this.group!==U||this.value!==e?this.group===R&&this.isLinear()?(t=new a(1),this.each(function(r){r.contains(e,!0)||(t=d.multiply(t,r.clone()))}),t.multiplier=t.multiplier.multiply(this.multiplier)):this.group!==P||this.isLinear()?this.group===P&&this.isLinear()?(t=new a(0),this.each(function(r){if(!r.contains(e)){var n=r.clone();n.multiplier=n.multiplier.multiply(this.multiplier),t=d.add(t,n)}}),t.equals(0)&&(t=new a(this.multiplier))):t=this.group===N&&this.power.contains(e,!0)?new a(this.multiplier):this.group===A&&this.contains(e)?new a(this.multiplier):this.clone():t=new a(this.multiplier):t=new a(this.multiplier),t},toArray:function(e,t){t=t||{arr:[],add:function(e,t){var r=this.arr[t];this.arr[t]=r?d.add(r,e):e}};var r=this.group;if(r===U&&this.contains(e))t.add(new a(this.multiplier),this.power);else if(r===R){var n=this.stripVar(e),i=d.divide(this.clone(),n.clone()),s=i.isConstant()?0:i.power;t.add(n,s)}else if(r===C&&this.value===e)this.each(function(r,n){t.add(r.stripVar(e),n)});else if(r===P)this.each(function(r){r.toArray(e,t)});else{if(this.contains(e))throw new Error("Cannot convert to array! Exiting");t.add(this.clone(),0)}t=t.arr;for(var o=0;o<t.length;o++)t[o]||(t[o]=new a(0));return t},hasFunc:function(e){var t=this.group===A||this.group===N;if(t&&!e||t&&this.contains(e))return!0;if(this.symbols)for(var r in this.symbols)if(this.symbols[r].hasFunc(e))return!0;return!1},sub:function(e,t){e=W(e)?e.clone():d.parse(e),t=W(t)?t.clone():d.parse(t),e.group!==E&&e.group!==x||G("Cannot substitute a number. Must be a variable");var r,i=!1,s=e.multiplier.equals(1),o=this.multiplier.clone();if(this.value===e.value&&(this.group!==C&&e.group!==C||this.group===C&&e.group===C))(s||e.multiplier.equals(this.multiplier))&&(e.isLinear()?r=t:e.power.equals(this.power)&&(r=t,i=!0),e.multiplier.equals(this.multiplier)&&(o=new n(1)));else if(this.group===R||this.previousGroup===R)r=new a(1),this.each(function(n){r=d.multiply(r,n.sub(e,t))});else if(this.isComposite())r=new a(0),this.each(function(n){r=d.add(r,n.sub(e,t))});else if(this.group===N)r=d.parse(this.value).sub(e,t);else if(this.group===A){for(var u=[],l=0;l<this.args.length;l++){var c=this.args[l];W(c)||(c=d.parse(c)),u.push(c.sub(e,t))}r=d.symfunction(this.fname,u)}if(r){if(!i){var f=this.group===N?this.power.sub(e,t):d.parse(this.power);r=d.pow(r,f)}return r.multiplier=r.multiplier.multiply(o),r}return this.clone()},isMonomial:function(){if(this.group===U)return!0;if(this.group!==R)return!1;for(var e in this.symbols)if(this.symbols[e].group!==U)return!1;return!0},isPi:function(){return this.group===U&&"pi"===this.value},sign:function(){return this.multiplier.sign()},isE:function(){return"e"===this.value},isSQRT:function(){return this.fname===T},isConstant:function(e){if("all"===e&&(this.isPi()||this.isE()))return!0;if(e&&this.group===A){for(var t=0;t<this.args.length;t++)if(!this.args[t].isConstant())return!1;return!0}return this.value===_},isImaginary:function(){if(this.imaginary)return!0;if(this.symbols)for(var e in this.symbols)if(this.symbols[e].imaginary)return!0;return!1},realpart:function(){if(this.isConstant())return this.clone();if(this.imaginary)return new a(0);if(this.isComposite()){var e=new a(0);return this.each(function(t){e=d.add(e,t.realpart())}),e}return this.isImaginary()?new a(0):this.clone()},imagpart:function(){if(this.group===U&&this.isImaginary())return new a(this.multiplier);if(this.isComposite()){var e=new a(0);return this.each(function(t){e=d.add(e,t.imagpart())}),e}return this.group===R?this.stripVar(S.IMAGINARY):new a(0)},isInteger:function(){return this.isConstant()&&this.multiplier.isInteger()},isLinear:function(e){if(e){if(this.isConstant())return!0;if(this.group===U)return this.value!==e||this.power.equals(1);if(this.isComposite()&&this.power.equals(1)){for(var t in this.symbols)if(!this.symbols[t].isLinear(e))return!1;return!0}return!(this.group!==R||!this.symbols[e])&&this.symbols[e].isLinear(e)}return this.power.equals(1)},containsFunction:function(e){if("string"==typeof e&&(e=[e]),this.group===A&&-1!==e.indexOf(this.fname))return!0;if(this.symbols)for(var t in this.symbols)if(this.symbols[t].containsFunction(e))return!0;return!1},multiplyPower:function(e){if(this.group===E&&this.multiplier.equals(1))return this;var t=this.power;if(this.group!==N&&e.group===E){var r=e.multiplier;this.group!==E||r.isInteger()||this.convert(x),this.power=t.equals(1)?r.clone():t.multiply(r),this.group===x&&ne(this.power)&&(this.value=Math.pow(this.value,this.power),this.toLinear(),this.convert(E))}else this.group!==N&&(t=new a(t),this.convert(N)),this.power=d.multiply(t,e);return this},setPower:function(e,t){if(this.group===E&&this.multiplier.equals(1))return this;if(this.group!==N||W(e)){var r=!1;W(e)&&(e.group===E?e=e.multiplier:r=!0);var i=r?N:x;this.power=e,this.group===E&&i&&this.convert(i,t)}else this.group=this.previousGroup,delete this.previousGroup,this.group===E?(this.multiplier=new n(this.value),this.value=_):this.power=e;return this},isInverse:function(){return this.group===N?this.power.multiplier.lessThan(0):this.power<0},clone:function(e){var t,r=e||new a(0),n=["value","group","length","previousGroup","imaginary","fname","args","isInfinity"],i=n.length;if(this.symbols){r.symbols={};for(var s in this.symbols)r.symbols[s]=this.symbols[s].clone()}for(t=0;t<i;t++)void 0!==this[n[t]]&&(r[n[t]]=this[n[t]]);return r.power=this.power.clone(),r.multiplier=this.multiplier.clone(),r},toUnitMultiplier:function(e){return this.multiplier.num=new w(this.multiplier.num.isNegative()&&e?-1:1),this.multiplier.den=new w(1),this},toLinear:function(){return this.setPower(new n(1)),this},each:function(e,t){if(this.symbols)for(var r in this.symbols){var n=this.symbols[r];if(n.group===C&&t)for(var i in n.symbols)e.call(r,n.symbols[i],i);else e.call(this,n,r)}else e.call(this,this,this.value)},valueOf:function(){return this.group===E?this.multiplier.valueOf():0===this.power?1:0===this.multiplier?0:t(this,"decimals")},contains:function(e,t){var r=this.group;if(this.value===e)return!0;if(this.symbols)for(var n in this.symbols)if(this.symbols[n].contains(e,t))return!0;if(r===A||this.previousGroup===A)for(var i=0;i<this.args.length;i++)if(this.args[i].contains(e,t))return!0;if(r===N){if(t&&this.power.contains(e,t))return!0;if(this.value===e)return!0}return this.value===e},negate:function(){return this.multiplier.negate(),this.group!==P&&this.group!==C||this.distributeMultiplier(),this},invert:function(e,t){return e||(this.multiplier=this.multiplier.invert()),W(this.power)?this.power.negate():this.group===R&&t?this.each(function(e){return e.invert()}):this.power&&this.group!==E&&this.power.negate(),this},distributeMultiplier:function(e){var t=e?this.power.absEquals(1):this.power.equals(1);if(this.symbols&&t&&this.group!==R&&!this.multiplier.equals(1)){for(var r in this.symbols){var n=this.symbols[r];n.multiplier=n.multiplier.multiply(this.multiplier),n.distributeMultiplier()}this.toUnitMultiplier()}return this},distributeExponent:function(){if(!this.power.equals(1)){var e=this.power;for(var t in this.symbols){var r=this.symbols[t];r.group===N?r.power=d.multiply(r.power,new a(e)):this.symbols[t].power=this.symbols[t].power.multiply(e)}this.toLinear()}return this},convert:function(e,r){if(e>A){var n=this.clone();this.symbols={},e===R?n.toUnitMultiplier():this.toUnitMultiplier(),this.group===A&&(n.args=this.args,delete this.args,delete this.fname),this.isImgSymbol&&delete this.isImgSymbol,this.toLinear(),this.symbols[n.keyForGroup(e)]=n,this.group=e,this.length=1}else if(e===N)this.group===E&&this.multiplier.equals(1)||(this.group!==N&&(this.previousGroup=this.group),this.group===E?(this.value=this.multiplier.num.toString(),this.toUnitMultiplier()):this.value=t(this,"hash"),this.group=N);else if(e===E){var i=this.multiplier.toDecimal();this.symbols&&(this.symbols=void 0),new a(this.group===x?i*Math.pow(this.value,this.power):i).clone(this)}else e===x&&this.group===E&&(this.value=r?this.multiplier.num.toString():Math.abs(this.multiplier.num.toString()),this.toUnitMultiplier(!r),this.group=x);return this},insert:function(e,t){if(W(e)||G("Object "+e+" is not of type Symbol!"),this.symbols){var r=this.group;if(r>A){var i=e.keyForGroup(r),s=i in this.symbols&&this.symbols[i];if("add"===t){var o=i;s?(this.symbols[o]=d.add(s,e),this.symbols[o].multiplier.equals(0)&&(delete this.symbols[o],0===--this.length&&(this.convert(E),this.multiplier=new n(0)))):(this.symbols[i]=e,this.length++)}else e.group===x&&ne(e.power)&&e.convert(E),e.group!==N?(this.multiplier=this.multiplier.multiply(e.multiplier),e.toUnitMultiplier()):(e.parens=e.multiplier.lessThan(0),this.multiplier=this.multiplier.multiply(e.multiplier.clone().abs()),e.toUnitMultiplier(!0)),s&&(e=d.multiply(de(this.symbols,i),e),e.isConstant()&&(this.multiplier=this.multiplier.multiply(e.multiplier),e=new a(1)),this.length--),e.isOne(!0)?e.multiplier.lessThan(0)&&this.negate():(this.symbols[i]=e,this.length++);0===this.length&&this.convert(E),this.group!==P&&this.group!==R||this.updateHash()}}return this},attach:function(e){if(re(e)){for(var t=0;t<e.length;t++)this.insert(e[t],"add");return this}return this.insert(e,"add")},combine:function(e){if(re(e)){for(var t=0;t<e.length;t++)this.insert(e[t],"multiply");return this}return this.insert(e,"multiply")},updateHash:function(){if(this.group!==E)if(this.group===A){for(var e="",r=this.args,n=this.fname===I,i=0;i<r.length;i++)e+=(0===i?"":",")+t(r[i]);var a=n?"":this.fname;this.value=a+(n?e:ae(e))}else this.group!==U&&this.group!==C&&(this.value=t(this,"hash"))},keyForGroup:function(e){var r,n=this.group;if(n===E)r=this.value;else if(n===U||n===x)r=e===C?this.power.toDecimal():this.value;else if(n===A)r=e===C?this.power.toDecimal():t(this,"hash");else{if(n===C)return r=e===R?t(this,"hash"):e===P?this.power.equals(1)?this.value:ae(t(this,"hash"))+S.POWER_OPERATOR+this.power.toDecimal():e===C?this.power.toString():this.value;n===P?(e===P&&(r=t(this,"hash")),r=e===C?this.power.toDecimal():this.value):n===R?r=e===C?this.power.toDecimal():t(this,"hash"):n===N&&(r=e===C?t(this.power):t(this,"hash"))}return r},collectSymbols:function(e,t,r,n){var i=[];if(this.symbols)for(var a in this.symbols){var s=this.symbols[a];!n||s.group!==C&&s.group!==P?i.push(e?e(s,t):s):i=i.concat(s.collectSymbols())}else i.push(this);return null===r&&(r=void 0),i.sort(r)},latex:function(e){return Ee.latex(this,e)},text:function(e){return t(this,e)},isOne:function(e){var t=e?"absEquals":"equals";return this.group===E?this.multiplier[t](1):this.power.equals(0)},isComposite:function(){var e=this.group,t=this.previousGroup;return e===P||e===C||t===C||t===P},isCombination:function(){var e=this.group,t=this.previousGroup;return e===R||t===R},lessThan:function(e){return this.multiplier.lessThan(e)},greaterThan:function(e){return this.multiplier.greaterThan(e)},getDenom:function(){var e,t;if(t=this.clone(),this.group===R&&this.power.lessThan(0)&&(t=d.expand(t)),t.power.lessThan(0)){var r=d.parse(t.multiplier.den);e=t.toUnitMultiplier(),e.power.negate(),e=d.multiply(r,e)}else if(t.group===R){e=d.parse(t.multiplier.den);for(var n in t.symbols)t.symbols[n].power<0&&(e=d.multiply(e,t.symbols[n].clone().invert()))}else e=d.parse(t.multiplier.den);return e},getNum:function(){var e,t;if(t=this.clone(),t.group===R&&t.power.lessThan(0)&&(t=d.expand(t)),t.power.greaterThan(0)&&t.group!==R)e=d.parse(t.multiplier.num),e=d.multiply(e,t.toUnitMultiplier());else if(t.group===R){e=d.parse(t.multiplier.num);for(var r in t.symbols)t.symbols[r].power>0&&(e=d.multiply(e,t.symbols[r].clone()))}else e=d.parse(t.multiplier.num);return e},toString:function(){return this.text()}},o.prototype.toString=function(){return this.val},u.prototype.toString=function(){return this.val},l.prototype.toString=function(){return"`"+this.val},c.prototype=Object.create(Error.prototype),f.prototype=Object.create(Error.prototype),p.prototype=Object.create(Error.prototype),h.prototype=Object.create(Error.prototype);var qe={convert:function(e,t){var r;if(0===e)r=[0,1];else if(e<1e-6||e>1e20){var n=this.quickConversion(Number(e));if(n[1]<=1e20){var i=Math.abs(e),a=e/i;r=this.fullConversion(i.toFixed((n[1]+"").length-1)),r[0]=r[0]*a}else r=n}else r=this.fullConversion(e);return r},quickConversion:function(e){var t=(e.toExponential()+"").split("e"),r=t[0].split(".")[1],n=r?r.length:0;return[Math.round(Math.pow(10,n)*t[0]),Math.pow(10,Math.abs(t[1])+n)]},fullConversion:function(e){for(var t=!1,r=0,n=1,i=1,a=0,s=0,o=e;!t;){s++,s>1e4&&(t=!0);var u=Math.floor(o),l=r+u*i,c=n+u*a,f=o-u;f<1e-16&&(t=!0),o=1/f,r=i,n=a,i=l,a=c,(Math.abs(l/c-e)<1e-16||s>30)&&(t=!0)}return[l,c]}},Ee={space:"~",dot:" \\cdot ",latex:function(e,t){if(e.clone&&(e=e.clone()),re(e)){for(var r=[],n=0;n<e.length;n++){var i=e[n];W(i)||(i=d.parse(i)),r.push(this.latex(i))}return this.brackets(r.join(", "),"square")}if(ee(e)){for(var a="\\begin{pmatrix}\n",n=0;n<e.elements.length;n++){for(var s=[],o=e.elements[n],u=0;u<o.length;u++)s.push(this.latex(o[u]));a+=s.join(" & "),n<e.elements.length-1&&(a+="\\\\\n")}return a+="\\end{pmatrix}"}if(K(e)){for(var a="\\left[",n=0;n<e.elements.length;n++)a+=this.latex(e.elements[n])+" "+(n!==e.elements.length-1?",\\,":"");return a+="\\right]"}e=e.clone();var l="decimal"===t,c=e.power,f=ie(c),p=e.multiplier.lessThan(0);if(e.group===x&&l)return String(e.multiplier.toDecimal()*Math.pow(e.value,e.power.toDecimal()));e.multiplier=e.multiplier.abs();var h;if(l){var m=String(e.multiplier.toDecimal());"1"!=m||l||(m=""),h=[m,""]}else h=[e.multiplier.num,e.multiplier.den];var v,g=this.value(e,f,t,p);f&&c.negate(),l?"1"==(v=W(c)?Ee.latex(c,t):String(c.toDecimal()))&&(v=""):v=W(c)?this.latex(c,t):this.formatFrac(c,!0);var w=["",""];return w[f?1:0]=v,((p?"-":"")+this.set(h,g,w,e.group===R)).replace(/\+\-/gi,"-")},greek:{alpha:"\\alpha",beta:"\\beta",gamma:"\\gamma",delta:"\\delta",epsilon:"\\epsilon",zeta:"\\zeta",eta:"\\eta",theta:"\\theta",iota:"\\iota",kappa:"\\kappa",lambda:"\\lambda",mu:"\\mu",nu:"\\nu",xi:"\\xi",omnikron:"\\omnikron",pi:"\\pi",rho:"\\rho",sigma:"\\sigma",tau:"\\tau",upsilon:"\\upsilon",phi:"\\phi",chi:"\\chi",psi:"\\psi",omega:"\\omega",Gamma:"\\Gamma",Delta:"\\Delta",Epsilon:"\\Epsilon",Theta:"\\Theta",Lambda:"\\Lambda",Xi:"\\Xi",Pi:"\\Pi",Sigma:"\\Sigma",Phi:"\\Phi",Psi:"\\Psi",Omega:"\\Omega"},value:function(e,t,r,n){var i=e.group,a=e.previousGroup,s=["",""],o=t?1:0;if(e.isInfinity)s[o]="\\infty";else if(i===U||i===x||a===U||a===x||a===E){var u=e.value;u.replace&&(u=u.replace(/(.+)_$/,"$1\\_"));var l=String(u).split("_"),c=this.greek[l[0]];c&&(l[0]=c,u=l.join("_")),s[o]=u}else if(i===A||a===A){for(var f,p=[],h=e.fname,m=0;m<e.args.length;m++){var v,g=e.args[m];v="string"==typeof g?g:this.latex(g,r),p.push(v)}if(h===T)s[o]="\\sqrt"+this.braces(p.join(","));else if(h===k)s[o]=this.brackets(p.join(","),"abs");else if(h===I)s[o]=this.brackets(p.join(","),"parens");else if("limit"===h)s[o]=" \\lim\\limits_{"+p[1]+" \\to "+p[2]+"} "+p[0];else if("integrate"===h)s[o]="\\int"+this.braces(p[0])+this.braces("d"+p[1]);else if("defint"===h)s[o]="\\int\\limits_"+this.braces(p[1])+"^"+this.braces(p[2])+" "+p[0]+" d"+p[3];else if(h===L||h===O){var g=e.args[0];g.power.equals(1)&&(g.isComposite()||g.isCombination())&&(p[0]=this.brackets(p[0])),s[o]=p[0]+(h===L?"!":"!!")}else if("floor"===h)s[o]="\\left \\lfloor"+this.braces(p[0])+"\\right \\rfloor";else if("ceil"===h)s[o]="\\left \\lceil"+this.braces(p[0])+"\\right \\rceil";else if("log"===h&&p.length>1)s[o]="\\mathrm"+this.braces("log")+"_"+this.braces(p[1])+this.brackets(p[0]);else if("log10"===h)s[o]="\\mathrm"+this.braces("log")+"_"+this.braces(10)+this.brackets(p[0]);else if("sum"===h){var d=p[0],w=p[1],y=p[2],b=p[3];s[o]="\\sum\\limits_{"+this.braces(w)+"="+this.braces(y)+"}^"+this.braces(b)+" "+this.braces(d)}else if("product"===h){var d=p[0],w=p[1],y=p[2],b=p[3];s[o]="\\prod\\limits_{"+this.braces(w)+"="+this.braces(y)+"}^"+this.braces(b)+" "+this.braces(d)}else if("nthroot"===h)s[o]="\\sqrt["+p[1]+"]"+this.braces(p[0]);else if("mod"===h)s[o]=p[0]+" \\bmod "+p[1];else if("realpart"===h)s[o]="\\operatorname{Re}"+this.brackets(p[0]);else if("imagpart"===h)s[o]="\\operatorname{Im}"+this.brackets(p[0]);else{var f=""!==h?"\\mathrm"+this.braces(h.replace(/_/g,"\\_")):"";s[o]=f+this.brackets(p.join(","),"parens")}}else if(e.isComposite()){for(var M=e.collectSymbols().sort(i===P||a===P?function(e,t){return t.group-e.group}:function(e,t){var r=W(e.power)?-1:e.power;return(W(t.power)?-1:t.power)-r}),S=[],q=M.length,m=0;m<q;m++)S.push(Ee.latex(M[m],r));var u=S.join("+");s[o]=e.isLinear()&&e.multiplier.equals(1)&&!n?u:this.brackets(u,"parens")}else if(i===R||a===N||a===R){i===R&&e.distributeExponent();var C=[],_=[],F=[],D=[],B=0,j=0,V=function(e,t,r){if(r>1&&t.length>0)for(var n=t.length,i=0;i<n;i++){var a=t[i],s=e[a];/^\\left\(.+\\right\)\^\{.+\}$/g.test(s)||/^\\left\(.+\\right\)$/g.test(s)||(e[a]=Ee.brackets(s,"parens"))}return e};e.each(function(t){var n,i=ie(t.power);i?(n=Ee.latex(t.invert(),r),j++,t.isComposite()&&(1!=e.multiplier.den&&1==Math.abs(t.power)&&(n=Ee.brackets(n,"parens")),F.push(C.length)),C.push(n)):(n=Ee.latex(t,r),B++,t.isComposite()&&(1!=e.multiplier.num&&1==Math.abs(t.power)&&(n=Ee.brackets(n,"parens")),D.push(_.length)),_.push(n))}),V(_,D,B),s[0]=_.join(this.dot),V(C,F,j),s[1]=C.join(this.dot)}return s},set:function(e,t,r,n){var i=function(e){return/^\\left\(.+\\right\)$/.test(e)};if(r&&(r=this.formatP(r)),n){var a=r[0];r[0]=""}t=this.merge(t,r);var s=e[0],o=e[1],u=t[0],l=t[1];u&&1==s&&(s=""),1==o&&(o="");var c=this.join(s,u,i(u)?"":this.dot),f=this.join(o,l,i(l)?"":this.dot);if(c&&f){var p=this.frac(c,f);return n&&a&&(p=this.brackets(p)+a),p}return c},merge:function(e,t){for(var r=[],n=0;n<2;n++)r[n]=e[n]+t[n];return r},join:function(e,t,r){return e||t?e&&!t?e:t&&!e?t:e+r+t:""},formatP:function(e){for(var t=0;t<2;t++){var r=e[t];r&&(e[t]="^"+this.braces(r))}return e},formatFrac:function(e,t){var r=e.num.toString(),n=e.den.toString();return t&&"1"===r&&"1"===n?"":"1"===n?r:this.frac(r,n)},frac:function(e,t){return"\\frac"+this.braces(e)+this.braces(t)},braces:function(e){return"{"+e+"}"},brackets:function(e,t){t=t||"parens";var r={parens:["(",")"],square:["[","]"],brace:["{","}"],abs:["|","|"],angle:["\\langle","\\rangle"]},n=r[t];return"\\left"+n[0]+e+"\\right"+n[1]}};v.arrayPrefill=function(e,t){var r=[];t=t||0;for(var n=0;n<e;n++)r[n]=t;return r},v.fromArray=function(e){var t=new v;return t.elements=e,t},v.prototype={custom:!0,e:function(e){return e<1||e>this.elements.length?null:this.elements[e-1]},set:function(e,t){this.elements[e]=new a(t)},dimensions:function(){return this.elements.length},modulus:function(){return we("SAFE",function(){return d.pow(this.dot(this.clone()),new a(.5))},void 0,this)},eql:function(e){var t=this.elements.length,r=e.elements||e;if(t!==r.length)return!1;do{if(Math.abs(d.subtract(this.elements[t-1],r[t-1]).valueOf())>PRECISION)return!1}while(--t);return!0},clone:function(){for(var e=new v,t=this.elements.length,r=0;r<t;r++)e.elements.push(this.elements[r].clone());return e},map:function(e){var t=[];return this.each(function(r,n){t.push(e(r,n))}),new v(t)},each:function(e){var t,r=this.elements.length,n=r;do{t=n-r,e(this.elements[t],t+1)}while(--r)},toUnitVector:function(){return we("SAFE",function(){var e=this.modulus();return 0===e.valueOf()?this.clone():this.map(function(t){return d.divide(t,e)})},void 0,this)},angleFrom:function(e){return we("SAFE",function(){var t=e.elements||e;if(this.elements.length!==t.length)return null;var r=new a(0),n=new a(0),i=new a(0);this.each(function(e,a){r=d.add(r,d.multiply(e,t[a-1])),n=d.add(n,d.multiply(e,e)),i=d.add(i,d.multiply(t[a-1],t[a-1]))}),n=d.pow(n,new a(.5)),i=d.pow(i,new a(.5));var s=d.multiply(n,i);if(0===s.valueOf())return null;var o=d.divide(r,s),u=o.valueOf();return u<-1&&(o=-1),u>1&&(o=1),new a(Math.acos(o))},void 0,this)},isParallelTo:function(e){var t=this.angleFrom(e).valueOf();return null===t?null:t<=PRECISION},isAntiparallelTo:function(e){var t=this.angleFrom(e).valueOf();return null===t?null:Math.abs(t-Math.PI)<=Sylvester.precision},isPerpendicularTo:function(e){var t=this.dot(e);return null===t?null:Math.abs(t)<=Sylvester.precision},add:function(e){return we("SAFE",function(){var t=e.elements||e;return this.elements.length!==t.length?null:this.map(function(e,r){return d.add(e,t[r-1])})},void 0,this)},subtract:function(e){return we("SAFE",function(){var t=e.elements||e;return this.elements.length!==t.length?null:this.map(function(e,r){return d.subtract(e,t[r-1])})},void 0,this)},multiply:function(e){return this.map(function(t){return t.clone()*e.clone()})},x:function(e){return this.multiply(e)},dot:function(e){return we("SAFE",function(){var t=e.elements||e,r=new a(0),n=this.elements.length;if(n!==t.length)return null;do{r=d.add(r,d.multiply(this.elements[n-1],t[n-1]))}while(--n);return r},void 0,this)},cross:function(e){var t=e.elements||e;if(3!==this.elements.length||3!==t.length)return null;var r=this.elements;return we("SAFE",function(){return new v([d.subtract(d.multiply(r[1],t[2]),d.multiply(r[2],t[1])),d.subtract(d.multiply(r[2],t[0]),d.multiply(r[0],t[2])),d.subtract(d.multiply(r[0],t[1]),d.multiply(r[1],t[0]))])},void 0,this)},max:function(){var e,t=0,r=this.elements.length,n=r;do{e=n-r,Math.abs(this.elements[e].valueOf())>Math.abs(t.valueOf())&&(t=this.elements[e])}while(--r);return t},indexOf:function(e){var t,r=null,n=this.elements.length,i=n;do{t=i-n,null===r&&this.elements[t].valueOf()===e.valueOf()&&(r=t+1)}while(--n);return r},text:function(e){return t(this)},toString:function(){return this.text()},latex:function(e){for(var t=[],r=0;r<this.elements.length;r++)t.push(Ee.latex.call(Ee,this.elements[r],e));return"["+t.join(", ")+"]"}},g.identity=function(e){for(var t=new g,r=0;r<e;r++){t.elements.push([]);for(var n=0;n<e;n++)t.set(r,n,new a(r===n?1:0))}return t},g.fromArray=function(e){function t(e){return g.apply(this,e)}return t.prototype=g.prototype,new t(e)},g.zeroMatrix=function(e,t){for(var r=new g,n=0;n<e;n++)r.elements.push(v.arrayPrefill(t,new a(0)));return r},g.prototype={custom:!0,get:function(e,t){if(this.elements[e])return this.elements[e][t]},set:function(e,t,r){this.elements[e]||(this.elements[e]=[]),this.elements[e][t]=W(r)?r:new a(r)},cols:function(){return this.elements[0].length},rows:function(){return this.elements.length},row:function(e){return!e||e>this.cols()?[]:this.elements[e-1]},col:function(e){var t=this.rows(),r=[];if(e>this.cols()||!e)return r;for(var n=0;n<t;n++)r.push(this.elements[n][e-1]);return r},eachElement:function(e){var t,r,n=this.rows(),i=this.cols();for(t=0;t<n;t++)for(r=0;r<i;r++)this.elements[t][r]=e.call(this,this.elements[t][r],t,r)},determinant:function(){if(!this.isSquare())return null;var e,t=this.toRightTriangular(),r=t.elements[0][0],n=t.elements.length-1,i=n;do{e=i-n+1,r=d.multiply(r,t.elements[e][e])}while(--n);return r},isSquare:function(){return this.elements.length===this.elements[0].length},isSingular:function(){return this.isSquare()&&0===this.determinant()},augment:function(e){var t=this.rows();t!==e.rows()&&G("Cannot augment matrix. Rows don't match.");for(var r=0;r<t;r++)this.elements[r]=this.elements[r].concat(e.elements[r]);return this},clone:function(){for(var e=this.rows(),t=this.cols(),r=new g,n=0;n<e;n++){r.elements[n]=[];for(var i=0;i<t;i++){var a=this.elements[n][i];r.elements[n][i]=W(a)?a.clone():a}}return r},invert:function(){return this.isSquare()||G("Matrix is not square!"),we("SAFE",function(){var e,t,r,n,i,a,s,o=this.elements.length,u=o,l=g.identity(o),c=this.augment(l).toRightTriangular(),f=c.elements[0].length,p=[];do{e=o-1,i=[],r=f,p[e]=[],a=c.elements[e][e];do{n=f-r,s=d.divide(c.elements[e][n],a.clone()),i.push(s),n>=u&&p[e].push(s)}while(--r);for(c.elements[e]=i,t=0;t<e;t++){i=[],r=f;do{n=f-r,i.push(d.subtract(c.elements[t][n].clone(),d.multiply(c.elements[e][n].clone(),c.elements[t][e].clone())))}while(--r);c.elements[t]=i}}while(--o);return g.fromArray(p)},void 0,this)},toRightTriangular:function(){return we("SAFE",function(){var e,t,r,n,i,s,o=this.clone(),u=this.elements.length,l=u,c=this.elements[0].length;do{if(n=l-u,t=o.elements[n][n],0===t.valueOf())for(var f=n+1;f<l;f++)if((r=o.elements[f][n])&&0!==r.valueOf()){e=[],i=c;do{s=c-i,e.push(d.add(o.elements[n][s].clone(),o.elements[f][s].clone()))}while(--i);o.elements[n]=e;break}var t=o.elements[n][n];if(0!==t.valueOf())for(f=n+1;f<l;f++){var p=d.divide(o.elements[f][n].clone(),o.elements[n][n].clone());e=[],i=c;do{s=c-i,e.push(s<=n?new a(0):d.subtract(o.elements[f][s].clone(),d.multiply(o.elements[n][s].clone(),p.clone())))}while(--i);o.elements[f]=e}}while(--u);return o},void 0,this)},transpose:function(){var e,t,r,n=this.elements.length,i=this.elements[0].length,a=new g,s=i;do{e=i-s,a.elements[e]=[],t=n;do{r=n-t,a.elements[e][r]=this.elements[r][e].clone()}while(--t)}while(--s);return a},canMultiplyFromLeft:function(e){var t=ee(e)?e.elements.length:e.length;return this.elements[0].length===t},sameSize:function(e){return this.rows()===e.rows()&&this.cols()===e.cols()},multiply:function(e){return we("SAFE",function(){var t=e.elements||e;if(!this.canMultiplyFromLeft(t)){if(this.sameSize(e)){for(var r=new g,n=this.rows(),i=0;i<n;i++){var s=d.multiply(new v(this.elements[i]),new v(e.elements[i]));r.elements[i]=s.elements}return r}return null}var i,o,u,l,c,f,p=this.elements.length,h=p,m=t[0].length,w=this.elements[0].length,y=[];do{i=h-p,y[i]=[],o=m;do{u=m-o,l=new a(0),c=w;do{f=w-c,l=d.add(l,d.multiply(this.elements[i][f],t[f][u]))}while(--c);y[i][u]=l}while(--o)}while(--p);return g.fromArray(y)},void 0,this)},add:function(e){var t=new g;return this.sameSize(e)&&this.eachElement(function(r,n,i){t.set(n,i,d.add(r.clone(),e.elements[n][i]))}),t},subtract:function(e){var t=new g;return this.sameSize(e)&&this.eachElement(function(r,n,i){t.set(n,i,d.subtract(r.clone(),e.elements[n][i]))}),t},negate:function(){return this.each(function(e){return e.negate()}),this},toVector:function(){if(1===this.rows()||1===this.cols()){var e=new v;return e.elements=this.elements,e}return this},toString:function(e){var t=this.rows(),r=[];e=void 0===e?"\n":e;for(var n=0;n<t;n++)r.push("["+this.elements[n].map(function(e){return void 0!==e?e.toString():""}).join(",")+"]");return"matrix"+ae(r.join(","))},text:function(){return"matrix("+this.toString("")+")"},latex:function(e){var t=this.cols(),r=this.elements;return se("\\begin{vmatrix}{0}\\end{vmatrix}",function(){var n=[];for(var i in r){for(var a=[],s=0;s<t;s++)a.push(Ee.latex.call(Ee,r[i][s],e));n.push(a.join(" & "))}return n.join(" \\cr ")})}},g.prototype.each=g.prototype.eachElement;var xe=M.build=function(e,t){e=we("PARSE2NUMBER",function(){return d.parse(e)},!0);var r=fe(e),n=[],i=function(e,t){t=t||[];var r=[],a=e.group,s="",o=function(r){var n=r===R?"*":"+",a=[];for(var s in e.symbols){var o=e.symbols[s],u=i(o,t)[0];o.isComposite()&&(u=ae(u)),a.push(u)}var l=a.join(n);return l=l&&!e.multiplier.equals(1)?ae(l):l},u=function(r){var a;return r in Math?a="Math."+r:(-1===n.indexOf(r)&&(t.push("var "+r+" = "+Se[r].toString()+"; "),n.push(r)),a=r),a+=ae(e.args.map(function(e){return i(e,t)[0]}).join(","))};a===E?r.push(e.multiplier.toDecimal()):e.multiplier.equals(-1)?s="-":e.multiplier.equals(1)||r.push(e.multiplier.toDecimal());var l;if(a===U||a===x)l=e.value;else if(a===A)l=u(e.fname);else if(a===N){var c=e.previousGroup;l=c===E||c===U?e.value:c===A?u(e.fname):o(e.previousGroup)}else l=o(e.group);if(e.group!==E&&!e.power.equals(1)){var f=i(d.parse(e.power));t.push(f[1]),l="Math.pow"+ae(l+","+f[0])}return l&&r.push(s+l),[r.join("*"),t.join("").replace(/\n+\s+/g," ")]};if(t){for(var a=0;a<r.length;a++){var s=r[a];-1===t.indexOf(s)&&G(s+" not found in argument array")}r=t}var o=i(e);return new Function(r,o[1]+" return "+o[0]+";")};!function(){ge(d.constants),ge(d.functions)}();var Ue={Operator:o,groups:y,Symbol:a,Expression:r,Frac:n,Vector:v,Matrix:g,Parser:m,Fraction:qe,Math2:Se,LaTeX:Ee,Utils:M,PARSER:d,PARENTHESIS:I,Settings:S,err:G,bigInt:w,exceptions:{DivisionByZero:c,ParseError:f,UndefinedError:p,MaximumIterationsReached:h}};Ue.Utils.importFunctions=function(){var e={};for(var t in d.functions)e[t]=d.functions[t][0];return e},d.error||(d.error=G);var Ne=function(e,t,n,a){var s=/^([a-z_][a-z\d\_]*)\(([a-z_,\s]*)\):=(.+)$/gi.exec(e);if(s)return i.setFunction(s[1],s[2].split(","),s[3]);e instanceof r&&(e=e.toString());var o=re(n),u=o?-1!==n.indexOf("numer"):"numer"===n;(o?-1!==n.indexOf("expand"):"expand"===n)&&(e=se("{0}({1})","expand",e));var l=we("PARSE2NUMBER",function(){return d.parse(e,t)},u||S.PARSE2NUMBER);return a?F[a-1]=l:F.push(l),new r(l)};return Ne.rpn=function(e){return d.parse(e,null,!0)},Ne.convertToLaTeX=function(e){return d.toTeX(e)},Ne.version=function(e){if(e)try{return Ue[e].version}catch(t){return"No module named "+e+" found!"}return"0.7.16"},Ne.getWarnings=function(){return j},Ne.setConstant=function(e,t){if(X(e),!V(e))if("delete"===t||""===t)delete d.constants[e];else{if(isNaN(t))throw new Error("Constant must be a number!");d.constants[e]=t}return this},Ne.getConstant=function(e){return String(d.constant[e])},Ne.setFunction=function(e,t,r){return X(e),!V(e)&&(t=t||fe(d.parse(r)),d.functions[e]=[d.mapped_function,t.length,{name:e,params:t,body:r}],!0)},Ne.getCore=function(){return Ue},Ne.getExpression=Ne.getEquation=r.getExpression,Ne.reserved=function(e){return e?B:B.join(", ")},Ne.clear=function(e,t){if("all"===e)F=[];else if("last"===e)F.pop();else if("first"===e)F.shift();else{var r=e?e-1:F.length;!0===t?F[r]=void 0:de(F,r)}return this},Ne.flush=function(){return this.clear("all"),this},Ne.expressions=function(e,r,n){for(var i=e?{}:[],a=0;a<F.length;a++){var s=r?Ee.latex(F[a],n):t(F[a],n);e?i[a+1]=s:i.push(s)}return i},Ne.register=function(e){var t=this.getCore();if(re(e))for(var r=0;r<e.length;r++)e&&this.register(e[r]);else if(e&&-1===S.exclude.indexOf(e.name)){if(e.dependencies)for(var r=0;r<e.dependencies.length;r++)if(!t[e.dependencies[r]])throw new Error(se("{0} requires {1} to be loaded!",e.name,e.dependencies[r]));var n=e.parent,i=e.build.call(t);if(n){t[n]||(t[e.parent]={});var a="nerdamer"===n?this:t[n];a[e.name]=i}e.visible&&(d.functions[e.name]=[i,e.numargs])}},Ne.validateName=X,Ne.validVarName=function(e){try{return X(e),-1===B.indexOf(e)}catch(e){return!1}},Ne.supported=function(){return oe(d.functions)},Ne.numEquations=Ne.numExpressions=function(){return F.length},Ne.setVar=function(e,t){return X(e),e in d.constants&&G("Cannot set value for constant "+e),"delete"===t||""===t?delete D[e]:D[e]=W(t)?t:d.parse(t),this},Ne.getVar=function(e){return D[e]},Ne.clearVars=function(){return D={},this},Ne.load=function(e){return e.call(this),this},Ne.getVars=function(e,t){e=e||"text";var r={};if("object"===e)r=D;else for(var n in D)"latex"===e?r[n]=D[n].latex(t):"text"===e&&(r[n]=D[n].text(t));return r},Ne.set=function(e,t){if("object"==typeof e)for(var r in e)Ne.set(r,e[r]);-1!==["SAFE"].indexOf(e)&&G("Cannot modify setting: "+e),S[e]=t},Ne.get=function(e){return S[e]},Ne.api=function(e){for(var t in d.functions)t in Ne&&!e||(Ne[t]=function(e){return function(){for(var t=[].slice.call(arguments),n=0;n<t.length;n++)t[n]=d.parse(t[n]);return new r(we("PARSE2NUMBER",function(){return d.callfunction(e,t)}))}}(t))},Ne.replaceFunction=function(e,t,r){var n=d.functions[e],i=void 0===r?n[1]:r;d.functions[e]=[t.call(void 0,n[0],Ue),i]},Ne.setOperator=function(e,t,r,n,i,a,s){d.operators[e]=new o(e,t,r,n,i,a,s),d.name=t,q[t]=e},Ne.getOperator=function(e){return d.operators[e]},Ne.api(),Ne}({bigInt:function(){var i=function(e){"use strict";function t(e,r){return void 0===e?t[0]:void 0!==r?10==+r?H(e):ee(e,r):H(e)}function r(e,t){this.value=e,this.sign=t,this.isSmall=!1}function n(e){this.value=e,this.sign=e<0,this.isSmall=!0}function a(e){return-X<e&&e<X}function s(e){return e<1e7?[e]:e<1e14?[e%1e7,Math.floor(e/1e7)]:[e%1e7,Math.floor(e/1e7)%1e7,Math.floor(e/1e14)]}function o(e){u(e);var t=e.length;if(t<4&&A(e,Z)<0)switch(t){case 0:return 0;case 1:return e[0];case 2:return e[0]+e[1]*G;default:return e[0]+(e[1]+e[2]*G)*G}return e}function u(e){for(var t=e.length;0===e[--t];);e.length=t+1}function l(e){for(var t=new Array(e),r=-1;++r<e;)t[r]=0;return t}function c(e){return e>0?Math.floor(e):Math.ceil(e)}function f(e,t){var r,n,i=e.length,a=t.length,s=new Array(i),o=0,u=G;for(n=0;n<a;n++)r=e[n]+t[n]+o,o=r>=u?1:0,s[n]=r-o*u;for(;n<i;)r=e[n]+o,o=r===u?1:0,s[n++]=r-o*u;return o>0&&s.push(o),s}function p(e,t){return e.length>=t.length?f(e,t):f(t,e)}function h(e,t){var r,n,i=e.length,a=new Array(i),s=G;for(n=0;n<i;n++)r=e[n]-s+t,t=Math.floor(r/s),a[n]=r-t*s,t+=1;for(;t>0;)a[n++]=t%s,t=Math.floor(t/s);return a}function m(e,t){var r,n,i=e.length,a=t.length,s=new Array(i),o=0,l=G;for(r=0;r<a;r++)n=e[r]-o-t[r],n<0?(n+=l,o=1):o=0,s[r]=n;for(r=a;r<i;r++){if(!((n=e[r]-o)<0)){s[r++]=n;break}n+=l,s[r]=n}for(;r<i;r++)s[r]=e[r];return u(s),s}function v(e,t,i){var a;return A(e,t)>=0?a=m(e,t):(a=m(t,e),i=!i),a=o(a),"number"==typeof a?(i&&(a=-a),new n(a)):new r(a,i)}function g(e,t,i){var a,s,u=e.length,l=new Array(u),c=-t,f=G;for(a=0;a<u;a++)s=e[a]+c,c=Math.floor(s/f),s%=f,l[a]=s<0?s+f:s;return l=o(l),"number"==typeof l?(i&&(l=-l),new n(l)):new r(l,i)}function d(e,t){var r,n,i,a,s,o=e.length,c=t.length,f=o+c,p=l(f),h=G;for(i=0;i<o;++i){a=e[i];for(var m=0;m<c;++m)s=t[m],r=a*s+p[i+m],n=Math.floor(r/h),p[i+m]=r-n*h,p[i+m+1]+=n}return u(p),p}function w(e,t){var r,n,i=e.length,a=new Array(i),s=G,o=0;for(n=0;n<i;n++)r=e[n]*t+o,o=Math.floor(r/s),a[n]=r-o*s;for(;o>0;)a[n++]=o%s,o=Math.floor(o/s);return a}function y(e,t){for(var r=[];t-- >0;)r.push(0);return r.concat(e)}function b(e,t){var r=Math.max(e.length,t.length);if(r<=30)return d(e,t);r=Math.ceil(r/2);var n=e.slice(r),i=e.slice(0,r),a=t.slice(r),s=t.slice(0,r),o=b(i,s),l=b(n,a),c=b(p(i,n),p(s,a)),f=p(p(o,y(m(m(c,o),l),r)),y(l,2*r));return u(f),f}function M(e,t){return-.012*e-.012*t+15e-6*e*t>0}function S(e,t,n){return e<G?new r(w(t,e),n):new r(d(t,s(e)),n)}function q(e){var t,r,n,i,a,s=e.length,o=l(s+s),c=G;for(n=0;n<s;n++){i=e[n];for(var f=0;f<s;f++)a=e[f],t=i*a+o[n+f],r=Math.floor(t/c),o[n+f]=t-r*c,o[n+f+1]+=r}return u(o),o}function E(e,t){var r,n,i,a,s,u,c,f=e.length,p=t.length,h=G,m=l(t.length),v=t[p-1],g=Math.ceil(h/(2*v)),d=w(e,g),y=w(t,g);for(d.length<=f&&d.push(0),y.push(0),v=y[p-1],n=f-p;n>=0;n--){for(r=h-1,d[n+p]!==v&&(r=Math.floor((d[n+p]*h+d[n+p-1])/v)),i=0,a=0,u=y.length,s=0;s<u;s++)i+=r*y[s],c=Math.floor(i/h),a+=d[n+s]-(i-c*h),i=c,a<0?(d[n+s]=a+h,a=-1):(d[n+s]=a,a=0);for(;0!==a;){for(r-=1,i=0,s=0;s<u;s++)i+=d[n+s]-h+y[s],i<0?(d[n+s]=i+h,i=0):(d[n+s]=i,i=1);a+=i}m[n]=r}return d=U(d,g)[0],[o(m),o(d)]}function x(e,t){for(var r,n,i,a,s,l=e.length,c=t.length,f=[],p=[],h=G;l;)if(p.unshift(e[--l]),u(p),A(p,t)<0)f.push(0);else{n=p.length,i=p[n-1]*h+p[n-2],a=t[c-1]*h+t[c-2],n>c&&(i=(i+1)*h),r=Math.ceil(i/a);do{if(s=w(t,r),A(s,p)<=0)break;r--}while(r);f.push(r),p=m(p,s)}return f.reverse(),[o(f),o(p)]}function U(e,t){var r,n,i,a,s=e.length,o=l(s),u=G;for(i=0,r=s-1;r>=0;--r)a=i*u+e[r],n=c(a/t),i=a-n*t,o[r]=0|n;return[o,0|i]}function N(e,i){var a,u,l=H(i),f=e.value,p=l.value;if(0===p)throw new Error("Cannot divide by zero");if(e.isSmall)return l.isSmall?[new n(c(f/p)),new n(f%p)]:[t[0],e];if(l.isSmall){if(1===p)return[e,t[0]];if(-1==p)return[e.negate(),t[0]];var h=Math.abs(p);if(h<G){a=U(f,h),u=o(a[0]);var m=a[1];return e.sign&&(m=-m),"number"==typeof u?(e.sign!==l.sign&&(u=-u),[new n(u),new n(m)]):[new r(u,e.sign!==l.sign),new n(m)]}p=s(h)}var v=A(f,p);if(-1===v)return[t[0],e];if(0===v)return[t[e.sign===l.sign?1:-1],t[0]];a=f.length+p.length<=200?E(f,p):x(f,p),u=a[0];var g=e.sign!==l.sign,d=a[1],w=e.sign;return"number"==typeof u?(g&&(u=-u),u=new n(u)):u=new r(u,g),"number"==typeof d?(w&&(d=-d),d=new n(d)):d=new r(d,w),[u,d]}function A(e,t){if(e.length!==t.length)return e.length>t.length?1:-1;for(var r=e.length-1;r>=0;r--)if(e[r]!==t[r])return e[r]>t[r]?1:-1;return 0}function C(e){var t=e.abs();return!t.isUnit()&&(!!(t.equals(2)||t.equals(3)||t.equals(5))||!(t.isEven()||t.isDivisibleBy(3)||t.isDivisibleBy(5))&&(!!t.lesser(25)||void 0))}function R(e){return("number"==typeof e||"string"==typeof e)&&+Math.abs(e)<=G||e instanceof r&&e.value.length<=1}function P(e,t,r){t=H(t);for(var n=e.isNegative(),a=t.isNegative(),s=n?e.not():e,o=a?t.not():t,u=[],l=[],c=!1,f=!1;!c||!f;)s.isZero()?(c=!0,u.push(n?1:0)):n?u.push(s.isEven()?1:0):u.push(s.isEven()?0:1),o.isZero()?(f=!0,l.push(a?1:0)):a?l.push(o.isEven()?1:0):l.push(o.isEven()?0:1),s=s.over(2),o=o.over(2);for(var p=[],h=0;h<u.length;h++)p.push(r(u[h],l[h]));for(var m=i(p.pop()).negate().times(i(2).pow(p.length));p.length;)m=m.add(i(p.pop()).times(i(2).pow(p.length)));return m}function _(e){var t=e.value,r="number"==typeof t?t|J:t[0]+t[1]*G|K;return r&-r}function I(e,t){return e=H(e),t=H(t),e.greater(t)?e:t}function T(e,t){return e=H(e),t=H(t),e.lesser(t)?e:t}function k(e,r){if(e=H(e).abs(),r=H(r).abs(),e.equals(r))return e;if(e.isZero())return r;if(r.isZero())return e;for(var n,i,a=t[1];e.isEven()&&r.isEven();)n=Math.min(_(e),_(r)),e=e.divide(n),r=r.divide(n),a=a.multiply(n);for(;e.isEven();)e=e.divide(_(e));do{for(;r.isEven();)r=r.divide(_(r));e.greater(r)&&(i=r,r=e,e=i),r=r.subtract(e)}while(!r.isZero());return a.isUnit()?e:e.multiply(a)}function L(e,t){return e=H(e).abs(),t=H(t).abs(),e.divide(k(e,t)).multiply(t)}function O(e,t){e=H(e),t=H(t);var i=T(e,t),a=I(e,t),s=a.subtract(i);if(s.isSmall)return i.add(Math.round(Math.random()*s));for(var u=s.value.length-1,l=[],f=!0,p=u;p>=0;p--){var h=f?s.value[p]:G,m=c(Math.random()*h);l.unshift(m),m<h&&(f=!1)}return l=o(l),i.add("number"==typeof l?new n(l):new r(l,!1))}function F(e,r,n){var i,a=t[0],s=t[1];for(i=e.length-1;i>=0;i--)a=a.add(e[i].times(s)),s=s.times(r);return n?a.negate():a}function D(e){var t=e.value;return"number"==typeof t&&(t=[t]),1===t.length&&t[0]<=35?"0123456789abcdefghijklmnopqrstuvwxyz".charAt(t[0]):"<"+t+">"}function B(e,t){if(t=i(t),t.isZero()){if(e.isZero())return"0";throw new Error("Cannot convert nonzero numbers to base 0.")}if(t.equals(-1))return e.isZero()?"0":e.isNegative()?new Array(1-e).join("10"):"1"+new Array(+e).join("01");var r="";if(e.isNegative()&&t.isPositive()&&(r="-",e=e.abs()),t.equals(1))return e.isZero()?"0":r+new Array(+e+1).join(1);for(var n,a=[],s=e;s.isNegative()||s.compareAbs(t)>=0;){n=s.divmod(t),s=n.quotient;var o=n.remainder;o.isNegative()&&(o=t.minus(o).abs(),s=s.next()),a.push(D(o))}return a.push(D(s)),r+a.reverse().join("")}function j(e){if(a(+e)){var t=+e;if(t===c(t))return new n(t);throw"Invalid integer: "+e}var i="-"===e[0];i&&(e=e.slice(1));var s=e.split(/e/i);if(s.length>2)throw new Error("Invalid integer: "+s.join("e"));if(2===s.length){var o=s[1];if("+"===o[0]&&(o=o.slice(1)),(o=+o)!==c(o)||!a(o))throw new Error("Invalid integer: "+o+" is not a valid exponent.");var l=s[0],f=l.indexOf(".");if(f>=0&&(o-=l.length-f-1,l=l.slice(0,f)+l.slice(f+1)),o<0)throw new Error("Cannot include negative exponent part for integers");l+=new Array(o+1).join("0"),e=l}if(!/^([0-9][0-9]*)$/.test(e))throw new Error("Invalid integer: "+e);for(var p=[],h=e.length,m=z,v=h-m;h>0;)p.push(+e.slice(v,h)),v-=m,v<0&&(v=0),h-=m;return u(p),new r(p,i)}function V(e){if(a(e)){if(e!==c(e))throw new Error(e+" is not an integer.");return new n(e)}return j(e.toString())}function H(e){return"number"==typeof e?V(e):"string"==typeof e?j(e):e}var G=1e7,z=7,X=9007199254740992,Z=s(X),Q=Math.log(X);r.prototype=Object.create(t.prototype),n.prototype=Object.create(t.prototype),r.prototype.add=function(e){var t=H(e);if(this.sign!==t.sign)return this.subtract(t.negate());var n=this.value,i=t.value;return t.isSmall?new r(h(n,Math.abs(i)),this.sign):new r(p(n,i),this.sign)},r.prototype.plus=r.prototype.add,n.prototype.add=function(e){var t=H(e),i=this.value;if(i<0!==t.sign)return this.subtract(t.negate());var o=t.value;if(t.isSmall){if(a(i+o))return new n(i+o);o=s(Math.abs(o))}return new r(h(o,Math.abs(i)),i<0)},n.prototype.plus=n.prototype.add,r.prototype.subtract=function(e){var t=H(e);if(this.sign!==t.sign)return this.add(t.negate());var r=this.value,n=t.value;return t.isSmall?g(r,Math.abs(n),this.sign):v(r,n,this.sign)},r.prototype.minus=r.prototype.subtract,n.prototype.subtract=function(e){var t=H(e),r=this.value;if(r<0!==t.sign)return this.add(t.negate());var i=t.value;return t.isSmall?new n(r-i):g(i,Math.abs(r),r>=0)},n.prototype.minus=n.prototype.subtract,r.prototype.negate=function(){return new r(this.value,!this.sign)},n.prototype.negate=function(){var e=this.sign,t=new n(-this.value);return t.sign=!e,t},r.prototype.abs=function(){return new r(this.value,!1)},n.prototype.abs=function(){return new n(Math.abs(this.value))},r.prototype.multiply=function(e){var n,i=H(e),a=this.value,o=i.value,u=this.sign!==i.sign;if(i.isSmall){if(0===o)return t[0];if(1===o)return this;if(-1===o)return this.negate();if((n=Math.abs(o))<G)return new r(w(a,n),u);o=s(n)}return M(a.length,o.length)?new r(b(a,o),u):new r(d(a,o),u)},r.prototype.times=r.prototype.multiply,n.prototype._multiplyBySmall=function(e){return a(e.value*this.value)?new n(e.value*this.value):S(Math.abs(e.value),s(Math.abs(this.value)),this.sign!==e.sign)},r.prototype._multiplyBySmall=function(e){return 0===e.value?t[0]:1===e.value?this:-1===e.value?this.negate():S(Math.abs(e.value),this.value,this.sign!==e.sign)},n.prototype.multiply=function(e){return H(e)._multiplyBySmall(this)},n.prototype.times=n.prototype.multiply,r.prototype.square=function(){return new r(q(this.value),!1)},n.prototype.square=function(){var e=this.value*this.value;return a(e)?new n(e):new r(q(s(Math.abs(this.value))),!1)},r.prototype.divmod=function(e){var t=N(this,e);return{quotient:t[0],remainder:t[1]}},n.prototype.divmod=r.prototype.divmod,r.prototype.divide=function(e){return N(this,e)[0]},n.prototype.over=n.prototype.divide=r.prototype.over=r.prototype.divide,r.prototype.mod=function(e){return N(this,e)[1]},n.prototype.remainder=n.prototype.mod=r.prototype.remainder=r.prototype.mod,r.prototype.pow=function(e){var r,i,s,o=H(e),u=this.value,l=o.value;if(0===l)return t[1];if(0===u)return t[0];if(1===u)return t[1];if(-1===u)return o.isEven()?t[1]:t[-1];if(o.sign)return t[0];if(!o.isSmall)throw new Error("The exponent "+o.toString()+" is too large.");if(this.isSmall&&a(r=Math.pow(u,l)))return new n(c(r));for(i=this,s=t[1];;){if(!0&l&&(s=s.times(i),--l),0===l)break;l/=2,i=i.square()}return s},n.prototype.pow=r.prototype.pow,r.prototype.modPow=function(e,r){if(e=H(e),r=H(r),r.isZero())throw new Error("Cannot take modPow with modulus 0");for(var n=t[1],i=this.mod(r);e.isPositive();){if(i.isZero())return t[0];e.isOdd()&&(n=n.multiply(i).mod(r)),e=e.divide(2),i=i.square().mod(r)}return n},n.prototype.modPow=r.prototype.modPow,r.prototype.compareAbs=function(e){var t=H(e),r=this.value,n=t.value;return t.isSmall?1:A(r,n)},n.prototype.compareAbs=function(e){var t=H(e),r=Math.abs(this.value),n=t.value;return t.isSmall?(n=Math.abs(n),r===n?0:r>n?1:-1):-1},r.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=H(e),r=this.value,n=t.value;return this.sign!==t.sign?t.sign?1:-1:t.isSmall?this.sign?-1:1:A(r,n)*(this.sign?-1:1)},r.prototype.compareTo=r.prototype.compare,n.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=H(e),r=this.value,n=t.value;return t.isSmall?r==n?0:r>n?1:-1:r<0!==t.sign?r<0?-1:1:r<0?1:-1},n.prototype.compareTo=n.prototype.compare,r.prototype.equals=function(e){return 0===this.compare(e)},n.prototype.eq=n.prototype.equals=r.prototype.eq=r.prototype.equals,r.prototype.notEquals=function(e){return 0!==this.compare(e)},n.prototype.neq=n.prototype.notEquals=r.prototype.neq=r.prototype.notEquals,r.prototype.greater=function(e){return this.compare(e)>0},n.prototype.gt=n.prototype.greater=r.prototype.gt=r.prototype.greater,r.prototype.lesser=function(e){return this.compare(e)<0},n.prototype.lt=n.prototype.lesser=r.prototype.lt=r.prototype.lesser,r.prototype.greaterOrEquals=function(e){return this.compare(e)>=0},n.prototype.geq=n.prototype.greaterOrEquals=r.prototype.geq=r.prototype.greaterOrEquals,r.prototype.lesserOrEquals=function(e){return this.compare(e)<=0},n.prototype.leq=n.prototype.lesserOrEquals=r.prototype.leq=r.prototype.lesserOrEquals,r.prototype.isEven=function(){return 0==(1&this.value[0])},n.prototype.isEven=function(){return 0==(1&this.value)},r.prototype.isOdd=function(){return 1==(1&this.value[0])},n.prototype.isOdd=function(){return 1==(1&this.value)},r.prototype.isPositive=function(){return!this.sign},n.prototype.isPositive=function(){return this.value>0},r.prototype.isNegative=function(){return this.sign},n.prototype.isNegative=function(){return this.value<0},r.prototype.isUnit=function(){return!1},n.prototype.isUnit=function(){return 1===Math.abs(this.value)},r.prototype.isZero=function(){return!1},n.prototype.isZero=function(){return 0===this.value},r.prototype.isDivisibleBy=function(e){var r=H(e),n=r.value;return 0!==n&&(1===n||(2===n?this.isEven():this.mod(r).equals(t[0])))},n.prototype.isDivisibleBy=r.prototype.isDivisibleBy,r.prototype.isPrime=function(){var e=C(this);if(void 0!==e)return e;for(var r,n,a,s,o=this.abs(),u=o.prev(),l=[2,3,5,7,11,13,17,19],c=u;c.isEven();)c=c.divide(2);for(a=0;a<l.length;a++)if(s=i(l[a]).modPow(c,o),!s.equals(t[1])&&!s.equals(u)){for(n=!0,r=c;n&&r.lesser(u);r=r.multiply(2))s=s.square().mod(o),s.equals(u)&&(n=!1);if(n)return!1}return!0},n.prototype.isPrime=r.prototype.isPrime,r.prototype.isProbablePrime=function(e){var t=C(this);if(void 0!==t)return t;for(var r=this.abs(),n=void 0===e?5:e,a=0;a<n;a++){if(!i.randBetween(2,r.minus(2)).modPow(r.prev(),r).isUnit())return!1}return!0},n.prototype.isProbablePrime=r.prototype.isProbablePrime,r.prototype.modInv=function(e){for(var t,r,n,a=i.zero,s=i.one,o=H(e),u=this.abs();!u.equals(i.zero);)t=o.divide(u),r=a,n=o,a=s,o=u,s=r.subtract(t.multiply(s)),u=n.subtract(t.multiply(u));if(!o.equals(1))throw new Error(this.toString()+" and "+e.toString()+" are not co-prime");return-1===a.compare(0)&&(a=a.add(e)),this.isNegative()?a.negate():a},n.prototype.modInv=r.prototype.modInv,r.prototype.next=function(){var e=this.value;return this.sign?g(e,1,this.sign):new r(h(e,1),this.sign)},n.prototype.next=function(){var e=this.value;return e+1<X?new n(e+1):new r(Z,!1)},r.prototype.prev=function(){var e=this.value;return this.sign?new r(h(e,1),!0):g(e,1,this.sign)},n.prototype.prev=function(){var e=this.value;return e-1>-X?new n(e-1):new r(Z,!0)};for(var Y=[1];Y[Y.length-1]<=G;)Y.push(2*Y[Y.length-1]);var W=Y.length,$=Y[W-1];r.prototype.shiftLeft=function(e){if(!R(e))throw new Error(String(e)+" is too large for shifting.");if((e=+e)<0)return this.shiftRight(-e);for(var t=this;e>=W;)t=t.multiply($),e-=W-1;return t.multiply(Y[e])},n.prototype.shiftLeft=r.prototype.shiftLeft,r.prototype.shiftRight=function(e){var t;if(!R(e))throw new Error(String(e)+" is too large for shifting.");if((e=+e)<0)return this.shiftLeft(-e);for(var r=this;e>=W;){if(r.isZero())return r;t=N(r,$),r=t[1].isNegative()?t[0].prev():t[0],e-=W-1}return t=N(r,Y[e]),t[1].isNegative()?t[0].prev():t[0]},n.prototype.shiftRight=r.prototype.shiftRight,r.prototype.not=function(){return this.negate().prev()},n.prototype.not=r.prototype.not,r.prototype.and=function(e){return P(this,e,function(e,t){return e&t})},n.prototype.and=r.prototype.and,r.prototype.or=function(e){return P(this,e,function(e,t){return e|t})},n.prototype.or=r.prototype.or,r.prototype.xor=function(e){return P(this,e,function(e,t){return e^t})},n.prototype.xor=r.prototype.xor;var J=1<<30,K=(G&-G)*(G&-G)|J,ee=function(e,t){for(var r,i=e.length,a=Math.abs(t),r=0;r<i;r++){var s=e[r].toLowerCase();if("-"!==s&&/[a-z0-9]/.test(s)){if(/[0-9]/.test(s)&&+s>=a){if("1"===s&&1===a)continue;throw new Error(s+" is not a valid digit in base "+t+".")}if(s.charCodeAt(0)-87>=a)throw new Error(s+" is not a valid digit in base "+t+".")}}if(2<=t&&t<=36&&i<=Q/Math.log(t)){var o=parseInt(e,t);if(isNaN(o))throw new Error(s+" is not a valid digit in base "+t+".");return new n(parseInt(e,t))}t=H(t);var u=[],l="-"===e[0];for(r=l?1:0;r<e.length;r++){var s=e[r].toLowerCase(),c=s.charCodeAt(0);if(48<=c&&c<=57)u.push(H(s));else if(97<=c&&c<=122)u.push(H(s.charCodeAt(0)-87));else{if("<"!==s)throw new Error(s+" is not a valid character");var f=r;do{r++}while(">"!==e[r]);u.push(H(e.slice(f+1,r)))}}return F(u,t,l)};r.prototype.toString=function(e){if(void 0===e&&(e=10),10!==e)return B(this,e);for(var t,r=this.value,n=r.length,i=String(r[--n]),a="0000000";--n>=0;)t=String(r[n]),i+=a.slice(t.length)+t;return(this.sign?"-":"")+i},n.prototype.toString=function(e){return void 0===e&&(e=10),10!=e?B(this,e):String(this.value)},r.prototype.toJSON=n.prototype.toJSON=function(){return this.toString()},r.prototype.valueOf=function(){return+this.toString()},r.prototype.toJSNumber=r.prototype.valueOf,n.prototype.valueOf=function(){return this.value},n.prototype.toJSNumber=n.prototype.valueOf;for(var te=0;te<1e3;te++)t[te]=new n(te),te>0&&(t[-te]=new n(-te));return t.one=t[1],t.zero=t[0],t.minusOne=t[-1],t.max=I,t.min=T,t.gcd=k,t.lcm=L,t.isInstance=function(e){return e instanceof r||e instanceof n},t.randBetween=O,t.fromArray=function(e,t,r){return F(e.map(H),H(t||10),r)},t}();return void 0!==e&&e.hasOwnProperty("exports")&&(e.exports=i),r=[],void 0!==(n=function(){return i}.apply(t,r))&&(e.exports=n),i}()});e.exports=i}).call(t,r(14)(e))},241:function(e,t,r){nerdamer=r(223),r(242),function(){"use strict";function e(e,t,r){if(n.Utils.isSymbol(e))this.parse(e);else if(isNaN(e))"string"==typeof e&&this.parse(i.parse(e));else{if(r=r||0,void 0===t)throw new Error("Polynomial expects a variable name when creating using order");this.coeffs=[],this.coeffs[r]=e,this.fill(e)}}function t(){this.factors={}}function r(e,t,r){this.terms=t||[],this.coeff=e,this.map=r,this.sum=new n.Frac(0),this.image=void 0}var n=nerdamer.getCore(),i=n.PARSER,a=n.groups.N,s=n.groups.P,o=n.groups.S,u=n.groups.EX,l=n.groups.FN,c=n.groups.PL,f=n.groups.CP,p=n.groups.CB,h=n.Utils.keys,m=n.Utils.variables,v=n.Utils.round,g=n.Frac,d=n.Utils.isInt,w=n.Symbol,y=n.Settings.CONST_HASH,b=n.Utils.importFunctions();e.fromArray=function(t,r){if(void 0===r)throw new Error("A variable name must be specified when creating polynomial from array");var n=new e;return n.coeffs=t,n.variable=r,n},e.fit=function(t,r,n,i,a,s){var o=new Array(a+1),u=n-r;o[0]=r,o[a]=t,u-=t*Math.pow(i,a);for(var l=a-1;l>0;l--){var c=Math.pow(i,l),f=u/c,p=Math.sign(f),h=p*Math.floor(Math.abs(f));u-=h*c,o[l]=h}if(0!==u)return null;for(var l=0;l<o.length;l++)o[l]=new g(o[l]);return e.fromArray(o,s)},e.prototype={parse:function(e,t){if(this.variable=m(e)[0],!e.isPoly())throw new Error("Polynomial Expected! Received "+n.Utils.text(e));if(t=t||[],e.power.absEquals(1)||(e=i.expand(e)),e.group===n.groups.N)t[0]=e.multiplier;else if(e.group===n.groups.S)t[e.power.toDecimal()]=e.multiplier;else for(var r in e.symbols){var s=e.symbols[r],o=s.power;if(n.Utils.isSymbol(o))throw new Error("power cannot be a Symbol");o=s.group===a?0:o.toDecimal(),s.symbols?this.parse(s,t):t[o]=s.multiplier}this.coeffs=t,this.fill()},fill:function(e){e=Number(e)||0;for(var t=this.coeffs.length,r=0;r<t;r++)void 0===this.coeffs[r]&&(this.coeffs[r]=new g(e));return this},trim:function(){for(var e=this.coeffs.length;e--;){var t=this.coeffs[e],r=t.equals(0);if(!t||!r)break;if(0===e)break;this.coeffs.pop()}return this},modP:function(e){for(var t=this.coeffs.length,r=0;r<t;r++){var n=this.coeffs[r];if(n<0){for(var i,a=r;a<t;a++)if(this.coeffs[a]>0){i=this.coeffs[a];break}if(i){for(a;a>r;a--)this.coeffs[a]=this.coeffs[a].subtract(new g(1)),this.coeffs[a-1]=this.coeffs[a-1].add(new g(e));n=this.coeffs[r]}}var s=n.mod(e),o=n.subtract(s).divide(e);if(!o.equals(0)){var u=r+1,l=this.coeffs[u]||new g(0);l=l.add(o),this.coeffs[u]=new g(l),this.coeffs[r]=new g(s)}}return this},add:function(e){for(var t=Math.max(this.coeffs.length,e.coeffs.length),r=0;r<t;r++){var n=this.coeffs[r]||new g(0),i=e.coeffs[r]||new g(0);this.coeffs[r]=n.add(i)}return this},subtract:function(e){for(var t=Math.max(this.coeffs.length,e.coeffs.length),r=0;r<t;r++){var n=this.coeffs[r]||new g(0),i=e.coeffs[r]||new g(0);this.coeffs[r]=n.subtract(i)}return this},divide:function(t){for(var r=this.variable,i=n.Utils.arrayClone(this.coeffs),a=n.Utils.arrayClone(t.coeffs),s=i.length,o=a.length-1,u=[],l=0;l<s;l++){var c=s-(l+1),f=c-o,p=i[c].divide(a[o]);if(f<0)break;u[f]=p;for(var h=0;h<=o;h++)i[h+f]=i[h+f].subtract(a[h].multiply(p))}var m=e.fromArray(i,r||"x").trim();return[e.fromArray(u,r||"x"),m]},multiply:function(e){for(var t=this.coeffs.length,r=e.coeffs.length,n=[],i=0;i<t;i++)for(var a=this.coeffs[i],s=0;s<r;s++){var o=i+s,u=e.coeffs[s],l=n[o]||new g(0);n[o]=l.add(a.multiply(u))}return this.coeffs=n,this},isZero:function(){for(var e=this.coeffs.length,t=0;t<e;t++){if(!this.coeffs[t].equals(0))return!1}return!0},sub:function(e){for(var t=new g(0),r=this.coeffs.length,n=0;n<r;n++){var i=this.coeffs[n];i.equals(0)||(t=t.add(i.multiply(new g(Math.pow(e,n)))))}return t},clone:function(){var t=new e;return t.coeffs=this.coeffs,t.variable=this.variable,t},deg:function(){return this.trim(),this.coeffs.length-1},lc:function(){return this.coeffs[this.deg()].clone()},monic:function(){for(var e=this.lc(),t=this.coeffs.length,r=0;r<t;r++)this.coeffs[r]=this.coeffs[r].divide(e);return this},gcd:function(e){var t,r=this.coeffs.length-1,i=e.coeffs.length-1;if(r<i)return e.gcd(this);for(var a=this;!e.isZero();){var s=e.clone();a=a.clone(),t=a.divide(s),e=t[1],a=s}var o=n.Math2.QGCD.apply(null,a.coeffs);if(!o.equals(1))for(var u=a.coeffs.length,l=0;l<u;l++)a.coeffs[l]=a.coeffs[l].divide(o);return a},diff:function(){for(var e=[],t=this.coeffs.length,r=1;r<t;r++)e.push(this.coeffs[r].multiply(new g(r)));return this.coeffs=e,this},integrate:function(){for(var e=[0],t=this.coeffs.length,r=0;r<t;r++){var n=new g(r+1);e[n]=this.coeffs[r].divide(n)}return this.coeffs=e,this},gcf:function(t){for(var r=[],i=0;i<this.coeffs.length;i++){var a=this.coeffs[i];a.equals(0)||-1!==r.indexOf(a)||r.push(a)}var s=[n.Math2.QGCD.apply(void 0,r),function(e){for(var t=0;t<e.length;t++)if(!e[t].equals(0))return t}(this.coeffs)].toDecimal();if(t){var o=[];o[s[1]-1]=s[0],s=e.fromArray(o,this.variable).fill()}return s},quad:function(e){var t=[];if(this.coeffs.length>3)throw new Error("Cannot calculate quadratic order of "+(this.coeffs.length-1));if(0===this.coeffs.length)throw new Error("Polynomial array has no terms");var r=this.coeffs[2]||0,n=this.coeffs[1]||0,i=this.coeffs[0],a=n*n-4*r*i;return a<0&&!e?t:(t[0]=(-n+Math.sqrt(a))/(2*r),t[1]=(-n-Math.sqrt(a))/(2*r),t)},squareFree:function(){for(var t=this.clone(),r=1,n=t.clone().diff(),i=t.clone().gcd(n),a=t.divide(i)[0],s=e.fromArray([new g(1)],t.variable);!i.equalsNumber(1);){var o=a.gcd(i),u=a.divide(o)[0];if(!u.equalsNumber(1)&&r>1){for(var l=u.clone(),c=1;c<r;c++)l.multiply(u.clone());u=l}s=s.multiply(u),r++,a=o,i=i.divide(o)[0]}return[s,a,r]},toSymbol:function(){var e=this.coeffs.length,t=this.variable;if(0===e)return new n.Symbol(0);for(var r=e-1,a="",s=0;s<e;s++){var o=s===r?"":"+",u=this.coeffs[s];u.equals(0)||(a+=u+"*"+t+"^"+s+o)}return i.parse(a)},equalsNumber:function(e){return this.trim(),1===this.coeffs.length&&this.coeffs[0].toDecimal()===String(e)},toString:function(){return this.toSymbol().toString()}},w.prototype.coeffs=function(e,t){t&&!this.isPoly(!0)&&i.error("Polynomial expected when requesting coefficients with order"),e=e||[];var r=this.clone().distributeMultiplier();if(r.isComposite())for(var n in r.symbols){var a=r.symbols[n];a.isComposite()?a.clone().distributeMultiplier().coeffs(e,t):t?e[a.isConstant()?0:a.power.toDecimal()]=a.multiplier:e.push(a.multiplier)}else t?e[r.isConstant()?0:r.power.toDecimal()]=r.multiplier:e.push(r.multiplier);if(t)for(var s=0;s<e.length;s++)void 0===e[s]&&(e[s]=new g(0));return e},w.prototype.tBase=function(e){if(void 0===e)throw new Error("Symbol.tBase requires a map object!");for(var t=[],n=this.collectSymbols(null,null,null,!0),i=n.length,a=0;a<i;a++){var s=n[a],o=s.group,u=new r(s.multiplier,[],e);if(o===p)for(var l in s.symbols){var c=s.symbols[l];u.terms[e[l]]=c.power}else u.terms[e[s.value]]=s.power;t.push(u.fill()),u.updateCount()}return t},w.prototype.altVar=function(e){var t=this.multiplier.toString(),r=this.power.toString();return("1"===t?"":t+"*")+e+("1"===r?"":"^"+r)},w.prototype.sameVars=function(e){if(!this.symbols&&this.group!==e.group)return!1;for(var t in this.symbols){var r=this.symbols[t],n=e.symbols[t];if(!n)return!1;if(r.value!==n.value)return!1}return!0},w.prototype.groupTerms=function(e){e=String(e);var t,r,a,s=[];return this.each(function(o){if(o.group===c){a=o.groupTerms(e);for(var u=0;u<a.length;u++){var l=a[u];l&&(s[u]=l)}}else t=n.Utils.decompose_fn(o,e,!0),r=t.x.value===e?Number(t.x.power):0,s[r]=i.add(s[r]||new w(0),t.a)}),s},w.prototype.collectFactors=function(){var e=[];return this.group===p?this.each(function(t){e.push(t.clone())}):e.push(this.clone()),e},t.prototype.add=function(e){if(e.equals(0))return this;if(e.group===p){var t=this;e.multiplier.equals(1)||t.add(new w(e.multiplier)),e.each(function(e){t.add(e)})}else{this.preAdd&&(e=this.preAdd(e)),this.pFactor&&(e=i.pow(e,new w(this.pFactor)));var r=e.isConstant();if(r&&e.equals(1))return this;var n=r?e.value:e.text();n in this.factors?this.factors[n]=i.multiply(this.factors[n],e):this.factors[n]=e}return this},t.prototype.toSymbol=function(){var e=new w(1);for(var t in this.factors){var r=this.factors[t],a=(r.group,r.power.equals(1)?i.symfunction(n.PARENTHESIS,[this.factors[t]]):this.factors[t]);e=i.multiply(e,a)}return""===e.fname&&(e=w.unwrapPARENS(e)),e},t.prototype.merge=function(e){for(var t in e)t in this.factors?this.factors[t]=i.multiply(this.factors[t],e[t]):this.factors[t]=e[t];return this},t.prototype.each=function(e){for(var t in this.factors){var r=this.factors[t];r.fname===n.PARENTHESIS&&r.isLinear()&&(r=r.args[0]),e.call(this,r,t)}return this},t.prototype.count=function(){return h(this.factors).length},t.prototype.clean=function(){try{var e=n.Settings.CONST_HASH;this.factors[e].lessThan(0)&&(this.factors[e].equals(-1)?delete this.factors[e]:this.factors[e].negate(),this.each(function(e){e.negate()}))}catch(e){}},t.prototype.toString=function(){return this.toSymbol().toString()},r.prototype.updateCount=function(){this.count=this.count||0;for(var e=0;e<this.terms.length;e++)this.terms[e].equals(0)||this.count++;return this},r.prototype.getVars=function(){for(var e=[],t=0;t<this.terms.length;t++){var r=this.terms[t];this.getRevMap();r.equals(0)||e.push(this.rev_map[t])}return e.join(" ")},r.prototype.len=function(){return void 0===this.count&&this.updateCount(),this.count},r.prototype.toSymbol=function(e){e=e||this.getRevMap();for(var t=new w(this.coeff),r=0;r<this.terms.length;r++){var n=e[r],a=this.terms[r];if(!a.equals(0)&&n!==y){var s=new w(n);s.power=a,t=i.multiply(t,s)}}return t},r.prototype.getRevMap=function(){if(this.rev_map)return this.rev_map;var e={};for(var t in this.map)e[this.map[t]]=t;return this.rev_map=e,e},r.prototype.generateImage=function(){return this.image=this.terms.join(" "),this},r.prototype.getImg=function(){return this.image||this.generateImage(),this.image},r.prototype.fill=function(){for(var e=this.map.length,t=0;t<e;t++)void 0===this.terms[t]?this.terms[t]=new n.Frac(0):this.sum=this.sum.add(this.terms[t]);return this},r.prototype.divide=function(e){for(var t=this.coeff.divide(e.coeff),n=this.terms.length,i=new r(t,[],this.map),a=0;a<n;a++)i.terms[a]=this.terms[a].subtract(e.terms[a]),i.sum=i.sum.add(i.terms[a]);return i},r.prototype.multiply=function(e){for(var t=this.coeff.multiply(e.coeff),n=this.terms.length,i=new r(t,[],this.map),a=0;a<n;a++)i.terms[a]=this.terms[a].add(e.terms[a]),i.sum=i.sum.add(i.terms[a]);return i},r.prototype.isZero=function(){return this.coeff.equals(0)},r.prototype.toString=function(){return"{ coeff: "+this.coeff.toString()+", terms: ["+this.terms.join(",")+"]: sum: "+this.sum.toString()+", count: "+this.count+"}"},n.Utils.toMapObj=function(e){for(var t=0,r={},n=0;n<e.length;n++){var i=e[n];void 0===r[i]&&(r[i]=t,t++)}return r.length=t,r},n.Utils.filledArray=function(e,t,r){for(var n=[];t--;)n[t]=r?new r(e):e;return n},n.Utils.arrSum=function(e){for(var t=0,r=e.length,n=0;n<r;n++)t+=e[n];return t},n.Utils.haveIntersection=function(e,t){var r;return t.length>e.length&&(r=t,t=e,e=r),e.some(function(e){return t.indexOf(e)>-1})},n.Utils.subFunctions=function(e,t){t=t||{};var r=[];return e.each(function(e){if(e.group===l||e.previousGroup===l){var i=n.Utils.text(e,"hash"),a=t[i];if(a)r.push(e.altVar(a));else{var s=e.fname+h(t).length;t[i]=s,r.push(e.altVar(s))}}else e.group===p||e.group===c||e.group===f?r.push(n.Utils.subFunctions(e,t)):r.push(e.text())}),e.group===f||e.group===c?e.altVar(n.Utils.inBrackets(r.join("+"))):e.group===p?e.altVar(n.Utils.inBrackets(r.join("*"))):e.text()},n.Utils.getFunctionsSubs=function(e){var t={};for(var r in e)t[e[r]]=i.parse(r);return t};var M=n.Algebra={version:"1.4.5",init:void 0,proots:function(e,t){function r(e,r,n){function i(e,t,r,n,i,a){i[0]=a.b=n[0],i[1]=a.a=-t*a.b+n[1];for(var s=2;s<e;s++)i[s]=-(t*a.a+r*a.b)+n[s],a.b=a.a,a.a=i[s]}function a(e,t,r,n,a,s,o,u,l){var c=new Object,f=3;return c.b=c.a=0,i(t,o,u,s,l,c),a.c=c.a,a.d=c.b,Math.abs(a.c)<=100*e*Math.abs(s[t-1])&&Math.abs(a.d)<=100*e*Math.abs(s[t-2])?f:(a.h=u*n,Math.abs(a.d)>=Math.abs(a.c)?(f=2,a.e=r/a.d,a.f=a.c/a.d,a.g=o*n,a.a3=a.e*(a.g+r)+a.h*(n/a.d),a.a1=-r+a.f*n,a.a7=a.h+(a.f+o)*r):(f=1,a.e=r/a.c,a.f=a.d/a.c,a.g=a.e*o,a.a3=a.e*r+(a.g+a.h/a.c)*n,a.a1=-r*(a.d/a.c)+n,a.a7=a.g*a.d+a.h*a.f+r),f)}function s(e,t,r,n,i,a,s,o,u){var l;if(3!=r)if(l=1==r?i:n,Math.abs(a.a1)>10*e*Math.abs(l)){a.a7/=a.a1,a.a3/=a.a1,s[0]=u[0],s[1]=-u[0]*a.a7+u[1];for(var c=2;c<t;c++)s[c]=-u[c-1]*a.a7+o[c-2]*a.a3+u[c]}else{s[0]=0,s[1]=-u[0]*a.a7;for(var c=2;c<t;c++)s[c]=-u[c-1]*a.a7+o[c-2]*a.a3}else{s[1]=s[0]=0;for(var c=2;c<t;c++)s[c]=o[c-2]}}function o(e,t,r,n,i,a,s,o,u,l,c,f,p,h,m,v,g){var d,w,y,b,M,S,q,E,x;t.b=t.a=0,3!=e&&(2!=e?(d=r+p*s+f*l,w=o+(p+h*l)*u):(d=(r+c)*l+f,w=(l+p)*o+h*u),y=-m[v-1]/g[v],b=-(m[v-2]+y*g[v-1])/g[v],M=h*b*n,S=y*a,q=y*y*i,E=-(S+q)+M,0!=(x=-E+w+y*d)&&(t.a=-(p*(q+S)+h*(y*n+b*a))/x+p,t.b=h*(1+E/x)))}function u(e,t,r,n){var i,a,s;return n.sr=n.si=n.lr=n.li=0,0==e?void(n.sr=0!=t?-r/t:n.sr):0==r?void(n.lr=-t/e):(i=t/2,Math.abs(i)<Math.abs(r)?(s=r>=0?e:-e,s=-s+i*(i/Math.abs(r)),a=Math.sqrt(Math.abs(s))*Math.sqrt(Math.abs(r))):(s=-e/i*(r/i)+1,a=Math.sqrt(Math.abs(s))*Math.abs(i)),void(s>=0?(a=i>=0?-a:a,n.lr=(-i+a)/e,n.sr=0!=n.lr?r/n.lr/e:n.sr):(n.lr=n.sr=-i/e,n.si=Math.abs(a/e),n.li=-n.si)))}function l(e,t,r,n,l,c,f,p,h,m,v,g){var d,w,y,b,M,S,q,E,x,U,N,A,C=new Object,R=0,P=0;r.NZ=0,S=n,E=l;do{if(C.li=C.lr=C.si=C.sr=0,u(1,S,E,C),r.szr=C.sr,r.szi=C.si,r.lzr=C.lr,r.lzi=C.li,Math.abs(Math.abs(r.szr)-Math.abs(r.lzr))>.01*Math.abs(r.lzr))break;for(i(f,S,E,h,c,p),w=Math.abs(-r.szr*p.b+p.a)+Math.abs(r.szi*p.b),U=Math.sqrt(Math.abs(E)),d=2*Math.abs(c[0]),M=-r.szr*p.b,N=1;N<t;N++)d=d*U+Math.abs(c[N]);if(d=d*U+Math.abs(M+p.a),d=(9*d+2*Math.abs(M)-7*(Math.abs(p.a+M)+U*Math.abs(p.b)))*e,w<=20*d){r.NZ=2;break}if(++R>20)break;if(R>=2&&b<=.01&&w>=y&&!P){for(b=b<e?Math.sqrt(e):Math.sqrt(b),S-=S*b,E+=E*b,i(f,S,E,h,c,p),N=0;N<5;N++)A=a(e,t,p.a,p.b,v,g,S,E,m),s(e,t,A,p.a,p.b,v,g,m,c);P=1,R=0}y=w,A=a(e,t,p.a,p.b,v,g,S,E,m),s(e,t,A,p.a,p.b,v,g,m,c),A=a(e,t,p.a,p.b,v,g,S,E,m),o(A,p,p.a,v.a1,v.a3,v.a7,p.b,v.c,v.d,v.f,v.g,v.h,S,E,g,t,h),q=p.a,x=p.b,0!=x&&(b=Math.abs((-E+x)/x),S=q,E=x)}while(0!=x)}function c(e,t,r,n,i,a,s,o,u){var l,c,f,p,h,m,v,g,d,w,y,b=n-1;for(t.NZ=y=d=0,v=r.a;;){for(m=i[0],s[0]=m,w=1;w<a;w++)s[w]=m=m*v+i[w];for(f=Math.abs(m),p=Math.abs(v),l=.5*Math.abs(s[0]),w=1;w<a;w++)l=l*p+Math.abs(s[w]);if(f<=20*e*(2*l-f)){t.NZ=1,t.szr=v,t.szi=0;break}if(++y>10)break;if(y>=2&&Math.abs(g)<=.001*Math.abs(-g+v)&&f>h){d=1,t.a=v;break}for(h=f,u[0]=c=o[0],w=1;w<n;w++)u[w]=c=c*v+o[w];if(Math.abs(c)>10*Math.abs(o[b])*e)for(g=-m/c,o[0]=s[0],w=1;w<n;w++)o[w]=g*u[w-1]+s[w];else for(o[0]=0,w=1;w<n;w++)o[w]=u[w-1];for(c=o[0],w=1;w<n;w++)c=c*v+o[w];g=Math.abs(c)>10*Math.abs(o[b])*e?-m/c:0,v+=g}return d}function f(e,t,r,n,u,f,p,h,m,v,g,d){var w,y,b,M,S,q,E,x,U,N,A,C,R,P,_,I,T,k,L,O,F,D,B,j,V,H=new Object,G=new Object,z=new Array(t),X=new Array(t),Z=1;for(d.NZ=0,M=b=.25,S=n,x=u,H.b=H.a=0,i(m,g,u,h,v,H),w=H.a,y=H.b,G.h=G.g=G.f=G.e=G.d=G.c=G.a7=G.a3=G.a1=0,B=a(e,p,w,y,G,f,g,u,z),O=0;O<r;O++){if(k=1,s(e,p,B,w,y,G,f,z,v),B=a(e,p,w,y,G,f,g,u,z),o(B,H,w,G.a1,G.a3,G.a7,y,G.c,G.d,G.f,G.g,G.h,g,u,f,p,h),_=H.a,T=I=H.b,N=0!=f[p-1]?-h[p]/f[p-1]:0,A=R=1,0!=O&&3!=B&&(R=0!=T?Math.abs((T-x)/T):R,A=0!=N?Math.abs((N-S)/N):A,P=R<E?R*E:1,C=A<q?A*q:1,j=P<M?1:0,(F=C<b?1:0)||j)){for(L=0;L<p;L++)X[L]=f[L];for(U=N,D=V=0;;){if(k&&0==(k=0)&&F&&(!j||C<P));else{if(l(e,p,d,_,I,v,m,H,h,z,G,f),w=H.a,y=H.b,d.NZ>0)return;if(Z=V=1,M*=.25,D||!F)Z=0;else for(L=0;L<p;L++)f[L]=X[L]}if(0!=Z){if(H.a=U,Z=c(e,d,H,p,h,m,v,f,z),U=H.a,d.NZ>0)return;if(D=1,b*=.25,0!=Z){_=-(U+U),I=U*U;continue}}for(L=0;L<p;L++)f[L]=X[L];if(!j||V)break}i(m,g,u,h,v,H),w=H.a,y=H.b,B=a(e,p,w,y,G,f,g,u,z)}x=T,S=N,E=R,q=A}}var p=e.slice(0);if(e.unshift(n),n>100)throw new Error("This utility accepts polynomials of degree up to 100. ");var h=[],m={};for(m.Degree=n,S=0;S<n;S++)h.push(0);var g=h.slice(0);!function(e,t,r,n){var i,a,s,o,l,c,p,h,m,v,g,d,w,y,b,M,S,q,E,x,U,N,A,C,R=e.Degree,P=Math.LN2,_=e.Degree+1,I=new Array(_),T=new Array(_),k=new Array(_),L=new Array(_),O=new Object,F=new Object;d=1;do{a=d,d/=2,w=1+d}while(w>1);var D=Number.MIN_VALUE/a,B=Math.cos(1.6406094968746698),j=Math.sin(1.6406094968746698),V=Math.sqrt(.5),H=-V;for(F.NZ=E=0,F.szr=F.szi=F.lzr=F.lzi=0;0==t[R];)r[E]=n[E]=0,R--,E++;for(A=R+1;R>=1;){if(R<=2){R<2?(r[e.Degree-1]=-t[1]/t[0],n[e.Degree-1]=0):(O.li=O.lr=O.si=O.sr=0,u(t[0],t[1],t[2],O),r[e.Degree-2]=O.sr,n[e.Degree-2]=O.si,r[e.Degree-1]=O.lr,n[e.Degree-1]=O.li);break}for(p=0,h=Number.MAX_VALUE,G=0;G<A;G++)v=Math.abs(t[G]),v>p&&(p=v),0!=v&&v<h&&(h=v);if(((m=D/h)<=1&&p>=10||m>1&&Number.MAX_VALUE/m>=p)&&(m=0==m?Number.MIN_VALUE:m,U=Math.floor(Math.log(m)/P+.5),1!=(l=Math.pow(2,U))))for(G=0;G<A;G++)t[G]*=l;for(var G=0;G<A;G++)T[G]=Math.abs(t[G]);T[R]=-T[R],N=R-1,v=Math.exp((Math.log(-T[R])-Math.log(T[0]))/R),0!=T[N]&&(g=-T[R]/T[N],v=g<v?g:v),g=v;do{v=g,g=.1*v,c=T[0];for(var G=1;G<A;G++)c=c*g+T[G]}while(c>0);o=v;do{s=c=T[0];for(var G=1;G<R;G++)c=v*c+T[G],s=v*s+c;c=v*c+T[R],o=c/s,v-=o}while(Math.abs(o/v)>.005);i=v;for(var G=1;G<R;G++)I[G]=(R-G)*t[G]/R;for(I[0]=t[0],d=t[R],w=t[N],C=0==I[N]?1:0,x=0;x<5;x++)if(y=I[N],C){for(var G=0;G<N;G++)E=N-G,I[E]=I[E-1];I[0]=0,C=0==I[N]?1:0}else{M=-d/y;for(var G=0;G<N;G++)E=N-G,I[E]=M*I[E-1]+t[E];I[0]=t[0],C=Math.abs(I[N])<=Math.abs(w)*a*10?1:0}for(var G=0;G<R;G++)L[G]=I[G];for(x=1;x<=20;x++){if(q=-j*H+B*V,H=j*V+B*H,V=q,b=i*V,S=-2*b,f(a,_,20*x,b,i,I,R,t,A,k,S,F),0!=F.NZ){E=e.Degree-R,r[E]=F.szr,n[E]=F.szi,A-=F.NZ,R=A-1;for(var G=0;G<A;G++)t[G]=k[G];1!=F.NZ&&(r[E+1]=F.lzr,n[E+1]=F.lzi);break}for(var G=0;G<R;G++)I[G]=L[G]}if(x>20){e.Degree-=R;break}}}(m,p,g,h);var d=h.length;for(S=0;S<d;S++){var w=v(h[S],t+8),y=v(g[S],t);y=t-String(y).length>2?y:g[S];var b=w<0?"-":"";0===y&&(y=""),0===w&&(w=""),w=1===Math.abs(w)?b+"i":w?w+"*i":"";var M=y&&w?y+"+"+w:y+w;g[S]=M.replace(/\+\-/g,"-")}return g}t=t||7;var a=[],s=function(e,t,n){for(var i=r(e,t,n).concat(a),s=0;s<0;s++)i.unshift(0);return i};if(e instanceof w&&e.isPoly()){if(e.distributeMultiplier(),e.group===c){var u=n.Utils.arrayMin(h(e.symbols)),l=e.symbols[u].clone().toUnitMultiplier();e=i.expand(i.divide(e,l)),a.push(0)}if(e.group===n.groups.S)return[0];if(e.group===n.groups.PL)var f=h(e.symbols),p=n.Utils.arrayMin(f),e=n.PARSER.divide(e,n.PARSER.parse(e.value+"^"+p));for(var m=h(e.symbols).sort().pop(),g=e.group===n.groups.PL?e.symbols:e.symbols[m],d=g.group,f=d===o?[g.power.toDecimal()]:h(g.symbols),b=[],M=n.Utils.arrayMax(f),S=1;S<=M;S++){var q=0;-1!==f.indexOf(S+"")&&(q=d===o?g.multiplier:g.symbols[S].multiplier),b.unshift(q)}return b.push(e.symbols[y].multiplier),g.group===o&&(b[0]=g.multiplier),s(b,f,M)}if(n.Utils.isArray(e)){for(var E=e,b=[],f=[],x=0,S=0;S<E.length;S++){for(var U=E[S][0],N=E[S][1],A=N-x-1,C=0;C<A;C++)b.unshift(0);b.unshift(U),0!==N&&f.push(N),x=N}var M=Math.max.apply(void 0,f);return s(b,f,M)}throw new Error("Cannot calculate roots. Symbol must be a polynomial!")},roots:function(e){var t=M.proots(e).map(function(e){return i.parse(e)});return n.Vector.fromArray(t)},froot:function(e,t,r){return function(t){for(var i=r||n.Utils.build(n.Calculus.diff(e.clone())),a=e instanceof Function?e:n.Utils.build(e),s=!1,o=0;!s;){var u=t-a(t)/i(t),l=Math.abs(u)-Math.abs(t),c=Math.abs(l);t=u,c<1e-12?s=!0:o>1e4&&(t=null,s=!0),o++}return t}(Number(t))},quad:function(e,t,r){var n=function(e,t,r,n){return i.parse("-("+t+"+"+n+"*sqrt(("+t+")^2-4*("+e+")*("+r+")))/(2*"+e+")")};return[n(e,t,r,1),n(e,t,r,-1)]},sumProd:function(e,t){return M.quad(-t,e,-1).map(function(e){return e.invert()})},coeffs:function(t,r,n){r=String(r),t=i.expand(t),n=n||[],t.group===u&&t.contains(r,!0)&&i.error("Unable to get coefficients using expression "+t.toString());var a=m(t);if(a.length<=1&&a[0]===r)for(var s=new e(t).coeffs.map(function(e){return new w(e)}),o=0,l=s.length;o<l;o++){var c=s[o],h=n[o];h&&(c=i.add(h,c)),n[o]=c}else if(r||i.error("Polynomial contains more than one variable. Please specify which variable is to be used!"),-1===a.indexOf(r))n[0]=t;else{n=n||[];var c;if(t.group===p){var v=t.symbols[r];v||i.error("Expression is not a polynomial!");var g=Number(v.power);c=i.divide(t.clone(),v.clone()),(c.contains(r,!0)||g<0||!d(g))&&i.error("Expression is not a polynomial!");var h=n[g];h&&(c=i.add(h,c)),n[g]=c}else t.group===f&&t.each(function(e){M.coeffs(e.clone(),r,n)},!0)}for(var o=0,l=n.length;o<l;o++)void 0===n[o]&&(n[o]=new w(0));return n},polyPowers:function(e,t,r){r=r||[];var i=i=e.group;if(i===c&&t===e.value)r=r.concat(h(e.symbols));else if(i===f)for(var s in e.symbols){var u=e.symbols[s],i=u.group,l=u.value;if(i===o&&t===l)r.push(u.power);else if(i===c||i===f)r=M.polyPowers(u,t,r);else if(i===p&&u.contains(t)){var m=u.symbols[t];m&&r.push(m.power)}else i!==a&&t===l||r.push(0)}else i===p&&e.contains(t)&&r.push(n.Utils.decompose_fn(e,t,!0).x.power);return n.Utils.arrayUnique(r).sort()},Factor:{mix:function(e,t){for(var r=h(e),n=r.length,i=[],a=0;a<n;a++){for(var s=r[a],o=e[s],u=i.length,l=0;l<u;l++){var c=i[l]*s;i.push(c),t&&i.push(-c)}for(var l=1;l<=o;l++)i.push(Math.pow(s,l))}return i},common:function(e,t){try{if(e.group===f){for(var r=i.expand(e.clone(),!0).collectSymbols(null,null,function(e,t){return(t.length||1)-(e.length||1)}),a={},s=[],o=0;o<r.length;o++){var u=r[o];s.push(u.multiplier.clone()),u.each(function(e){var t=Number(e.power);if(isNaN(t))throw new Error("exiting");e.value in a?(t<a[e.value][0]&&(a[e.value][0]=t),a[e.value][1].push(e)):a[e.value]=[t,[e]]})}var l=new w(1);for(var c in a)a[c][1].length===r.length&&(l=i.multiply(l,i.pow(new w(c),new w(a[c][0]))));var p=n.Math2.QGCD.apply(null,s);if(!p.equals(1)){t.add(new w(p));for(var o=0;o<r.length;o++)r[o].multiplier=r[o].multiplier.divide(p)}if(!l.equals(1)){t.add(l),e=new w(0);for(var o=0;o<r.length;o++)e=i.add(e,i.divide(r[o],l.clone()))}}}catch(e){}return e},zeroes:function(e,t){var r=function(){throw new Error("Exiting")};try{var a,s,o,u,l;e=i.expand(e.clone()),l=e.toString(),a=m(e),o=new w(0);for(var c=[],p=[],h=0,v=a.length;h<a.length;h++){for(var y={},b=0;b<v;b++)h!==b&&(y[a[b]]=0);s=i.parse(l,y);var S=s.power;d(S)||r(),c.push(s),p.push(s.power)}if(n.Utils.allSame(p)){var q=e.length,E=c.length;2===E&&(u=new g(p[0]/(q-1))),3===E&&(u=new g(p[0]/Math.round((Math.sqrt(8*q-1)-3)/2)))}else u=n.Math2.QGCD.apply(null,p);d(u)||r();for(var h=0;h<c.length;h++){var x=c[h],U=x.power.clone().divide(u);x.multiplier=new g(Math.pow(x.multiplier,1/U)),x.power=u.clone(),o=i.add(o,x)}if(o.group!==f)return e;for(;;){var N=M.div(e.clone(),o.clone());if(!N[1].equals(0))break;if(e=N[0],t.add(o.clone()),e.equals(1))break}}catch(l){}return e},factor:function(e,r){if(e.group===f){var a=new w(0);e.each(function(e){(e.group===f&&e.power.greaterThan(1)||e.group===p)&&(e=i.expand(e)),a=i.add(a,e)}),a.power=e.power,e=a}e.group===l&&"sqrt"!==e.fname&&(e=n.Utils.evaluate(e));try{if(e.group===p){r=r||new t;var s=!0;return r.add(new w(e.multiplier)),e.each(function(e){e.group!==o&&(s=!1);var t=M.Factor.factor(e.clone());r.add(t)}),s?e:r.toSymbol()}if(e.group===o)return e;if(e.isConstant())return e.equals(1)?e.clone():n.Math2.factor(e);var u=e.power.clone();if(d(u)){e.toLinear(),r=r||new t;var c={};e=i.parse(n.Utils.subFunctions(e,c)),h(c).length>0&&(r.preAdd=function(e){return i.parse(e,n.Utils.getFunctionsSubs(c))}),e.isLinear()||(r.pFactor=e.power.toString(),e.toLinear());var v=m(e);if(v.length>1){var s=!0,g=!0;if(e.each(function(e){e.group!==o&&(s=!1),e.multiplier.equals(1)||(g=!1)}),s&&g)return i.pow(e,i.parse(u))}if(e=M.Factor.coeffFactor(e,r),e=M.Factor.powerFactor(e,r),1===v.length){e=M.Factor.squareFree(e,r);var y=new t;e=M.Factor.trialAndError(e,y);for(var b in y.factors)r.add(i.pow(y.factors[b],i.parse(u)))}else e=M.Factor.mfactor(e,r);return e=i.parse(e,n.Utils.getFunctionsSubs(c)),r.add(i.pow(e,i.parse(u))),r.clean(),r.toSymbol()}return e}catch(t){return e}},reduce:function(e,t){if(e.group===f&&2===e.length){var r=e.collectSymbols().sort(function(e,t){return t.multiplier-e.multiplier});if(r[0].power.equals(r[1].power)){var n=i.parse(r[0].power),a=r[0].clone().toLinear(),s=r[1].clone().toLinear();t.add(i.add(a.clone(),s.clone())),s.negate();for(var o=Number(n),u=new w(0),l=1;l<=o;l++){var c=i.pow(a.clone(),i.subtract(n.clone(),new w(l))),p=i.pow(s.clone(),i.subtract(new w(l),new w(1)));u=i.add(u,i.multiply(c,p))}return u}}return e},squareFree:function(t,r){if(t.isConstant()||t.group===o)return t;var n=new e(t),i=n.squareFree(),a=i[2];if(1!==a){var s=i[1].toSymbol();return s.power=s.power.multiply(new g(a)),r.add(M.Factor.factor(s)),M.Factor.squareFree(i[0].toSymbol(),r)}return t},powerFactor:function(e,t){if(e.group!==c)return e;var r=n.Utils.arrayMin(h(e.symbols)),a=new w(0),s=i.parse(e.value+"^"+r);return e.each(function(e){e=i.divide(e,s.clone()),a=i.add(a,e)}),t.add(s),a},coeffFactor:function(e,t){if(e.isComposite()){var r=n.Math2.QGCD.apply(null,e.coeffs());r.equals(1)||e.each(function(e){e.isComposite()?e.each(function(e){e.multiplier=e.multiplier.divide(r)}):e.multiplier=e.multiplier.divide(r)}),e.updateHash(),t&&t.add(new w(r))}return e},trialAndError:function(t,r){if(t.isConstant()||t.group===o)return t;for(var i=new e(t),a=i.coeffs[0],s=n.Math2.ifactor(a),u=M.proots(t),l=0;l<u.length;l++){var c=u[l],f=1;if(!isNaN(c)){for(var p in s){var h=n.Utils.round(Math.log(p)/Math.log(Math.abs(c)),8);if(d(h)){c=p,f=h;break}}var m=new g(c),v=[new g(m.num).negate()];v[f]=new g(m.den);var w=e.fromArray(v,i.variable).fill(),y=i.divide(w);y[1].equalsNumber(0)&&(i=y[0],r.add(w.toSymbol()))}}return i.equalsNumber(1)||(i=M.Factor.search(i,r)),i.toSymbol()},search:function(t,r,i){i=i||10;var a=t.variable,s=function(n,s,o,u){var l=e.fit(n,s,o,i,u,a);if(l&&l.coeffs.length>1){var c=t.divide(l);if(c[1].equalsNumber(0))return r.add(l.toSymbol()),[c[0],l]}return null},o=t.coeffs[0],u=n.Math2.ifactor(o),l=t.lc(),c=n.Math2.ifactor(l),f=t.sub(i),p=M.Factor.mix(n.Math2.ifactor(f),f<0),h=Math.ceil(t.coeffs.length/2),m=l.lessThan(0),v=o.lessThan(0);for(c[1]=1,u[1]=1;h--;)for(var g in c)for(var d in u)for(var w=0;w<p.length;w++){var y=s(g,d,p[w],h);if(y)return t=y[0],n.Utils.isPrime(t.sub(i))||(t=M.Factor.search(t,r)),t;!y&&m?y=s(-g,d,p[w],h):!y&&v?y=s(g,-d,p[w],h):!y&&m&&v&&(y=s(-g,-d,p[w],h))}return t},mSqfrFactor:function(e,t){if(e.group!==l)for(var r=m(e).reverse(),i=0;i<r.length;i++)do{if(r[i]!==e.value){var a=M.Factor.coeffFactor(n.Calculus.diff(e,r[i]));if(a.equals(0))break;var s=M.div(e,a.clone()),o=s[1].equals(0);if(s[0].isConstant()){t.add(s[0]);break}o&&(t.add(s[0]),e=a)}else t.add(e),e=new w(1)}while(o);return e},sqdiff:function(e,t){try{var r=function(e){return n.Utils.block("POSITIVE_MULTIPLIERS",function(){return w.unwrapPARENS(b.sqrt(b.abs(e)))},!0)},a=n.Utils.separate(e.clone()),s=[];for(var u in a)"constants"!==u&&s.push(a[u]);if(s.sort(function(e,t){return t.power-e.power}),2===s.length){var l,c;if(l=s.pop(),c=s.pop(),l.isComposite()&&c.power.equals(2)){c=r(c);var f=M.Factor.factor(i.add(l,a.constants));f.power.equals(2)&&(f.toLinear(),t.add(i.subtract(f.clone(),c.clone())),t.add(i.add(f,c)),e=new w(1))}else if(l=l.powSimp(),c=c.powSimp(),(l.group===o||""===l.fname)&&l.power.equals(2)&&(c.group===o||""===c.fname)&&c.power.equals(2)){if(l.multiplier.lessThan(0)){var p=c;c=l,l=p}l.multiplier.greaterThan(0)&&(l=r(l),c=r(c)),t.add(i.subtract(l.clone(),c.clone())),t.add(i.add(l,c)),e=new w(1)}}}catch(e){}return e},mfactor:function(e,r){if(e.group===l)if("sqrt"===e.fname){var a=new t,s=M.Factor.common(e.args[0].clone(),a);s=M.Factor.coeffFactor(s,a),e=i.symfunction("sqrt",[s]),a.each(function(t){e=i.multiply(e,i.parse(n.Utils.format("sqrt({0})",t)))})}else r.add(e);else{e=M.Factor.mSqfrFactor(e,r);for(var o=m(e),u=e.collectSymbols().map(function(e){return w.unwrapSQRT(e)}),c={},f={},p=o.length,h=u.length,v=0;v<p;v++){var g=o[v];c[g]=new w(0);for(var y=0;y<h;y++){var b=u[y];if(b.contains(g)){var S=b.value===g?b.power.toDecimal():b.symbols[g].power.toDecimal();(!f[g]||S<f[g])&&(f[g]=S),c[g]=i.add(c[g],b.clone())}}}for(var q in c){var E=i.parse(q+"^"+f[q]),x=i.divide(c[q],E),U=i.expand(x);if(U.equals(1))break;var N=M.div(e.clone(),U);if(N[0].equals(0))break;var A=d(U)&&U.lessThan(0);if(N[1].equals(0)&&!A){var C=M.div(e.clone(),N[0].clone()),E=C[0];if(e=C[1],E.equals(-1))return e;var R=N[0];if(e.equals(R)){var P=M.Factor.reduce(R,r);if(!e.equals(P))return M.Factor.mfactor(P,r)}else r.add(R);return E.isConstant("all")?(r.add(E),E):M.Factor.mfactor(E,r)}}}return e=M.Factor.sqdiff(e,r),e=M.Factor.zeroes(e,r)}},allLinear:function(e){for(var t=e.length,r=0;r<t;r++)if(!M.isLinear(e[r]))return!1;return!0},isLinear:function(e){var t=!1,r=e.group;if(r===c||r===f){t=!0;for(var n in e.symbols){var i=e.symbols[n],s=i.group;if(s===l||s===u||s===p)t=!1;else if(s===c||s===f)t=M.isLinear(i);else if(i.group!==a&&"1"!==i.power.toString()){t=!1;break}}}else r===o&&1===e.power&&(t=!0);return t},gcd:function(){var e;if(e=1===arguments.length&&arguments[0]instanceof n.Vector?arguments[0].elements:n.Utils.arguments2Array(arguments),0==e.length)return new w(1);if(1==e.length)return e[0];for(var t=[],r=!1,a=0;a<e.length;a++)if(e[a].group===l&&"gcd"===e[a].fname)e=e.concat(arguments[a].args),e.splice(a,1);else{var s=m(e[a]);if(n.Utils.haveIntersection(s,t)){r=!0;break}t=t.concat(s)}if(r||0===t.length){if(e.every(function(e){return e.getDenom().equals(1)})){for(var o=e[0],a=1;a<e.length;a++)o=M.gcd_(e[a],o);return o}return i.divide(M.gcd.apply(null,e.map(function(e){return e.getNum()})),M.lcm.apply(null,e.map(function(e){return e.getDenom()})))}return i.symfunction("gcd",e)},gcd_:function(t,r){if(t.group!==l&&t.group!==s||(t=n.Utils.block("PARSE2NUMBER",function(){return i.parse(t)})),r.group===l&&(r=n.Utils.block("PARSE2NUMBER",function(){return i.parse(r)})),t.isConstant()&&r.isConstant())return new w(n.Math2.QGCD(new g(+t),new g(+r)));var a=i.multiply(t.getDenom()||new w(1),r.getDenom()||new w(1)).invert();if(t=i.multiply(t.clone(),a.clone()),r=i.multiply(r.clone(),a.clone()),t=i.expand(t),r=i.expand(r),t.group===p||r.group===p){var o=i.divide(t.clone(),r.clone()),c=i.multiply(r.clone(),o.getDenom().invert());if(!c.equals(1))return c}if(t.group===u||r.group===u){var f=new w(n.Math2.GCD(t.multiplier,r.multiplier)),h=M.gcd_(t.value===y?new w(1):i.parse(t.value),r.value===y?new w(1):i.parse(r.value)),v=M.gcd_(i.parse(t.power),i.parse(r.power));return i.multiply(f,i.pow(h,v))}if(t.length<r.length){var c=t;t=r,r=c}var d=m(t),b=m(r);if(d.length===b.length&&1===d.length&&d[0]===b[0]||1===d.length&&0===b.length||0===d.length&&1===b.length)return t=new e(t),r=new e(r),i.divide(t.gcd(r).toSymbol(),a);for(var S;!r.equals(0);){var c=r.clone();if(t=t.clone(),S=M.div(t,c),r=S[1],S[0].equals(0))return i.divide(new w(n.Math2.QGCD(t.multiplier,r.multiplier)),a);t=c}var q=[];t.each(function(e){q.push(e.multiplier)});var E=n.Math2.QGCD.apply(void 0,q);return E.equals(1)||t.each(function(e){e.multiplier=e.multiplier.divide(E)}),!t.equals(1)||t.isConstant()||r.isConstant()?i.divide(t,a):i.divide(i.symfunction("gcd",arguments),a)},lcm:function(){var e;1===arguments.length?arguments[0]instanceof n.Vector?e=arguments[0].elements:i.error("lcm expects either 1 vector or 2 or more arguments"):e=n.Utils.arguments2Array(arguments);var t=e.reduce(function(e,t){return i.multiply(e,t.clone())},new w(1)),r=function(e,t){var r,n,i,a=[],s=Math.pow(2,e.length);for(n=t;n<s;n++){r=[],i=e.length-1;do{0!=(n&1<<i)&&r.push(e[i])}while(i--);r.length==t&&a.push(r)}return a}(arguments,arguments.length-1).map(function(e){return e.reduce(function(e,t){return i.multiply(e,t.clone())},new w(1))});if(e.every(function(e){return n.Utils.isVariableSymbol(e)}))var a=i.symfunction("gcd",n.Utils.arrayUnique(r));else var a=M.gcd.apply(null,r);return i.divide(t,a)},divide:function(e,t){var r,a,s,o;return s=n.Algebra.Factor.factor(e.clone()),o=s.getDenom(),o.isConstant("all")?o=new w(1):e=i.expand(w.unwrapPARENS(i.multiply(s,o.clone()))),r=M.div(e,t),a=i.divide(r[1],t),i.divide(i.add(r[0],a),o)},div:function(t,a){if(a.isConstant())return t.each(function(e){e.multiplier=e.multiplier.divide(a.multiplier)}),[t,new w(0)];if(t.group===o&&a.group===f){var s=t.value,u=n.Utils.decompose_fn(a.clone(),s,!0);if(t.isLinear()&&u.x&&u.x.isLinear()&&a.isLinear()){var l=w.create(t.multiplier);return[i.divide(l.clone(),u.a.clone()),i.divide(i.multiply(l,u.b),u.a).negate()]}}if(t.group===o&&a.group===o){var c=i.divide(t.clone(),a.clone());return c.isConstant()?[c,new w(0)]:[new w(0),t.clone()]}var p=t.hasFunc(),h=a.hasFunc(),v=!1;if(p||h){v=!0;var d={},t=i.parse(n.Utils.subFunctions(t,d)),a=i.parse(n.Utils.subFunctions(a,d)),b=n.Utils.getFunctionsSubs(d)}var M,S,q=n.Utils.arrayUnique(m(t).concat(m(a)));if(1===q.length){var E=new e(t).divide(new e(a));M=E[0].toSymbol(),S=E[1].toSymbol()}else{q.push(y);var x=function(e){for(var t=new w(0),r=0;r<e.length;r++){var n=e[r].toSymbol();t=i.add(t,n)}return t},U=function(e,t){var r,n=Math.max.apply(null,e.terms),i=0;if(!t)for(var a=0;a<e.terms.length;a++)if(e.terms[a].equals(n)&&(r=a,i++),i>1)return;if(t)for(a=0;a<e.terms.length;a++)if(e.terms[a].equals(n)){r=a;break}return[n,r,e]},N=function(e,t){t=t||0;var r=e[t],n=e.length;if(r){for(var i=U(r),a=t+1;a<n;a++){var s=e[a],o=r.sum.equals(s.sum);if(!o&&i)break;if(o){for(var u,l,c,f,p=r.terms.length,h=0;h<p;h++){var m=r.terms[h],v=s.terms[h];(void 0===u||m.greaterThan(u))&&(u=m,c=h),(void 0===l||v.greaterThan(l))&&(l=v,f=h)}var g=u.subtract(s.terms[c]),d=l.subtract(r.terms[f]);if(d>g){i=[l,f,s];break}if(g>d){i=[u,c,r];break}}else if(i=U(s))break;i=U(s)}if(!i)return U(e[0],!0);for(var w,y,a=0;a<_.length;a++){var b=_[a].terms;if((y=i[1])===b.length-1)return;if(w=b[y],!w.equals(0))break}return w.equals(0)?N(e,++t):i}},A=n.Utils.toMapObj(q),C=function(e,t){return t.sum.subtract(e.sum)},R=function(e,t){if(!e||!t)return!1;for(var r=0;r<e.terms.length;r++)if(e.terms[r].lessThan(t.terms[r]))return!1;return!0},P=t.tBase(A).sort(C),_=a.tBase(A).sort(C),I=R(P[0],_[0])&&P[0].count>_[0].count?_:P,T=N(I),k=[];if(T){var L=T[1],O=function(e,t){var r=e.len(),n=t.len(),i=t.terms[L],a=e.terms[L];return n>r&&i.greaterThan(a)?n-r:i.subtract(a)};L=function(e,t,r){return r}(0,0,L),P.sort(O),_.sort(O);var F=_[0],D=P[0],B=new r(new g(1),[],D.map);if(F.sum.greaterThan(D.sum)&&D.len()>1)for(var j=0;j<D.terms.length;j++){var V=F.terms[j].subtract(D.terms[j]);if(V.equals(0))B.terms[j]=new g(0);else{var H=V.add(new g(1));B.terms[j]=V;for(var G=0;G<P.length;G++)P[G].terms[j]=P[G].terms[j].add(H)}}for(var z=R(P[0],_[0]);z&&function(e,t){return!e[0].sum.equals(t[0].sum)||e.length>=t.length}(P,_);){var E=P[0].divide(_[0]);k.push(E),P.shift();for(var j=1;j<_.length;j++){var X=_[j].multiply(E).generateImage(),Z=P.length;0===Z&&(X.coeff=X.coeff.neg(),P.push(X),P.sort(O));for(var G=0;G<Z;G++){var Q=P[G];if(Q.getImg()===X.getImg()){Q.coeff=Q.coeff.subtract(X.coeff),Q.coeff.equals(0)&&(n.Utils.remove(P,G),G--);break}G===Z-1&&(X.coeff=X.coeff.neg(),P.push(X),P.sort(O))}}if(!(z=R(P[0],_[0]))&&P.length>=_.length)for(var j=1;j<P.length;j++)if(z=R(P[j],_[0])){P.unshift(n.Utils.remove(P,j));break}}}M=x(k),S=x(P),void 0!==B&&(B=B.toSymbol(),M=i.divide(M,B.clone()),S=i.divide(S,B))}return v&&(M=i.parse(M.text(),b),S=i.parse(S.text(),b)),[M,S]},line:function(e,t,r){n.Utils.isArray(e)&&(e=n.Utils.convertToVector(e)),n.Utils.isArray(t)&&(t=n.Utils.convertToVector(t)),r=i.parse(r||"x"),n.Utils.isVector(e)&&n.Utils.isVector(t)||i.error('Line expects a vector! Received "'+e+'" & "'+t+'"');var a=i.subtract(t.e(1).clone(),e.e(1).clone()),s=i.subtract(t.e(2).clone(),e.e(2).clone()),o=i.divide(s,a),u=i.multiply(r,o.clone()),l=i.multiply(e.e(1).clone(),o);return i.add(i.subtract(u,l),e.e(2).clone())},PartFrac:{createTemplate:function(e,t,r,n){e=M.Factor.factor(e),e.each(function(t,r){if(t.group===l&&""===t.fname&&t.args[0].group===o){var n=t.args[0];this.symbols?(delete this.symbols[r],this.symbols[n.value]=n):e=t.args[0]}});var a,s,u,c,f,p,h;a=t.collectFactors(),s=[],p=[],h=new w(1);for(var m=0;m<a.length;m++){var v=w.unwrapPARENS(a[m]);if(v.power.greaterThan(1)){c=Number(v.power),u=v.clone().toLinear(),f=Number(M.degree(u,n));for(var g=0;g<c;g++){var d=i.pow(u.clone(),new w(g+1));r.push(d.clone());var y=i.divide(e.clone(),d.clone());p.push(f),s.push(y)}}else if(v.isConstant("all"))h=i.multiply(h,v);else{f=Number(M.degree(v,n)),r.push(v);var y=i.divide(e.clone(),v.clone());y=i.expand(w.unwrapPARENS(y)),p.push(f),s.push(y)}}return r=r.map(function(e){return i.multiply(e,h.clone())}),[r,s,p]},partfrac:function(e,t,r){var a=m(e);t=t||i.parse(a[0]);try{var s,o,u,l,c,f,p,h,v,g,d,y,b,S,q,E,x,l;if(s=i.expand(e.getNum()),o=i.expand(e.getDenom().toUnitMultiplier()),s.multiplier=e.multiplier,f=s.groupTerms(t),Number(M.degree(s,t))>=Number(M.degree(o,t))?(b=M.div(s.clone(),i.expand(o.clone())),S=b[0],s=b[1],f=s.groupTerms(t)):S=new w(0),1===Number(M.degree(o,t))){var U=i.divide(s,o);return r?[S,U]:i.add(S,U)}c=M.Factor.factor(o),x=M.PartFrac.createTemplate(o.clone(),c,[],t),l=x[0],q=x[1],p=x[2],y=[f.length],h=[],u=[],E=[];var N,A;q.map(function(e,r){N=l[r],A=p[r];for(var n=0;n<A;n++){u.push(N.clone());var a=w.create(t,n),s=i.expand(i.multiply(e,a.clone())).groupTerms(t),o=s.length;y.push(o),h.push(s),E.push(a.clone())}}),v=n.Utils.arrayMax(y),d=new n.Matrix(n.Utils.fillHoles(f,v)).transpose(),g=new n.Matrix;for(var C=0;C<h.length;C++)g.elements.push(n.Utils.fillHoles(h[C],v));var R=i.multiply(g.transpose().invert(),d),P=r?[S]:S;return R.each(function(e,t){var n=i.multiply(E[t],i.divide(e,u[t]));r?P.push(n):P=i.add(P,n)}),P}catch(e){}return e}},degree:function(e,t,r){if(r=r||{nd:[],sd:[],depth:0},!t){var a=m(e);if(a.length>1)throw new Error("You must specify the variable for multivariate polynomials!");if(0===a.length)return new w(0);t=i.parse(a[0])}var s=e.group;e.isComposite()?(e=e.clone(),e.distributeExponent(),e.each(function(e){r.depth++,M.degree(e,t,r),r.depth--})):e.group===p?e.each(function(e){r.depth++,M.degree(e,t,r),r.depth++}):s===u&&e.value===t.value?r.sd.push(e.power.clone()):s===o&&e.value===t.value?r.nd.push(i.parse(e.power)):r.nd.push(new w(0));var l=r.nd.length>0?n.Utils.arrayMax(r.nd):void 0;return 0===r.depth&&r.sd.length>0?(void 0!==l&&r.sd.unshift(l),i.symfunction("max",r.sd)):(n.Utils.isSymbol(l)||(l=i.parse(l)),l)},sqComplete:function(e,t,r){n.Utils.isSymbol(t)||(t=i.parse(t));var a=function(e){throw e=e||"Stopping",new Error(e)};e.group!==f&&a("Must be a polynomial!");var s,o,u,l,c,p,h,m,v,g,d;return v=n.Utils.inBrackets,e=e.clone(),s=n.Algebra.degree(e,t),s.equals(2)||a("Cannot complete square for degree "+s),h=n.Algebra.coeffs(e,t),o=h[2],m=h[1].sign(),u=i.divide(h[1],new w(2)),l=i.pow(u.clone(),new w(2)),r?[o,u,c]:(d=b.sqrt(o),p=i.divide(b.sqrt(l),d.clone()),c=i.subtract(h[0],i.pow(p.clone(),new w(2))),g=i.parse(v(d.clone()+"*"+t+(m<0?"-":"+")+p)),{a:g,c:c,f:i.add(i.pow(g.clone(),new w(2)),c.clone())})},Classes:{Polynomial:e,Factors:t,MVTerm:r}};nerdamer.useAlgebraDiv=function(){var e=M.divideFn=i.divide,t=0;i.divide=function(r,i){t++;var a;return a=1===t?n.Algebra.divide(r,i):e(r,i),t=0,a}},nerdamer.useParserDiv=function(){M.divideFn&&(i.divide=M.divideFn),delete M.divideFn},nerdamer.register([{name:"factor",visible:!0,numargs:1,build:function(){return M.Factor.factor}},{name:"gcd",visible:!0,numargs:[1],build:function(){return M.gcd}},{name:"lcm",visible:!0,numargs:[1],build:function(){return M.lcm}},{name:"roots",visible:!0,numargs:-1,build:function(){return M.roots}},{name:"divide",visible:!0,numargs:2,build:function(){return M.divide}},{name:"div",visible:!0,numargs:2,build:function(){return M.div}},{name:"partfrac",visible:!0,numargs:[1,2],build:function(){return M.PartFrac.partfrac}},{name:"deg",visible:!0,numargs:[1,2],build:function(){return M.degree}},{name:"coeffs",visible:!0,numargs:[1,2],build:function(){return function(){var e=M.coeffs.apply(M,arguments);return new n.Vector(e)}}},{name:"line",visible:!0,numargs:[2,3],build:function(){return M.line}},{name:"sqcomp",visible:!0,numargs:[1,2],build:function(){return function(e,t){try{t=t||m(e)[0];return M.sqComplete(e.clone(),t).f}catch(t){return e}}}}]),nerdamer.api()}()},242:function(e,t,r){void 0!==e&&"undefined"==typeof nerdamer&&(nerdamer=r(223),r(241)),function(){"use strict";function e(e){this.message=e||""}var t=nerdamer.getCore(),r=t.PARSER,n=t.Frac,i=t.Utils.isSymbol,a=t.groups.FN,s=t.Symbol,o=t.Utils.text,u=t.Utils.inBrackets,l=t.Utils.isInt,c=t.Utils.format,f=t.Utils.even,p=t.groups.N,h=t.groups.S,a=t.groups.FN,m=t.groups.PL,v=t.groups.CP,g=t.groups.CB,d=t.groups.EX,w=t.groups.P,y="log",b="abs",M="sqrt",S="sin",q="cos",E="tan",x="sec",U="csc",N="cot",A="asin",C="acos",R="atan",P="sinh",_="cosh";e.prototype=new Error,s.prototype.hasIntegral=function(){return this.containsFunction("integrate")},s.prototype.fnTransform=function(){var e,t=this.args[0];if(this.isLinear())switch(this.fname){case P:e=r.parse(c("(e^({0})-e^(-({0})))/2",t));break;case _:e=r.parse(c("(e^({0})+e^(-({0})))/2",t));break;case"tanh":e=r.parse(c("(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))",t));break;case E:e=r.parse(c("sin({0})/cos({0})",t));break;case U:e=r.parse(c("1/sin({0})",t));break;case x:e=r.parse(c("1/cos({0})",t));break;default:e=this}else if(this.power.equals(2))switch(this.fname){case S:e=r.parse(c("1/2-cos(2*({0}))/2",t));break;case q:e=r.parse(c("1/2+cos(2*({0}))/2",t));break;case E:e=r.parse(c("sin({0})^2/cos({0})^2",t));break;case _:e=r.parse(c("1/2+cosh(2*({0}))/2",t));break;case P:e=r.parse(c("-1/2+cosh(2*({0}))/2",t));break;case"tanh":e=r.parse(c("(1+cosh(2*({0})))/(-1+cosh(2*({0})))",t));break;case x:e=r.parse(c("(1-cos(2*({0})))/(1+cos(2*({0})))+1",t));break;default:e=this}else e=this.fname===x?r.parse(c("1/cos({0})^({1})",this.args[0],this.power)):this.fname===U?r.parse(c("1/sin({0})^({1})",this.args[0],this.power)):this.fname===E?this.power.lessThan(0)?r.parse(c("cos({0})^(-({1}))/sin({0})^({1})",this.args[0],this.power.negate())):r.parse(c("sin({0})^({1})/cos({0})^({1})",this.args[0],this.power)):this.fname===S&&this.power.lessThan(0)?r.parse(c("csc({0})^(-({1}))",this.args[0],this.power.negate())):this.fname===q&&this.power.lessThan(0)?r.parse(c("sec({0})^(-({1}))",this.args[0],this.power.negate())):this.fname===S&&this.power.equals(3)?r.parse(c("(3*sin({0})-sin(3*({0})))/4",this.args[0])):this.fname===q&&this.power.equals(3)?r.parse(c("(cos(3*({0}))+3*cos({0}))/4",this.args[0])):this;return e},t.Expression.prototype.hasIntegral=function(){return this.symbol.hasIntegral()},t.Utils.in_inverse_trig=function(e){return-1!==[A,C,R,"acsc","asec","acot"].indexOf(e)},t.Utils.in_trig=function(e){return-1!==[q,S,E,x,U,N].indexOf(e)},t.Utils.in_htrig=function(e){return-1!==["sinh","cosh","tanh"].indexOf(e)};var I=t.Utils.all_functions=function(e){for(var t=0,r=e.length;t<r;t++)if(e[t].group!==a)return!1;return!0},T=t.Utils.cosAsinBtranform=function(e,t){var n,i;return n=e.args[0],i=t.args[0],r.parse(c("(sin(({0})+({1}))-sin(({0})-({1})))/2",n,i))},k=t.Utils.cosAsinAtranform=function(e,t){var n;return n=e.args[0],r.parse(c("(sin(2*({0})))/2",n))},L=t.Utils.cosAsinBtranform=function(e,t){var n,i;return n=e.args[0],i=t.args[0],r.parse(c("(cos(({0})+({1}))-cos(({0})-({1})))/2",n,i))},O=t.Utils.trigTransform=function(e){for(var t,n,i={},o=new s(1),u=0,l=e.length;u<l;u++)if(t=e[u],t.group===a){var c=t.fname;c===q&&i[S]?(i[S].args[0].toString()!==t.args[0].toString()?(n=T(t,i[S]),delete i[S]):(n=k(t,i[S]),delete i[S]),o=r.multiply(o,n)):c===S&&i[q]?(i[q].args[0].toString()!==t.args[0].toString()?(n=T(t,i[q]),delete i[q]):(n=k(t,i[q]),delete i[q]),o=r.multiply(o,n)):c===S&&i[S]?(i[S].args[0].toString()!==t.args[0].toString()?(n=L(t,i[S]),delete i[S]):(n=r.multiply(t,i[S]),delete i[S]),o=n):i[c]=t}else o=r.multiply(o,t);for(var f in i)o=r.multiply(o,i[f]);return o};t.Settings.integration_depth=10;var F=t.Calculus={version:"1.4.4",sum:function(e,n,i,a){if(n.group!==t.groups.S)throw new Error("Index must be symbol. "+o(n)+" provided");n=n.value;var u;if(t.Utils.isNumericSymbol(i)&&t.Utils.isNumericSymbol(a)){i=i.multiplier,a=a.multiplier;for(var l=e.text(),c={"~":!0},u=new t.Symbol(0),f=i;f<=a;f++){c[n]=new s(f);var p=r.parse(l,c);u=r.add(u,p)}return u}return u=r.symfunction("sum",arguments)},product:function(e,n,i,a){if(n.group!==t.groups.S)throw new Error("Index must be symbol. "+o(n)+" provided");n=n.value;var u;if(t.Utils.isNumericSymbol(i)&&t.Utils.isNumericSymbol(a)){i=i.multiplier,a=a.multiplier;for(var l=e.text(),c={},u=new t.Symbol(1),f=i;f<=a;f++)c[n]=new s(f),u=r.multiply(u,r.parse(l,c))}else u=r.symfunction("product",arguments);return u},diff:function(e,l,c){function f(e){return(e.value===k||e.contains(k,!0))&&(e.multiplier=e.multiplier.multiply(e.power),e.power=e.power.subtract(new n(1)),e.power.equals(0)&&(e=s(e.multiplier))),e}function P(e){var t,c,M=e.group;if(M===p||M===h&&e.value!==k||M===w)e=s(0);else if(M===h)e=f(e);else{if(M===g){var T=e.multiplier.clone();e.toUnitMultiplier();var L=r.multiply(I(e),f(e));return L.multiplier=L.multiplier.multiply(T),L}if(M===a&&e.power.equals(1))switch(e.fname){case y:c=e.clone(),e=e.args[0].clone(),e.power=e.power.negate(),e.multiplier=c.multiplier.divide(e.multiplier);break;case q:e.fname=S,e.multiplier.negate();break;case S:e.fname=q;break;case E:e.fname=x,e.power=new n(2);break;case x:e=_(e,E);break;case U:e=_(e,"-cot");break;case N:e.fname=U,e.multiplier.negate(),e.power=new n(2);break;case A:e=r.parse("(sqrt(1-("+o(e.args[0])+")^2))^(-1)");break;case C:e=r.parse("-(sqrt(1-("+o(e.args[0])+")^2))^(-1)");break;case R:e=r.parse("(1+("+o(e.args[0])+")^2)^(-1)");break;case"acot":e=r.parse("-1/(("+e.args[0]+")^2+1)");break;case b:T=e.multiplier.clone(),e.toUnitMultiplier(),t=e.args[0].clone(),t.toUnitMultiplier(),e=r.parse(u(o(e.args[0]))+"/abs"+u(o(t))),e.multiplier=T;break;case"parens":e=s(1);break;case"cosh":e.fname="sinh";break;case"sinh":e.fname="cosh";break;case"tanh":e.fname="sech",e.power=new n(2);break;case"sech":e=_(e,"-tanh");break;case"csch":var O=String(e.args[0]);return r.parse("-coth("+O+")*csch("+O+")");case"asinh":e=r.parse("(sqrt(1+("+o(e.args[0])+")^2))^(-1)");break;case"acosh":e=r.parse("(sqrt(-1+("+o(e.args[0])+")^2))^(-1)");break;case"atanh":e=r.parse("(1-("+o(e.args[0])+")^2)^(-1)");break;case"asech":var O=String(e.args[0]);e=r.parse("-1/(sqrt(1/("+O+")^2-1)*("+O+")^2)");break;case"acoth":e=r.parse("-1/(("+e.args[0]+")^2-1)");break;case"acsch":var O=String(e.args[0]);e=r.parse("-1/(sqrt(1/("+O+")^2+1)*("+O+")^2)");break;case"Si":var O=e.args[0];e=r.parse("sin("+O+")/("+O+")");break;case"Shi":var O=e.args[0];e=r.parse("sinh("+O+")/("+O+")");break;case"Ci":var O=e.args[0];e=r.parse("cos("+O+")/("+O+")");break;case"Chi":var O=e.args[0];e=r.parse("cosh("+O+")/("+O+")");break;case"Ei":var O=e.args[0];e=r.parse("e^("+O+")/("+O+")");break;case"erf":e=r.parse("(2*e^(-("+e.args[0]+")^2))/sqrt(pi)");break;case"atan2":var D=String(e.args[0]),B=String(e.args[1]);e=r.parse("("+B+")/(("+B+")^2+("+D+")^2)");break;case"sign":e=new s(0);break;case"log10":e=r.parse("1/(("+e.args[0]+")*log(10))");break;default:e=r.symfunction("diff",[e,l])}else if(M===d||M===a&&i(e.power)){var j;j=M===d?e.value:M===a&&e.contains(k)?e.fname+u(o(e.args[0])):e.value+u(o(e.args[0])),r.multiply(r.parse(y+u(j)),e.power.clone()),t=F.diff(r.multiply(r.parse(y+u(j)),e.power.clone()),k),e=r.multiply(e,t)}else if(M!==a||e.power.equals(1)){if(M===v||M===m){var V=new s(0);for(var H in e.symbols)V=r.add(V,F.diff(e.symbols[H].clone(),k));e=r.multiply(f(e.clone()),V)}}else t=e.clone(),t.toLinear(),t.toUnitMultiplier(),e=r.multiply(f(e.clone(),k),P(t))}return e.updateHash(),e}function _(e,t,n){return r.multiply(e,r.parse(t+u(n||o(e.args[0]))))}function I(e){for(var t=e.collectSymbols(),n=new s(0),i=t.length,a=0;a<i;a++){for(var o=F.diff(t[a].clone(),k),u=0;u<i;u++)a!==u&&(o=r.multiply(o,t[u].clone()));n=r.add(n,o)}return n}if(t.Utils.isVector(e)){var T=new t.Vector([]);return e.each(function(e){T.elements.push(F.diff(e,l))}),T}var k=i(l)?l.text():l;if(c=i(c)?c.multiplier:c||1,void 0===k&&(k=t.Utils.variables(e)[0]),e.group===a&&e.fname===M){var L=e.args[0],O=e.power.clone();L.group===p&&L.group===w||(L.power=i(L.power)?r.multiply(L.power,r.multiply(new s(.5)),O):L.power.multiply(new n(.5)).multiply(O),L.multiplier=L.multiplier.multiply(e.multiplier)),e=L}if(e.group!==a||i(e.power))e=P(e);else{var D=P(e),B=F.diff(e.args[0].clone(),k);e=r.multiply(D,B)}return c>1&&(c--,e=F.diff(e,l,c)),e},integration:{u_substitution:function(e,n){function i(e,t,i){var a=i?i(e,t):r.divide(e.clone(),F.diff(t,n));return a.contains(n,!0)?null:a}function o(e,t){var n=F.integrate(r.symfunction(e,[new s(h)]),h,0);return n=n.sub(new s(h),t),n.updateHash(),n}var u,l=e[0].clone(),c=e[1].clone(),f=l.group,p=c.group,h="__u__";if(f===a&&p!==a){var m=l.args[0];if(u=i(c,m.clone()))return r.multiply(u,o(l.fname,m));if(u=i(c,l))return F.integration.poly_integrate(l)}else if(p===a&&f!==a){var m=c.args[0];if(u=i(l,m.clone()))return r.multiply(u,o(c.fname,m))}else if(f===a&&f===a){if(u=i(l.clone(),c.clone()))return r.multiply(F.integration.poly_integrate(c),u);if(u=i(c.clone(),l.clone()))return r.multiply(F.integration.poly_integrate(c),u)}else{if(f===d&&p!==d){var v=l.power;if(!(u=i(c,v.clone()))){var g=F.integration.decompose_arg(v.clone(),n),w=F.diff(g[2].clone(),n),y=F.integration.decompose_arg(w.clone(),n);if(r.multiply(g[1],y[1]).power.equals(c.power)){var b=r.divide(g[0].clone(),y[0].clone()),M=r.multiply(b.clone(),r.pow(new s(l.value),r.multiply(g[0],new s(h))));return M=r.multiply(M,new s(h)),F.integration.by_parts(M,h,0,{}).sub(h,g[1].clone())}}var S=F.integrate(l.sub(v.clone(),new s(h)),h,0),q=r.multiply(S.sub(new s(h),v),u);return q}if(p===d&&f!==d){var v=c.power;u=i(l,v.clone());var S=F.integrate(c.sub(v,new s(h)),h,0);return r.multiply(S.sub(new s(h),v),u)}if(l.isComposite()||c.isComposite()){var E=function(e,i){var a=t.Algebra.Factor.factor(e),s=t.Algebra.Factor.factor(F.diff(i,n));return r.divide(a,s)},x=l.isComposite()?l.clone().toLinear():l.clone(),U=c.isComposite()?c.clone().toLinear():c.clone();if(u=i(x.clone(),U.clone(),E))return r.multiply(F.integration.poly_integrate(c),u);if(u=i(U.clone(),x.clone(),E))return r.multiply(F.integration.poly_integrate(l),u)}}},poly_integrate:function(e){var t=e.power.toString(),n=e.multiplier.toDecimal(),i=e.toUnitMultiplier().toLinear();return-1===Number(t)?r.multiply(new s(n),r.symfunction(y,[i])):r.parse(c("({0})*({1})^(({2})+1)/(({2})+1)",n,i,t))},stop:function(t){throw t=t||"Stopping!",new e(t)},partial_fraction:function(e,n,a,o){i(n)||(n=r.parse(n));var u,l;return u=new s(0),l=t.Algebra.PartFrac.partfrac(e,n),l.group===g&&l.isLinear()?l.each(function(e){u=r.add(u,F.integrate(e,n,a,o))}):u=r.add(u,F.integrate(l,n,a,o)),u},get_udv:function(e){var n=[[],[],[],[],[]],i=function(e){var r=e.group;if(r===a){var i=e.fname;t.Utils.in_trig(i)||t.Utils.in_htrig(i)?n[3].push(e):t.Utils.in_inverse_trig(i)?n[1].push(e):i===y?n[0].push(e):F.integration.stop()}else r===h||e.isComposite()&&e.isLinear()||r===g&&e.isLinear()?n[2].push(e):r===d||e.isComposite()&&!e.isLinear()?n[4].push(e):F.integration.stop()};e.group===g?e.each(function(e){i(s.unwrapSQRT(e,!0))}):i(e);for(var o,u=new s(1),l=0;l<5;l++){var c,f=n[l],p=f.length;if(p>0){if(p>1){c=new s(1);for(var m=0;m<p;m++)c=r.multiply(c,f[m].clone())}else c=f[0].clone();o?u=r.multiply(u,c):(o=c,o.multiplier=o.multiplier.multiply(e.multiplier))}}return[o,u]},trig_sub:function(e,n,i,a,s,o){s=s||F.integration.decompose_arg(e.clone().toLinear(),n);var l=(s[3],s[2],s[0]),c=s[1];if(c.power.equals(2)&&l.greaterThan(0)){var f=t.Utils.getU(e),p=r.parse(E+u(f)),h=r.parse(x+u(f)+"^2"),m=r.multiply(e.sub(c,p),h),v=F.integrate(m,f,i,a).sub(p,c);return t.Utils.clearU(p),v}},by_parts:function(e,n,i,a){a.previous=a.previous||[];var o,u,l,c,f,p,h,m,v,g,d,w;if(o=F.integration.get_udv(e),u=o[0],l=o[1],c=s.unwrapSQRT(r.expand(F.diff(u.clone(),n)),!0),d=c.clone().stripVar(n),c=r.divide(c,d.clone()),f=F.integrate(l.clone(),n,i||0),p=r.multiply(f.clone(),c),w=p.toString(),-1!==a.previous.indexOf(w)&&t.Utils.in_trig(u.fname)&&l.isE())return a.is_cyclic=!0,new s(1);if(a.previous.push(w),h=r.multiply(u,f),g=p.multiplier.clone(),p.toUnitMultiplier(),v=r.multiply(F.integrate(p.clone(),n,i,a),d),v.multiplier=v.multiplier.multiply(g),m=r.subtract(h,v),a.is_cyclic&&(a.previous.pop(),0===a.previous.length)){m=r.expand(m);var y=new s(0);m.each(function(e){e.contains(n)||(y=r.add(y,e.clone()))}),m=r.divide(r.subtract(m,y.clone()),r.subtract(new s(1),y))}return m},decompose_arg:t.Utils.decompose_fn},integrate:function(o,p,w,T){if(!p){var k=t.Utils.variables(o);1===k.length&&(p=k[0]),p=p||"x"}if(t.Utils.isVector(o)){var L=new t.Vector([]);return o.each(function(e){L.elements.push(F.integrate(e,p))}),L}return isNaN(p)||r.error("variable expected but received "+p),o.isConstant(!0)?r.multiply(o.clone(),r.parse(p)):(T=T||{},t.Utils.block("PARSE2NUMBER",function(){w=w||0;var k,L=i(p)?p.toString():p,D=s.unwrapSQRT(o.clone(),!0),B=D.group;try{if(++w>t.Settings.integration_depth&&F.integration.stop("Maximum depth reached. Exiting!"),D.contains(L,!0)){if(B===h)k=F.integration.poly_integrate(D,L,w);else if(B===d)if(D.contains(L)&&D.previousGroup!==a)if(D.power.contains(L))F.integration.stop();else{var j=F.diff(D.clone().toLinear(),L);j.contains(L)&&F.integration.stop(),k=F.integration.poly_integrate(D,L,w)}else{var V=F.diff(D.power.clone(),L);if(V.contains(L)){var H=V.stripVar(L),G=r.divide(V.clone(),H.clone());if(G.group===h&&G.isLinear())return H.multiplier=H.multiplier.divide(new n(2)),r.parse(c("({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))",H,L,D.multiplier));F.integration.stop()}if(D.isE())k=D;else{var z=r.symfunction(y,[r.parse(D.value)]);k=r.divide(D,z)}k=r.divide(k,V)}else if(D.isComposite()&&D.isLinear())k=new s(0),D.each(function(e){k=r.add(k,F.integrate(e,L,w))});else if(B===v)if(D.power.greaterThan(1)&&(D=r.expand(D)),D.power.equals(1))k=new s(0),D.each(function(e){k=r.add(k,F.integrate(e,L,w))},!0);else{var X=Number(D.power),Z=D.multiplier.clone();D.toUnitMultiplier();var Q=D.clone().toLinear(),Y=F.integration.decompose_arg(Q,L),W=Y[3],$=Y[2],V=Y[0],G=Y[1];if(-1===X&&G.group!==m)if(G.group===h&&G.power.equals(2)){var J=function(e){var t=new s(1);return e.each(function(e){t=r.multiply(t,"abs"===e.fname?e.args[0]:e)}),t},K=V.clone(),ee=W.clone();K=r.pow(K,new s(.5)),ee=r.pow(ee,new s(.5));var z=r.multiply(J(ee),J(K)),te=r.symfunction(R,[r.divide(r.multiply(V,G.toLinear()),z.clone())]);k=r.divide(te,z)}else if(G.group===h&&G.isLinear())k=r.divide(F.integration.poly_integrate(D),V);else if(G.power.equals(4)){var K,ee,re,ne,ie,ae,se,oe,ue,le,ce=u;K=r.parse(M+ce(V)+"*"+L+"^2"),ee=r.parse(M+ce(2)+"*"+ce(V)+"^"+ce("1/4")+"*"+ce(W)+"^"+ce("1/4")+"*"+L),re=r.parse(M+ce(W)),se=r.add(r.add(K.clone(),ee.clone()),re.clone()),oe=r.add(r.subtract(K,ee),re),ne=r.parse(M+ce(2)+"*"+ce(W)+"^"+ce("3/4")),ie=r.parse(M+ce(W)+"*"+ce(W)+"^"+ce("1/4")+"*"+L),ae=r.parse("2*"+ce(W)+"*"+M+ce(2)+"*"+ce(W)+"^"+ce("1/4")),ue=r.divide(r.subtract(ne.clone(),ie.clone()),r.multiply(ae.clone(),oe)),le=r.divide(r.add(ne,ie),r.multiply(ae,se.clone())),k=r.add(F.integrate(ue,L,w,T),F.integrate(le,L,w,T))}else k=F.integration.partial_fraction(D,L,w);else if(-.5===X)if(G.group===h&&G.power.equals(2))if($.multiplier.lessThan(0)&&!W.multiplier.lessThan(0))if(V.negate(),W.isConstant()&&V.isConstant()){var z=r.symfunction(M,[V.clone()]),fe=r.symfunction(M,[r.multiply(V.clone(),W)]);k=r.divide(r.symfunction(A,[r.divide($.toLinear(),fe)]),z)}else{var pe=r.symfunction(M,[V]),he=r.multiply(pe.clone(),G.clone().toLinear());k=r.divide(r.symfunction(R,[r.divide(he,r.symfunction(M,[Q.clone()]))]),pe)}else F.integration.stop();else F.integration.stop();else if(G.isLinear()&&G.group!==m)k=r.divide(F.integration.poly_integrate(D),V);else{if(G.power.equals(2)&&V.greaterThan(0)){var me,ve,ge,de,we,ye,be,Me,Se;me=r.parse(M+u(V)),ve=r.parse(M+u(W)),ge=r.multiply(me.clone(),ve.clone()).invert(),de=r.pow(W,new s(D.power)),Se=t.Utils.getU(D),be=r.multiply(ge,G.clone().toLinear()),Me=r.parse(R+u(be));var we=2*(Math.abs(D.power)-1),ye=F.integrate(r.parse(q+u(Se)+"^"+we));return t.Utils.clearU(Se),r.multiply(ye.sub(Se,Me),de)}if(D.group===g||D.power.lessThan(0)){var te=D.clone().toLinear(),qe=t.Algebra.Factor.factor(te),Ee=qe.toString()!==te.toString();if(t.Algebra.degree(te,r.parse(L)).equals(2)&&!Ee)try{var se,xe,be,Ue;Ue=t.Algebra.sqComplete(te,L),be=t.Utils.getU(te),se=Ue.f.sub(Ue.a,be),xe=r.pow(se,r.parse(D.power)),k=F.integrate(xe,be).sub(be,Ue.a)}catch(e){F.integration.stop()}else k=F.integration.partial_fraction(D,L,w,T)}else k=F.integration.by_parts(D,L,w,T)}k.multiplier=k.multiplier.multiply(Z)}else if(B===a){var Ne=D.args[0],Z=D.multiplier.clone();D.toUnitMultiplier();var Y=F.integration.decompose_arg(Ne,L),V=Y[0],G=Y[1],Ae=D.fname;if(Ae===y||Ae===A||Ae===C||Ae===R&&G.isLinear()){var X=D.power.toString();l(X)&&(w-=X),k=F.integration.by_parts(D,L,w,T)}else{if(Ae===E&&D.power.lessThan(0)){var Ce=D.clone();return Ce.power.negate(),Ce.fname=N,F.integrate(Ce,L,w)}if(!V.contains(L,!0)&&D.isLinear())if(Ae===b){var G=r.divide(Ne.clone(),V.clone());if(G.group!==h||G.power.lessThan(0))F.integration.stop();else if(t.Utils.even(G.power))k=F.integrate(Ne,L,w);else{var Re=F.integrate(G,L,w);Re.power=Re.power.subtract(new n(1)),k=r.multiply(r.multiply(r.symfunction(b,[G.toLinear()]),Re),V)}}else{var Pe=D.args[0].group,_e=F.integration.decompose_arg(Ne,L);switch((Pe!==v&&Pe!==h&&Pe!==g||!_e[1].power.equals(1)||Ne.hasFunc())&&F.integration.stop(),Ae){case q:k=r.symfunction(S,[Ne]);break;case S:k=r.symfunction(q,[Ne]),k.negate();break;case E:k=r.parse(c("log(sec({0}))",Ne));break;case x:k=r.parse(c("log(tan({0})+sec({0}))",Ne));break;case U:k=r.parse(c("-log(csc({0})+cot({0}))",Ne));break;case N:k=r.parse(c("log(sin({0}))",Ne));break;case P:k=r.symfunction(_,[Ne]);break;case _:k=r.symfunction(P,[Ne]);break;case"tanh":k=r.parse(c("log(cosh({0}))",Ne));break;case"exp":k=F.integrate(r.parse(c("e^({0})",Ne)),L,w);break;case"erf":var Ne=D.args[0].clone(),Ie=F.integration.decompose_arg(Ne,L),Te=Ie[1],ke=Ie[0];k=r.parse(c("e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))",ke,Te,Ne));break;case"sign":k=r.multiply(D.clone(),Ne.clone());break;default:F.integration.stop()}k=r.divide(k,V)}else if(G.isLinear())if(Ae===q||Ae===S){var X=Number(D.power);if(X<0)D.fname=Ae===S?U:x,D.invert().updateHash(),k=F.integrate(D,L,w);else{var Ne=D.args[0],Le=D.clone(),Oe=D.clone(),Fe=new s((X-1)/X),De=r.multiply(V.clone(),new s(X)).invert();Le.power=Le.power.subtract(new n(1)),Oe.power=Oe.power.subtract(new n(2));var j=r.symfunction(Ae===q?S:q,[Ne.clone()]);Ae===S&&j.negate(),k=r.add(r.multiply(r.multiply(De,Le),j),r.multiply(Fe,F.integrate(r.parse(Oe),L,w)))}}else if(Ae===E||Ae===N){if(D.args[0].isLinear(L)){var we=D.power.subtract(new n(1)).toString(),Be=D.clone().toUnitMultiplier(),je=r.parse(c((Ae===N?"-":"")+"1/({2}*{0})*{3}({1})^({0})",we,Ne,V,Ae));Be.power=Be.power.subtract(new n(2)),Be.power.equals(0)&&(Be=r.parse(Be)),k=r.subtract(je,F.integrate(Be,L,w))}}else if(Ae===x||Ae===U){var Ve=D.power.subtract(new n(1)).toString(),He=D.power.subtract(new n(2)).toString(),oe=Ae===x?E:N,Be=D.clone().toUnitMultiplier(),Ge=c((Ae===U?"-":"")+"1/({0}*{1})*{4}({3})^({2})*{5}({3})",V,Ve,He,Ne,Ae,oe),je=r.parse(Ge);Be.power=Be.power.subtract(new n(2)),Be.power.equals(0)&&(Be=r.parse(Be)),k=r.add(je,r.multiply(new s(He/Ve),F.integrate(Be,L,w)))}else Ae!==_&&Ae!==P||!D.power.equals(2)?F.integration.stop():k=F.integrate(D.fnTransform(),L,w);else F.integration.stop();k.multiplier=k.multiplier.multiply(Z)}}else if(B===m)k=F.integration.partial_fraction(D,L,w);else if(B===g){var ze=D.stripVar(L),Xe=r.divide(D.clone(),ze.clone());if(Xe.group!==g){if(Xe.equals(1))return F.integrate(r.expand(D),L,w);k=F.integrate(Xe,L,w)}else{var Ze=Xe.collectSymbols().sort(function(e,t){return e.group===t.group?Number(e.power)===Number(t.power)?e<t?1:-1:t.power-e.power:t.group-e.group}).map(function(e){var t=s.unwrapSQRT(e,!0);return"exp"===t.fname?r.parse(c("({1})*e^({0})",t.args[0],t.multiplier)):t}),Qe=Ze.length;if(2===Qe){try{k=F.integration.u_substitution(Ze,L)}catch(e){}if(!k){var Ye=Ze[0].group,We=Ze[1].group,$e=Ze[0],Je=Ze[1],Ke=$e.fname,et=Je.fname;if(D=r.multiply($e.clone(),Je.clone()),Ye===a&&We===a)if(Ke===y||et===y)k=F.integration.by_parts(D.clone(),L,w,T);else{Ze.sort(function(e,t){return t.fname>e.fname});var tt=$e.args[0];(!tt.isLinear()||tt.group!==v&&tt.group!==g&&tt.group!==h)&&F.integration.stop();var Y=F.integration.decompose_arg(tt,L);G=Y[1],V=Y[0],G.isLinear()||F.integration.stop();var rt=Je.args[0];if(tt.equals(rt))if(Ke===S&&et===q||Ke===q&&et===S)if($e.power.lessThan(0)&&F.integration.stop(),Ke===S&&$e.power.add(Je.power).equals(0))$e.fname=E,$e.updateHash(),k=F.integrate($e,L,w);else if(f($e.power)&&et===q&&Je.power.lessThan(0)){var we=Number($e.power)/2,nt=r.parse(c("(1-cos({0})^2)^({1})",$e.args[0],we));k=F.integrate(r.expand(r.multiply(nt,Je.clone())),L,w,T)}else if(f($e.power)&&et===S&&Je.power.lessThan(0)){var we=Number($e.power)/2,nt=r.parse(c("(1-sin({0})^2)^({1})",$e.args[0],we));k=F.integrate(r.expand(r.multiply(nt,Je.clone())),L,w,T)}else{var it=t.Utils.even($e.power),at=t.Utils.even(Je.power);if(k=new s(0),it&&at){var st=function(e){var t,n=e.power,i=n/2;return t=e.fname===q?"((1/2)+(cos(2*("+e.args[0]+"))/2))^"+i:"((1/2)-(cos(2*("+e.args[0]+"))/2))^"+i,r.parse(t)},V=st($e),W=st(Je),j=r.multiply(V,W),Ce=r.expand(j);return Ce.each(function(e){k=r.add(k,F.integrate(e,L,w))}),r.multiply(k,ze)}var be,Be,ot;it?(be=$e,Be=Je):(be=Je,Be=$e);var ut=be.fname===q?-1:1,we=Be.power,lt=(we-1)/2,ot=r.parse("(1-"+be.fname+t.Utils.inBrackets(tt)+"^2)^"+lt),Ce=r.expand(r.multiply(new s(ut),r.multiply(be.clone(),ot)));Ce.each(function(e){k=r.add(k,F.integration.poly_integrate(e.clone()))})}else if(Ke===x&&et===E&&G.isLinear()&&Je.isLinear())k=r.parse(c("sec({0})^({1})/({1})",$e.args[0],$e.power));else if(Ke===E&&et===x&&G.isLinear())if($e.isLinear()&&Je.isLinear())k=r.divide(r.symfunction(x,[tt.clone()]),V);else if(f($e.power)){var X=Number($e.power)/2,j=r.parse(c("(sec({0})^2-1)^({1})",$e.args[0],X));k=F.integrate(r.expand(r.multiply(j,Je)),L,w)}else F.integration.stop();else if(Ke===x&&et===q)$e.fname=q,$e.invert().updateHash(),k=F.integrate(r.multiply($e,Je),L,w);else if(Ke===S&&et===U)Je.fname=S,Je.invert().updateHash(),k=F.integrate(r.multiply($e,Je),L,w);else if(Ke!==E||et!==q&&et!==S||!Je.power.lessThan(0)){var j=r.multiply($e.fnTransform(),Je.fnTransform());k=F.integrate(r.expand(j),L,w)}else{var j=r.multiply($e.fnTransform(),Je);k=F.integrate(r.expand(j),L,w)}else if(Ke!==S&&Ke!==q||et!==S&&et!==q)F.integration.stop();else{var ct=O(Ze);k=F.integrate(r.expand(ct),L,w)}}else if(Ye===a&&We===h){var ft=$e.isLinear();if($e.fname===q&&ft&&Je.power.equals(-1))k=r.symfunction("Ci",[$e.args[0]]);else if($e.fname===q&&Je.power.equals(-1))k=F.integrate(r.multiply($e.fnTransform(),Je.clone()),L,w);else if($e.fname===_&&ft&&Je.power.equals(-1))k=r.symfunction("Chi",[$e.args[0]]);else if($e.fname===_&&Je.power.equals(-1))k=F.integrate(r.multiply($e.fnTransform(),Je.clone()),L,w);else if($e.fname===S&&ft&&Je.power.equals(-1))k=r.symfunction("Si",[$e.args[0]]);else if($e.fname===S&&Je.power.equals(-1))k=F.integrate(r.multiply($e.fnTransform(),Je.clone()),L,w);else if($e.fname===P&&ft&&Je.power.equals(-1))k=r.symfunction("Shi",[$e.args[0]]);else if($e.fname===P&&Je.power.equals(-1))k=F.integrate(r.multiply($e.fnTransform(),Je.clone()),L,w);else if($e.fname===y&&Je.power.equals(-1))k=F.integration.poly_integrate($e,L,w);else if("erf"===$e.fname){if(Je.power.equals(1)){var Ie=F.integration.decompose_arg($e.args[0],L),ke=Ie[0],Te=Ie[1],Ne=$e.args[0].toString();k=r.parse(c("(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)",ke,Te,Ne))}}else k=F.integration.by_parts(D,L,w,T)}else if(Ye===d&&We===h){var G=Ke===y?F.integration.decompose_arg($e.args[0],L)[1]:null;k=$e.isE()&&($e.power.group===h||$e.power.group===g)&&Je.power.equals(-1)?r.symfunction("Ei",[$e.power.clone()]):Ke===y&&G.value===Je.value?F.integration.poly_integrate($e,L,w):F.integration.by_parts(D,L,w,T)}else if(Ye===m&&We===h){if(Je.value===$e.value&&$e.power.equals(-1)){var pt=Math.min.apply(null,t.Utils.keys($e.symbols)),ht=Math.min(pt,Je.power),mt=Je.clone();mt.power=new n(ht),Je=r.divide(Je,mt.clone());var j=new s(0);$e.each(function(e){j=r.add(j,r.divide(e.clone(),mt.clone()))}),j.multiplier=$e.multiplier,D=r.divide(Je,j)}k=F.integration.partial_fraction(D,L,w)}else if(Ye===v&&We===h){var te=$e.clone().toLinear(),vt=t.Algebra.degree(te,r.parse(L)).equals(1);if($e.power.equals(-.5)){var Y=F.integration.decompose_arg($e.clone().toLinear(),L),V=Y[0].negate(),G=Y[1],W=Y[3],X=Number(Je.power);if(l(X)&&t.Utils.even(X)&&G.power.equals(2)){var gt=r.divide(r.multiply(r.pow(W.clone(),new s(2)),r.symfunction(M,[r.divide(W.clone(),V.clone())])),r.pow(V.clone(),new s(2)));gt=r.multiply(gt,r.symfunction(M,[W]).invert());var dt=r.parse("sin(u)");dt.power=dt.power.multiply(Je.power);var ye=F.integrate(dt,"u",w),wt=r.parse(A+"("+M+"("+V+"/"+W+")*"+L+")");k=r.multiply(gt,ye.sub(new s("u"),wt))}}else if($e.power.equals(-1)&&Je.isLinear()&&vt)k=F.integration.partial_fraction(D,L,w);else if(!$e.power.lessThan(0)&&l($e.power)){var yt=r.expand($e);k=new s(0),yt.each(function(e){e.group===m?e.each(function(e){k=r.add(k,F.integrate(r.multiply(Je.clone(),e),L,w))}):k=r.add(k,F.integrate(r.multiply(Je.clone(),e),L,w))})}else if($e.power.lessThan(-2))k=F.integration.by_parts(D,L,w,T);else if($e.power.lessThan(0)&&Je.power.greaterThan(1)){var Y=F.integration.decompose_arg($e.clone().toLinear(),L),V=Y[0].negate(),G=Y[1],W=Y[3],Q=$e.clone().toLinear();if(G.group!==m&&G.isLinear()){var X=Number(Je.power),bt="_u_",be=new s(bt),Mt=r.expand(r.divide(r.pow(r.subtract(be.clone(),W.clone()),new s(X)),be.clone())),St={};St[bt]=Q;var qt=r.parse(Mt,St);k=F.integrate(qt,L,0)}else if(Je.power.greaterThan(G.power)||Je.power.equals(G.power)){var Et=new t.Algebra.Classes.Factors;$e=t.Algebra.Factor.coeffFactor($e.invert(),Et),k=new s(0),t.Algebra.divide(Je,$e).each(function(e){k=r.add(k,F.integrate(e,L,w))}),Et.each(function(e){k=r.divide(k,e)}),k=r.expand(k)}else k=F.integration.partial_fraction(D,L,w)}else if($e.power.den.equals(2)){var Ie=F.integration.decompose_arg($e.clone().toLinear(),L),V=Ie[3],G=Ie[1],W=Ie[0];Ie[2];if(G.power.equals(2)&&W.lessThan(0)){V.equals(1)||(ze=r.multiply(ze,r.pow(V,new s(2))));var be=L,gt=r.divide(r.pow(W.clone().negate(),new s(.5)),r.pow(V,new s(.5))),bt=r.symfunction(q,[new s(be)]),xt=r.pow(r.symfunction(q,[new s(be)]),new s($e.power.num)),Ut=r.pow(r.symfunction(S,[new s(be)]),new s(Je.power)),Nt=r.multiply(r.multiply(xt,bt),Ut),ye=F.integrate(Nt,be,w);k=ye.sub(be,r.symfunction(A,[r.multiply(new s(L),gt)]))}}else vt&&(k=F.integration.partial_fraction(D,L,w))}else if($e.isComposite()&&Je.isComposite())if(k=new s(0),$e.power.greaterThan(0)&&Je.power.greaterThan(0)){var Ce=r.expand(D);Ce.each(function(e){k=r.add(k,F.integrate(e,L,w))},!0)}else{var At=Number($e.power),Ct=Number(Je.power);if(At<0&&Ct>0){var j=$e;$e=Je,Je=j}$e.each(function(e){k=r.add(k,F.integrate(r.multiply(e,Je.clone()),L,w))})}else if(Ye===v&&Ze[0].power.greaterThan(0))$e=r.expand($e),k=new s(0),$e.each(function(e){k=r.add(k,F.integrate(r.multiply(e,Je.clone()),L,w))},!0);else if(Ye===a&&We===d&&t.Utils.in_htrig($e.fname))$e=$e.fnTransform(),k=F.integrate(r.expand(r.multiply($e,Je)),L,w);else if(Ye===a&&We===v||We===a&&Ye===v){if(We===a&&Ye===v){var j=$e;$e=Je,Je=j}var bt,Rt,X,Fe,Pt,_t;if(bt=s.unwrapSQRT(F.diff($e.clone(),L),!0),Rt=s.unwrapSQRT(Je,!0),bt.power.equals(Rt.power)){if(X=new s(Je.power),Pt=bt.clone().toLinear(),_t=Je.clone().toLinear(),Fe=t.Algebra.divide(Pt.toLinear(),_t),Fe.isConstant()){var It=r.pow(Fe,X.negate());k=r.multiply(It,F.integration.poly_integrate($e.clone()))}}else k=F.integration.by_parts(D,L,w,T)}else k=F.integration.by_parts(D,L,w,T)}}else if(3===Qe&&(Ze[2].group===h&&Ze[2].power.lessThan(2)||Ze[0].group===v)){var Tt=Ze[0];if(Tt.group===v){Tt.power.greaterThan(1)&&(Tt=r.expand(Tt));var Be=r.multiply(Ze[1],Ze[2]);k=new s(0),Tt.each(function(e){var t=r.multiply(e,Be.clone()),n=F.integrate(t,L,w);k=r.add(k,n)},!0)}else k=F.integration.by_parts(D,L,w,T)}else if(I(Ze)){for(var j=new s(1),kt=0,Qe=Ze.length;kt<Qe;kt++)j=r.multiply(j,Ze[kt].fnTransform());j=r.expand(j),k=F.integrate(j,L,w)}else{var ct=O(Ze);k=F.integrate(r.expand(ct),L,w)}}k=r.multiply(k,ze)}}else k=r.multiply(D.clone(),r.parse(L));if(k)return k}catch(r){if(!(r instanceof e||r instanceof t.exceptions.DivisionByZero))throw r}return r.symfunction("integrate",[o,p])},!1))},defint:function(e,n,i,a){var o,u=t.Utils.variables(e),l=F.integrate(e,a);if(1===u.length&&(a=u[0]),l.hasIntegral())if(1===u.length&&n.isConstant()&&i.isConstant()){var c=t.Utils.build(e);o=new s(t.Math2.num_integrate(c,Number(n),Number(i)))}else o=r.symfunction("defint",[e,n,i,a]);else{var f,p,h={},m={};h[a]=i,m[a]=n,f=r.parse(l,h),p=r.parse(l,m),o=r.subtract(f,p)}return o},limit:function(e,n,i){var a=function(e){try{return r.parse(e.sub(n,i))}catch(e){if(e instanceof t.exceptions.UndefinedError)return;throw new Error("Stopping!")}};try{var o,u,l,c,f,p,h,m;l=e.getNum(),c=e.getDenom(),o=a(l),u=a(c),p=10,h=l,m=c;for(var v=0;void 0===o&&void 0===u||o.equals(0)&&u.equals(0)||o.isInfinty&&u.isInfinity;){if(v>p){var g={};g[n]=i;try{return t.Utils.block("PARSE2NUMBER",function(){return r.parse(e,g)},!0)}catch(e){throw t.exceptions.MaximumIterationsReached()}}h=F.diff(h,n),m=F.diff(m,n),o=a(h.clone()),u=a(m.clone()),v++}return o.isConstant(!0)||u.isConstant(!0)?f=u.equals(0)?s.infinity():r.divide(o,u):o.isInfinity?f=o:u.isInfinity&&(f=u),f}catch(e){return r.symfunction("limit",arguments)}}};nerdamer.register([{name:"diff",visible:!0,numargs:[1,3],build:function(){return F.diff}},{name:"sum",visible:!0,numargs:4,build:function(){return F.sum}},{name:"product",visible:!0,numargs:4,build:function(){return F.product}},{name:"integrate",visible:!0,numargs:[1,2],build:function(){return F.integrate}},{name:"defint",visible:!0,numargs:[3,4],build:function(){return F.defint}},{name:"limit",visible:!1,numargs:3,build:function(){return F.limit}}]),nerdamer.api()}()},357:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(493),i=function(e){return e&&e.__esModule?e:{default:e}}(n);t.default=i.default},493:function(e,t,r){var n=r(223);r(241),r(242),r(494),r(495),e.exports=n},494:function(e,t,r){nerdamer=r(223),r(242),r(241),function(){function e(e,r){if(r.isConstant()&&e.isConstant()&&!e.equals(r)||e.equals(t.Settings.IMAGINARY)||r.equals(t.Settings.IMAGINARY))throw new Error(e.toString()+" does not equal "+r.toString());this.LHS=e,this.RHS=r}var t=nerdamer.getCore(),r=t.PARSER,n=t.Algebra,i=t.Calculus,a=i.integration.decompose_arg,s=t.Utils.remove,o=t.Utils.format,u=t.Utils.build,l=t.Symbol,c=t.Utils.isSymbol,f=t.Utils.variables,p=t.groups.S,h=t.groups.PL,m=t.groups.CB,v=t.groups.CP,g=t.groups.FN,d=t.Utils.isArray;t.Solve={version:"1.2.5",solve:function(e,r){var n=N(e,String(r));return new t.Vector(n)}},t.Settings.SOLVE_RADIUS=1e3,t.Settings.ROOTS_PER_SIDE=5,t.Settings.make_pi_conversions=!0,t.Symbol.prototype.hasTrig=function(){return this.containsFunction(["cos","sin","tan","cot","csc","sec"])},t.Symbol.prototype.hasNegativeTerms=function(){if(this.isComposite())for(var e in this.symbols){var t=this.symbols[e];if(t.group===h&&t.hasNegativeTerms()||this.symbols[e].power.lessThan(0))return!0}return!1};var w=function(e,t){if(t.group===v&&t.group!==v){var n=e;e=t,t=n}if(e.group===m){var n=new l(e.multiplier),i=t.clone();e.each(function(e){e.power.lessThan(0)?i=r.divide(i,e):n=r.multiply(n,e)}),e=n,t=i}else if(e.group===v)for(var a in e.symbols){var s=e.symbols[a];if(s.group===m)for(var o in s.symbols){var u=s.symbols[o];if(u.power.lessThan(0))return w(r.expand(r.multiply(u.clone().toLinear(),e)),r.expand(r.multiply(u.clone().toLinear(),t)))}}return r.expand(r.subtract(e,t))};e.prototype={toString:function(){return this.LHS.toString()+"="+this.RHS.toString()},text:function(e){return this.LHS.text(e)+"="+this.RHS.text(e)},toLHS:function(){return w(this.LHS.clone(),this.RHS.clone())},clone:function(){return new e(this.LHS.clone(),this.RHS.clone())},sub:function(e,t){var r=this.clone();return r.LHS=r.LHS.sub(e.clone(),t.clone()),r.RHS=r.RHS.sub(e.clone(),t.clone()),r},isZero:function(){return t.Utils.evaluate(this.toLHS()).equals(0)},latex:function(e){return[this.LHS.latex(e),this.RHS.latex(e)].join("=")}},r.equals=function(t,r){return new e(t,r)};var y=function(t){if(t instanceof e)return t.toLHS();var n=t.split("=");void 0===n[1]&&(n[1]="0");var i=r.parse(n[0]),a=r.parse(n[1]);return w(i,a)},b=t.Utils.checkAll=function(e,t){for(var r=0;r<e.length;r++)if(t(e[r]))return!1;return!0},M=function(e,i){for(var o=0;o<e.length;o++)e[o]=y(e[o]);var u,c=e.length,p=new t.Matrix,h=new t.Matrix,m=!1;if(void 0===i){n.allLinear(e)||t.err("System must contain all linear equations!"),u=f(e[0]);for(var o=1;o<c;o++)u=u.concat(f(e[o]));u=t.Utils.arrayUnique(u).sort();for(var o=0;o<u.length;o++)nerdamer.setVar(u[o],"delete");for(var o=0;o<c;o++){for(var v=e[o],g=0;g<c;g++){var d=v.symbols[u[g]];p.set(o,g,d?d.multiplier:0)}var w=v.symbols["#"];h.set(o,0,new l(w?-w.multiplier:0))}}else for(u=i,m=!0,o=0;o<c;o++){h.set(o,0,new l(0));for(var v=r.expand(e[o]).collectSymbols(),g=0;g<i.length;g++){p.set(o,g,new l(0));for(var b=i[g],M=0;M<v.length;M++){for(var S=v[M],q=!1,E=0;E<i.length;E++)S.contains(i[E])&&(q&&t.err("Multiple variables found for term "+S),q=!0);if(S.contains(b)){var x=a(s(v,M),b);p.set(o,g,r.add(p.get(o,g),x[0]))}}}for(M=0;M<v.length;M++)h.set(o,0,r.add(h.get(o,0),v[M]))}p=p.invert();var U=p.multiply(h),N=[];return U.each(function(e,t){N.push([u[t],(m?r.expand(e):e).valueOf()])}),N},S=function(e,t,n,i){var a="-"===i?"subtract":"add",s=r.subtract(r.pow(t.clone(),l(2)),r.multiply(r.multiply(n.clone(),e.clone()),l(4))),o=r.pow(s,l(.5));return r.divide(r[a](t.clone().negate(),o),r.multiply(new l(2),n.clone()))},q=function(e,n,i,a){var s=a.text(),u=i.text(),l=n.text(),c=e.text(),p=r.parse(o("({1})^2-3*({0})*({2})",s,u,l)),h=r.parse(o("((2*({1})^3-9*({0})*({1})*({2})+27*({0})^2*({3}))^2-4*(({1})^2-3*({0})*({2}))^3)^(1/2)",s,u,l,c)),m=r.parse(o("((1/2)*(({4})+2*({1})^3-9*({0})*({1})*({2})+27*({0})^2*({3})))^(1/3)",s,u,l,c,h)),v={};f(m).map(function(e){v[e]=1});var g=t.Utils.block("PARSE2NUMBER",function(){return r.parse(m,v)});return 0===Number(p)&&0===Number(g)&&(m=r.parse(o("((1/2)*(-({4})+2*({1})^3-9*({0})*({1})*({2})+27*({0})^2*({3})))^(1/3)",s,u,l,c,h))),["-(b/(3*a))-C/(3*a)-(((b^2-3*a*c))/(3*a*C))","-(b/(3*a))+(C*(1+i*sqrt(3)))/(6*a)+((1-i*sqrt(3))*(b^2-3*a*c))/(6*a*C)".replace(/i/g,t.Settings.IMAGINARY),"-(b/(3*a))+(C*(1-i*sqrt(3)))/(6*a)+((1+i*sqrt(3))*(b^2-3*a*c))/(6*a*C)".replace(/i/g,t.Settings.IMAGINARY)].map(function(t,s){return r.parse(t,{a:a.clone(),b:i.clone(),c:n.clone(),d:e.clone(),C:m.clone()})})},E=function(e,n,i,a,s){var u={};t.Utils.arrayUnique(f(s).concat(f(a)).concat(f(i)).concat(f(n)).concat(f(e))).map(function(e){u[e]=1}),s=s.toString(),a=a.toString(),i=i.toString(),n=n.toString(),e=e.toString();var l,c,h,m,v,g,d,w,y;return l=r.parse(o("(8*({0})*({2})-3*({1})^2)/(8*({0})^2)",s,a,i)).toString(),c=r.parse(o("(({1})^3-4*({0})*({1})*({2})+8*({0})^2*({3}))/(8*({0})^3)",s,a,i,n)).toString(),h=r.parse(o("12*({0})*({4})-3*({1})*({3})+({2})^2",s,a,i,n,e)).toString(),m=r.parse(o("2*({2})^3-9*({1})*({2})*({3})+27*({1})^2*({4})+27*({0})*({3})^2-72*({0})*({2})*({4})",s,a,i,n,e)).toString(),v=r.parse(o("((({1})+(({1})^2-4*({0})^3)^(1/2))/2)^(1/3)",h,m)).toString(),p=r.parse(o("(1/2)*(-(2/3)*({1})+(1/(3*({0}))*(({2})+(({3})/({2})))))^(1/2)",s,l,v,h)).toString(),g=r.parse(o("-(({1})/(4*({0})))-({4})+(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))",s,a,l,c,p)),d=r.parse(o("-(({1})/(4*({0})))-({4})-(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))",s,a,l,c,p)),w=r.parse(o("-(({1})/(4*({0})))+({4})+(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))",s,a,l,c,p)),y=r.parse(o("-(({1})/(4*({0})))+({4})-(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))",s,a,l,c,p)),[g,d,w,y]},x=function(e,r){var n=[],i=t.Algebra.Factor.factor(e);return i.group===m&&i.each(function(e){e=l.unwrapPARENS(e),n=n.concat(N(e,r))}),n},U=function(e,n){return t.Utils.block("IGNORE_E",function(){var i,a,s,u,c,f,h,m;if(m=[],i=t.Utils.decompose_fn(e,n,!0),i.x.group===p){a=r.parse(i.x.power),s=Number(a),u=r.pow(r.divide(i.b.negate(),i.a),a.invert()),c=l.toPolarFormArray(u),f=c[0],c[1],h=f.toString(),a.toString();for(var v,g,d,w=0;w<s;w++)v=w,d=o("({0})*e^(2*{1}*pi*{2}*{3})",h,v,a,t.Settings.IMAGINARY),g=r.parse(d),m.push(g)}return m},!0)},N=function(s,o,f){if(s instanceof e){if(s.isZero())return[new l(0)];if(s.LHS.equals(o))return[s.RHS];if(s.RHS.equals(o))return[s.LHS]}if(s instanceof t.Vector&&(s=s.elements),o=o||"x",d(s))return M.apply(void 0,arguments);if(f=f||[],s.group===p&&s.contains(o))return f.push(new l(0)),f;if(s.group===m){var w=String(o);return s.each(function(e){e.contains(w)&&N(e,o,f)}),f}var A={},C=function(e,n){var i=c(e);if(!(void 0===e||"number"==typeof e&&isNaN(e)))if(d(e))f=f.concat(e);else if("null"!==e.valueOf()){if(i||(e=r.parse(e)),t.Settings.make_pi_conversions&&n){var a=r.divide(e.clone(),new l(Math.PI)),s=a.multiplier,o=Math.abs(s.num),u=Math.abs(s.den);o<10&&u<10&&(e=r.multiply(a,new l("pi")))}var p=e.toString();A[p]||f.push(e),A[p]=!0}},R=function(e){var r=u(e),n=Math.round(r(0)),i=r(n),a=i/Math.abs(i),s=[],o=t.Settings.ROOTS_PER_SIDE,l=2*o+1;s.push(Math.floor(n/2)),e.each(function(e){e.containsFunction("log")&&s.push(.1)});for(var c=n;c<t.Settings.SOLVE_RADIUS;c++){var f=r(.1*c),p=f/Math.abs(f);if(isNaN(f)||!isFinite(f)||s.length>o)break;p!==a&&s.push((c-1)/2),a=p}for(var c=n-1;c>-t.Settings.SOLVE_RADIUS;c--){var f=r(c),p=f/Math.abs(f);if(isNaN(f)||!isFinite(f)||s.length>l)break;p!==a&&s.push((c-1)/2),a=p}return s},P=function(e,t,r){var n,i=0,a=e;do{var s=t(a);if(0===a&&0===s){n=0;break}if(++i>200)return;n=a-s/r(a);var o=Math.abs(n-a);a=n}while(o>Number.EPSILON);return n},_=t.Utils.isSymbol(s)?s:y(s),I=t.Utils.variables(_),T=I.length;if(_.group===p||_.group===m&&_.contains(o))return[new l(0)];var k,L={},O=function(e){var n=e.clone();if(e.symbols)for(var i in e.symbols){var s=e.symbols[i],u=a(s,o),f=u[1].fname===t.Settings.SQRT,p=l.unwrapSQRT(u[1]),m=p.power.clone();if(!c(m)&&!m.equals(.5))if(m.den.gt(1)){if(f)return e=r.subtract(e,s.clone()),e=r.add(e,r.multiply(u[0].clone(),p)),O(e);var v=L[m.den];L[m.den]=v?v++:1}else{if(-1===m.sign()){var g=r.parse(o+"^"+Math.abs(m));return e.each(function(t,n){t.contains(o)&&(e.symbols[n]=r.multiply(t,g.clone()))}),L={},O(r.parse(e))}if(s.group===h){var d=t.Utils.arrayMin(t.Utils.keys(s.symbols));if(d<0){var g=r.parse(o+"^"+Math.abs(d)),w=new l(0);return n.each(function(e){w=r.add(w,r.multiply(e.clone(),g.clone()))},!0),w}}}}return e},F=function(e,n){n=n||new l(0),e=l.unwrapSQRT(r.expand(e));var i=0,a=e.length;if(e.group===v&&e.contains(o)&&e.isLinear()){e.distributeMultiplier();var s=new l(0);return e.each(function(e){e.contains(o)?(i++,s=r.add(s,e.clone())):n=r.subtract(n,e.clone())}),e=s,i!==a?F(e,n):[e,n]}if(e.group===m&&e.contains(o)&&e.isLinear()){if(e.multiplier.lessThan(0)&&(e.multiplier=e.multiplier.multiply(new t.Frac(-1)),n.multiplier=n.multiplier.multiply(new t.Frac(-1))),n.equals(0))return new l(0);var s=new l(1);return e.each(function(e){e.contains(o)?s=r.multiply(s,e.clone()):n=r.divide(n,e.clone())}),e=s,F(e,n)}if(!e.isLinear()&&e.contains(o)){var u=r.parse(e.power.clone().invert());return e=r.pow(e,u.clone()),n=r.pow(r.expand(n),u.clone()),F(e,n)}if(e.group===g||e.group===p||e.group===h)return[e,n]},D=function(e){var t=new l(0),n=new l(0);return e.each(function(e){e.contains(o,!0)?t=r.add(t,e.clone()):n=r.subtract(n,e.clone())}),[t,n]};if(_=O(_),_.equals(0))return[_];var B=t.Utils.keys(L);if(1===B.length&&(k=B[0],_.each(function(e,n){if(e.contains(o)){var i=a(e,o),s=i[1],u=s.power;u.den.gt(1)&&(s.power=u.multiply(new t.Frac(k)),_.symbols[n]=r.multiply(s,i[0]))}}),_=r.parse(_)),1===T)if(_.isPoly(!0)){var j=t.Utils.getCoeffs(_,o),V=j.length-1,H=!1;if(I[0]===o){if(b(j,function(e){return e.group!==t.groups.N})){var G=t.Algebra.proots(_);b(G,function(e){return!t.Utils.isInt(e)})&&(H=!0,G.map(function(e){C(new l(e))}))}if(!H)if(1===V)C(r.divide(j[0],j[1].negate()));else if(2===V)C(r.expand(S.apply(void 0,j))),j.push("-"),C(r.expand(S.apply(void 0,j)));else if(3===V)C(q.apply(void 0,j));else{var z=U(_,o);0===z.length&&(z=x(_,o)),z.length>0?C(z):n.proots(_).map(C)}}}else!function(e){for(var t=e.hasTrig(),r=R(e),n=r.length,a=u(e.clone()),s=u(i.diff(e.clone())),o=0;o<n;o++){var l=r[o];C(P(l,a,s),t)}f.sort()}(_);else if(!_.hasFunc(o)&&_.isComposite())try{var j=t.Utils.getCoeffs(_,o),X=j.length,V=X-1;switch(V){case 0:var Z=D(_),Q=Z[0],Y=Z[1];Q.group===t.groups.EX&&C(r.parse(t.Utils.format("log(({0})/({2}))/log({1})",Y,Q.value,Q.multiplier)));break;case 1:C(r.divide(j[0],j[1].negate()));break;case 2:C(S.apply(void 0,j)),j.push("-"),C(S.apply(void 0,j));break;case 3:C(q.apply(void 0,j));break;case 4:C(E.apply(void 0,j));break;default:C(U(_,o)),0===f.length&&C(x(_,o))}}catch(e){}else try{var W=F(_),Q=W[0],Y=W[1];Q.group===g&&("abs"===Q.fname?(f.push(Y.clone()),f.push(Y.negate())):f.push(r.subtract(Q,Y)))}catch(e){try{if(_.group===m)f.push(0);else if(_.group===v){var Z=D(_),Q=Z[0],Y=Z[1];if(Q.group===t.groups.EX&&Q.value===o){var $=Q.power.clone().invert();f.push(r.pow(Y,$))}}}catch(e){}}return k&&(f=f.map(function(e){return r.pow(e,new l(k))})),f};t.Expression.prototype.solveFor=function(e){return N(t.Utils.isSymbol(this.symbol)?this.symbol:this.symbol.toLHS(),e).map(function(e){return new t.Expression(e)})},t.Expression.prototype.expand=function(){if(this.symbol instanceof e){var n=this.symbol.clone();return n.RHS=r.expand(n.RHS),n.LHS=r.expand(n.LHS),new t.Expression(n)}return new t.Expression(r.expand(this.symbol))},t.Expression.prototype.variables=function(){return this.symbol instanceof e?t.Utils.arrayUnique(f(this.symbol.LHS).concat(f(this.symbol.RHS))):f(this.symbol)};var A=function(e,t){return r.equals(e,t)};t.Equation=e,nerdamer.register([{name:"solveEquations",parent:"nerdamer",numargs:-1,visible:!0,build:function(){return N}},{name:"solve",parent:"Solve",numargs:2,visible:!0,build:function(){return t.Solve.solve}},{name:"setEquation",parent:"Solve",visible:!0,build:function(){return A}}]),nerdamer.api()}()},495:function(e,t,r){nerdamer=r(223),r(242),r(241),function(){var e=nerdamer.getCore(),t=e.PARSER,r=e.Symbol,n=e.Utils.format,i=e.Utils.isVector,a=e.groups.S,s=(e.groups.EX,e.groups.CP),o=e.groups.CB,u=e.groups.FN;e.Settings.Laplace_integration_depth=40,r.prototype.findFunction=function(e){if(this.group===u&&this.fname===e)return this.clone();var t;if(this.symbols)for(var r in this.symbols)if(t=this.symbols[r].findFunction(e))break;return t};var l=e.Extra={version:"1.4.1",LaPlace:{transform:function(i,s,c){s=s.toString(),i=r.unwrapSQRT(i,!0);var f,p=i.stripVar(s),h=i.group;if(i=t.divide(i,p.clone()),i.isConstant()||!i.contains(s,!0))f=t.parse(n("({0})/({1})",i,c));else if(h===a&&e.Utils.isInt(i.power)){var m=String(i.power);f=t.parse(n("factorial({0})/({1})^({0}+1)",m,c))}else if(i.group===a&&i.power.equals(.5))f=t.parse(n("sqrt(pi)/(2*({0})^(3/2))",c));else if(i.isComposite())f=new r(0),i.each(function(e){f=t.add(f,l.LaPlace.transform(e,s,c))},!0);else if(!i.isE()||i.power.group!==a&&i.power.group!==o){var v=["sin","cos","sinh","cosh"];if(i.group!==u||-1===v.indexOf(i.fname)||i.args[0].group!==a&&i.args[0].group!==o){var g=e.Settings.integration_depth<e.Settings.Laplace_integration_depth;if(g){var d=e.Settings.integration_depth;e.Settings.integration_depth=e.Settings.Laplace_integration_depth}e.Utils.block("PARSE2NUMBER",function(){var n=s,a=i.sub(s,n),o=t.parse("e^(-"+c+"*"+n+")*"+a);f=e.Calculus.integrate(o,n),f.hasIntegral()&&t.error("Unable to compute transform"),f=f.sub(s,0),f=t.expand(t.multiply(f,new r(-1))),f=f.sub(n,s)},!1),f=e.Utils.block("PARSE2NUMBER",function(){return t.parse(f)},!0),g&&(e.Settings.integration_depth=d)}else{var w=i.args[0].stripVar(s);switch(i.fname){case"sin":f=t.parse(n("({0})/(({1})^2+({0})^2)",w,c));break;case"cos":f=t.parse(n("({1})/(({1})^2+({0})^2)",w,c));break;case"sinh":f=t.parse(n("({0})/(({1})^2-({0})^2)",w,c));break;case"cosh":f=t.parse(n("({1})/(({1})^2-({0})^2)",w,c))}}}else{var w=i.power.stripVar(s);f=t.parse(n("1/(({1})-({0}))",w,c))}return t.multiply(f,p)},inverse:function(i,u,l){return e.Utils.block("POSITIVE_MULTIPLIERS",function(){if(i.group===a||i.group===o||i.group===s){var c,f,p,h,m,v,g,d,w=function(){h=t.multiply(h,c),h.multiplier=h.multiplier.multiply(i.multiplier),h=t.divide(h,m.a)};if(g=i.multiplier.clone(),i.toUnitMultiplier(),c=i.getNum(),f=i.getDenom().toUnitMultiplier(),f.group===s?(d=f.power.clone(),f.toLinear()):d=new e.Frac(1),p=u.toString(),m=e.Utils.decompose_fn(f,p,!0),e.Utils.decompose_fn(t.expand(c.clone()),p,!0),c.multiplier=c.multiplier.multiply(g),(f.group===a||f.group===o)&&m.x.value===p&&m.b.equals(0)&&e.Utils.isInt(m.x.power)){var y,v;v=m.x.power-1,y=e.Math2.factorial(v),h=t.divide(t.pow(l,new r(v)),new r(y)),w()}else if(f.group===s&&d.equals(1)){if(m.x.isLinear()&&!c.contains(p))l=t.divide(l,m.a.clone()),h=t.pow(new r("e"),t.multiply(l,m.b.negate())),w();else if(m.x.group===a&&m.x.power.equals(2))if(c.contains(p)){var b=new r(1);if(c.group===o){var M=new r(1);c.each(function(e){e.contains(p)?M=t.multiply(M,e):b=t.multiply(b,e)}),c=M}var S,q,E,x,U,N,A=e.Utils.decompose_fn(c,p,!0);if(S=A.a,q=A.b,E=S.containsFunction("sin"),U=S.containsFunction("cos"),x=q.containsFunction("cos"),N=q.containsFunction("sin"),A.x.value===p&&A.x.isLinear()&&!(E&&x||U||N))h=t.parse(n("(({1})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})",l,A.a,m.a,m.b));else if(E&&x){var C,R;if(C=S.findFunction("sin"),R=q.findFunction("cos"),C.args[0].equals(R.args[0])&&!C.args[0].contains(p)){var P,_,I,T;P=t.divide(q,R.toUnitMultiplier()).toString(),_=C.args[0].toString(),I=m.b,T=t.divide(S,C.toUnitMultiplier()),k="(({1})*({2})*cos({3})*sin(sqrt({4})*({0})))/sqrt({4})+({1})*sin({3})*({5})*cos(sqrt({4})*({0}))",h=t.parse(n(k,l,b,P,_,I,T))}}}else h=t.parse(n("(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/sqrt(({2})*({3}))",l,c,m.a,m.b))}else if(m.x.power.num&&m.x.power.num.equals(3)&&m.x.power.den.equals(2)&&c.contains("sqrt(pi)")&&!c.contains(p)&&c.isLinear()){var P=t.divide(c.clone(),t.parse("sqrt(pi)"));h=t.parse(n("(2*({2})*sqrt({0}))/({1})",l,m.a,P,c))}else if(d.equals(2)&&m.x.power.equals(2)){var b,I,k;if(c.contains(p))if(A=e.Utils.decompose_fn(t.expand(c.clone()),p,!0),A.x.isComposite()){var L=[],O=c.collectSymbols(function(t){t=r.unwrapPARENS(t);var n=e.Utils.decompose_fn(t,p,!0);return n.symbol=t,n}).sort(function(e,t){var r;return r=e.x.value!==p?0:e.x.power,(t.x.value!==p?0:t.x.power)-r});b=new r(-1);for(var F=0;F<O.length;F++){var D=O[F];D.x.value===p?L.push(D):b=t.multiply(b,D.symbol)}L[0].x.power.equals(2)&&L[1].x.power.equals(1)&&L[1].b.equals(0)&&!L[0].b.equals(0)&&(P=L[0].a.negate(),k="-(({1})*({2})*({5})*({0})*sin((sqrt(({4})*({5}))*({0}))/({4})))/(2*({4})^2*sqrt(({4})*({5})))-(({1})*({3})*({0})*sin((sqrt(({4})*({5}))*({0}))/({4})))/(2*({4})*sqrt(({4})*({5})))+(({1})*({2})*cos((sqrt(({4})*({5}))*({0}))/({4})))/({4})^2",h=t.parse(n(k,l,b,P,L[0].b,m.a,m.b)))}else A.x.isLinear()?(b=t.divide(A.a,new r(2)),k="(({1})*({0})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*sqrt(({2})*({3})))",h=t.parse(n(k,l,b,m.a,m.b))):A.x.power.equals(2)&&(A.b.equals(0)?(b=t.divide(A.a,new r(2)),k="(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*sqrt(({2})*({3})))+(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})^2",h=t.parse(n(k,l,b,m.a,m.b))):(b=t.divide(A.a,new r(2)),I=A.b.negate(),k="-((({2})*({4})-2*({1})*({3}))*sin((sqrt(({2})*({3}))*({0}))/({2})))/(2*({2})*({3})*sqrt(({2})*({3})))+(({4})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/(2*({2})*({3}))+(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})^2",h=t.parse(n(k,l,b,m.a,m.b,I))));else b=t.divide(c,new r(2)),k="(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({3})*sqrt(({2})*({3})))-(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*({3}))",h=t.parse(n(k,l,b,m.a,m.b))}}return h||(h=t.symfunction("ilt",arguments)),h},!0)}},Statistics:{frequencyMap:function(e){for(var t={},r=0,n=e.length;r<n;r++){var i=e[r],a=i.toString();t[a]||(t[a]=0),t[a]++}return t},sort:function(e){return e.sort(function(e,r){return e.isConstant()&&r.isConstant()||t.error("Unable to sort! All values must be numeric"),e.multiplier.subtract(r.multiplier)})},count:function(e){return new r(e.length)},sum:function(e,n){for(var i=new r(0),a=0,s=e.length;a<s;a++){var o=e[a].clone();i=n?t.add(t.pow(t.subtract(o,n.clone()),new r(2)),i):t.add(o,i)}return i},mean:function(){var e=[].slice.call(arguments);return i(e[0])?l.Statistics.mean.apply(this,e[0].elements):t.divide(l.Statistics.sum(e),l.Statistics.count(e))},median:function(){var r,n=[].slice.call(arguments);if(i(n[0]))return l.Statistics.median.apply(this,n[0].elements);try{var a=l.Statistics.sort(n),s=n.length;if(e.Utils.even(s)){var o=s/2;r=l.Statistics.mean(a[o-1],a[o])}else r=a[Math.floor(s/2)]}catch(e){r=t.symfunction("median",n)}return r},mode:function(){var r,n=[].slice.call(arguments);if(i(n[0]))return l.Statistics.mode.apply(this,n[0].elements);var a,s=l.Statistics.frequencyMap(n),o=[],u=0,c=0,f=[];if(1===e.Utils.keys(s).length)return n[0];for(var p in s){var h=s[p],m=0===u;m&&(a=h),m||h>o[1]?(o[0]=p,o[1]=h):h===o[1]&&f.push(p),h===a&&c++,u++}return f.length>0?(f.push(o[0]),r=t.symfunction("mode",f.sort())):r=c===u?t.symfunction("mode",n):t.parse(o[0]),r},gVariance:function(e,r){var n=l.Statistics.mean.apply(l.Statistics,r),i=l.Statistics.sum(r,n);return t.multiply(e,i)},variance:function(){var e=[].slice.call(arguments);if(i(e[0]))return l.Statistics.variance.apply(this,e[0].elements);var n=t.divide(new r(1),l.Statistics.count(e));return l.Statistics.gVariance(n,e)},sampleVariance:function(){var e=[].slice.call(arguments);if(i(e[0]))return l.Statistics.sampleVariance.apply(this,e[0].elements);var n=t.divide(new r(1),t.subtract(l.Statistics.count(e),new r(1)));return l.Statistics.gVariance(n,e)},standardDeviation:function(){var e=[].slice.call(arguments);return i(e[0])?l.Statistics.standardDeviation.apply(this,e[0].elements):t.pow(l.Statistics.variance.apply(l.Statistics,e),new r(.5))},sampleStandardDeviation:function(){var e=[].slice.call(arguments);return i(e[0])?l.Statistics.sampleStandardDeviation.apply(this,e[0].elements):t.pow(l.Statistics.sampleVariance.apply(l.Statistics,e),new r(.5))},zScore:function(e,r,n){return t.divide(t.subtract(e,r),n)}},Units:{table:{foot:"12 inch",meter:"100 cm",decimeter:"10 cm"}}};nerdamer.register([{name:"laplace",visible:!0,numargs:3,build:function(){return l.LaPlace.transform}},{name:"ilt",visible:!0,numargs:3,build:function(){return l.LaPlace.inverse}},{name:"mean",visible:!0,numargs:-1,build:function(){return l.Statistics.mean}},{name:"median",visible:!0,numargs:-1,build:function(){return l.Statistics.median}},{name:"mode",visible:!0,numargs:-1,build:function(){return l.Statistics.mode}},{name:"smpvar",visible:!0,numargs:-1,build:function(){return l.Statistics.sampleVariance}},{name:"variance",visible:!0,numargs:-1,build:function(){return l.Statistics.variance}},{name:"smpstdev",visible:!0,numargs:-1,build:function(){return l.Statistics.sampleStandardDeviation}},{name:"stdev",visible:!0,numargs:-1,build:function(){return l.Statistics.standardDeviation}},{name:"zscore",visible:!0,numargs:3,build:function(){return l.Statistics.zScore}}]),nerdamer.api()}()}});